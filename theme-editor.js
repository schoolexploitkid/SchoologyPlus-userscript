(()=>{var e={7655:(e,t,o)=>{var n,r,a;!function(i){"use strict";r=[o(1669)],n=function(e,t){var o={beforeShow:d,move:d,change:d,show:d,hide:d,color:!1,flat:!1,showInput:!1,allowEmpty:!1,showButtons:!0,clickoutFiresChange:!0,showInitial:!1,showPalette:!1,showPaletteOnly:!1,hideAfterPaletteSelect:!1,togglePaletteOnly:!1,showSelectionPalette:!0,localStorageKey:!1,appendTo:"body",maxSelectionSize:7,cancelText:"cancel",chooseText:"choose",togglePaletteMoreText:"more",togglePaletteLessText:"less",clearText:"Clear Color Selection",noColorSelectedText:"No Color Selected",preferredFormat:!1,className:"",containerClassName:"",replacerClassName:"",showAlpha:!1,theme:"sp-light",palette:[["#ffffff","#000000","#ff0000","#ff8000","#ffff00","#008000","#0000ff","#4b0082","#9400d3"]],selectionPalette:[],disabled:!1,offset:null},n=[],r=!!/msie/i.exec(window.navigator.userAgent),a=function(){function e(e,t){return!!~(""+e).indexOf(t)}var t=document.createElement("div").style;return t.cssText="background-color:rgba(0,0,0,.5)",e(t.backgroundColor,"rgba")||e(t.backgroundColor,"hsla")}(),i=["<div class='sp-replacer'>","<div class='sp-preview'><div class='sp-preview-inner'></div></div>","<div class='sp-dd'>&#9660;</div>","</div>"].join(""),l=function(){var e="";if(r)for(var t=1;t<=6;t++)e+="<div class='sp-"+t+"'></div>";return["<div class='sp-container sp-hidden'>","<div class='sp-palette-container'>","<div class='sp-palette sp-thumb sp-cf'></div>","<div class='sp-palette-button-container sp-cf'>","<button type='button' class='sp-palette-toggle'></button>","</div>","</div>","<div class='sp-picker-container'>","<div class='sp-top sp-cf'>","<div class='sp-fill'></div>","<div class='sp-top-inner'>","<div class='sp-color'>","<div class='sp-sat'>","<div class='sp-val'>","<div class='sp-dragger'></div>","</div>","</div>","</div>","<div class='sp-clear sp-clear-display'>","</div>","<div class='sp-hue'>","<div class='sp-slider'></div>",e,"</div>","</div>","<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>","</div>","<div class='sp-input-container sp-cf'>","<input class='sp-input' type='text' spellcheck='false'  />","</div>","<div class='sp-initial sp-thumb sp-cf'></div>","<div class='sp-button-container sp-cf'>","<a class='sp-cancel' href='#'></a>","<button type='button' class='sp-choose'></button>","</div>","</div>","</div>"].join("")}();function c(t,o,n,r){for(var i=[],l=0;l<t.length;l++){var c=t[l];if(c){var s=tinycolor(c),d=s.toHsl().l<.5?"sp-thumb-el sp-thumb-dark":"sp-thumb-el sp-thumb-light";d+=tinycolor.equals(o,c)?" sp-thumb-active":"";var u=s.toString(r.preferredFormat||"rgb"),g=a?"background-color:"+s.toRgbString():"filter:"+s.toFilter();i.push('<span title="'+u+'" data-color="'+s.toRgbString()+'" class="'+d+'"><span class="sp-thumb-inner" style="'+g+';"></span></span>')}else{i.push(e("<div />").append(e('<span data-color="" style="background-color:transparent;" class="sp-clear-display"></span>').attr("title",r.noColorSelectedText)).html())}}return"<div class='sp-cf "+n+"'>"+i.join("")+"</div>"}function s(s,d){var p,f,b,v,y=function(t,n){var r=e.extend({},o,t);return r.callbacks={move:g(r.move,n),change:g(r.change,n),show:g(r.show,n),hide:g(r.hide,n),beforeShow:g(r.beforeShow,n)},r}(d,s),E=y.flat,w=y.showSelectionPalette,S=y.localStorageKey,x=y.theme,T=y.callbacks,A=(p=Ge,f=10,function(){var e=this,t=arguments,o=function(){v=null,p.apply(e,t)};b&&clearTimeout(v),!b&&v||(v=setTimeout(o,f))}),C=!1,_=!1,k=0,I=0,L=0,R=0,O=0,N=0,D=0,M=0,B=0,P=0,F=1,H=[],U=[],V={},j=y.selectionPalette.slice(0),G=y.maxSelectionSize,q="sp-dragging",$=null,Y=s.ownerDocument,z=(Y.body,e(s)),W=!1,K=e(l,Y).addClass(x),J=K.find(".sp-picker-container"),X=K.find(".sp-color"),Z=K.find(".sp-dragger"),Q=K.find(".sp-hue"),ee=K.find(".sp-slider"),te=K.find(".sp-alpha-inner"),oe=K.find(".sp-alpha"),ne=K.find(".sp-alpha-handle"),re=K.find(".sp-input"),ae=K.find(".sp-palette"),ie=K.find(".sp-initial"),le=K.find(".sp-cancel"),ce=K.find(".sp-clear"),se=K.find(".sp-choose"),de=K.find(".sp-palette-toggle"),ue=z.is("input"),ge=ue&&"color"===z.attr("type")&&h(),me=ue&&!E,he=me?e(i).addClass(x).addClass(y.className).addClass(y.replacerClassName):e([]),pe=me?he:z,fe=he.find(".sp-preview-inner"),be=y.color||ue&&z.val(),ve=!1,ye=y.preferredFormat,Ee=!y.showButtons||y.clickoutFiresChange,we=!be,Se=y.allowEmpty&&!ge;function xe(){if(y.showPaletteOnly&&(y.showPalette=!0),de.text(y.showPaletteOnly?y.togglePaletteMoreText:y.togglePaletteLessText),y.palette){H=y.palette.slice(0),U=e.isArray(H[0])?H:[H],V={};for(var t=0;t<U.length;t++)for(var o=0;o<U[t].length;o++){var n=tinycolor(U[t][o]).toRgbString();V[n]=!0}}K.toggleClass("sp-flat",E),K.toggleClass("sp-input-disabled",!y.showInput),K.toggleClass("sp-alpha-enabled",y.showAlpha),K.toggleClass("sp-clear-enabled",Se),K.toggleClass("sp-buttons-disabled",!y.showButtons),K.toggleClass("sp-palette-buttons-disabled",!y.togglePaletteOnly),K.toggleClass("sp-palette-disabled",!y.showPalette),K.toggleClass("sp-palette-only",y.showPaletteOnly),K.toggleClass("sp-initial-disabled",!y.showInitial),K.addClass(y.className).addClass(y.containerClassName),Ge()}function Te(){if(S&&window.localStorage){try{var t=window.localStorage[S].split(",#");t.length>1&&(delete window.localStorage[S],e.each(t,(function(e,t){Ae(t)})))}catch(e){}try{j=window.localStorage[S].split(";")}catch(e){}}}function Ae(t){if(w){var o=tinycolor(t).toRgbString();if(!V[o]&&-1===e.inArray(o,j))for(j.push(o);j.length>G;)j.shift();if(S&&window.localStorage)try{window.localStorage[S]=j.join(";")}catch(e){}}}function Ce(){var t=Fe(),o=e.map(U,(function(e,o){return c(e,t,"sp-palette-row sp-palette-row-"+o,y)}));Te(),j&&o.push(c(function(){var e=[];if(y.showPalette)for(var t=0;t<j.length;t++){var o=tinycolor(j[t]).toRgbString();V[o]||e.push(j[t])}return e.reverse().slice(0,y.maxSelectionSize)}(),t,"sp-palette-row sp-palette-row-selection",y)),ae.html(o.join(""))}function _e(){if(y.showInitial){var e=ve,t=Fe();ie.html(c([e,t],t,"sp-palette-row-initial",y))}}function ke(){(I<=0||k<=0||R<=0)&&Ge(),_=!0,K.addClass(q),$=null,z.trigger("dragstart.spectrum",[Fe()])}function Ie(){_=!1,K.removeClass(q),z.trigger("dragstop.spectrum",[Fe()])}function Le(){var e=re.val();if(null!==e&&""!==e||!Se){var t=tinycolor(e);t.isValid()?(Pe(t),He(),je()):re.addClass("sp-validation-error")}else Pe(null),He(),je()}function Re(){C?Me():Oe()}function Oe(){var t=e.Event("beforeShow.spectrum");C?Ge():(z.trigger(t,[Fe()]),!1===T.beforeShow(Fe())||t.isDefaultPrevented()||(function(){for(var e=0;e<n.length;e++)n[e]&&n[e].hide()}(),C=!0,e(Y).on("keydown.spectrum",Ne),e(Y).on("click.spectrum",De),e(window).on("resize.spectrum",A),he.addClass("sp-active"),K.removeClass("sp-hidden"),Ge(),Ue(),ve=Fe(),_e(),T.show(ve),z.trigger("show.spectrum",[ve])))}function Ne(e){27===e.keyCode&&Me()}function De(e){2!=e.button&&(_||(Ee?je(!0):Be(),Me()))}function Me(){C&&!E&&(C=!1,e(Y).off("keydown.spectrum",Ne),e(Y).off("click.spectrum",De),e(window).off("resize.spectrum",A),he.removeClass("sp-active"),K.addClass("sp-hidden"),T.hide(Fe()),z.trigger("hide.spectrum",[Fe()]))}function Be(){Pe(ve,!0),je(!0)}function Pe(e,t){var o,n;tinycolor.equals(e,Fe())?Ue():(!e&&Se?we=!0:(we=!1,n=(o=tinycolor(e)).toHsv(),M=n.h%360/360,B=n.s,P=n.v,F=n.a),Ue(),o&&o.isValid()&&!t&&(ye=y.preferredFormat||o.getFormat()))}function Fe(e){return e=e||{},Se&&we?null:tinycolor.fromRatio({h:M,s:B,v:P,a:Math.round(1e3*F)/1e3},{format:e.format||ye})}function He(){Ue(),T.move(Fe()),z.trigger("move.spectrum",[Fe()])}function Ue(){re.removeClass("sp-validation-error"),Ve();var e=tinycolor.fromRatio({h:M,s:1,v:1});X.css("background-color",e.toHexString());var t=ye;F<1&&(0!==F||"name"!==t)&&("hex"!==t&&"hex3"!==t&&"hex6"!==t&&"name"!==t||(t="rgb"));var o=Fe({format:t}),n="";if(fe.removeClass("sp-clear-display"),fe.css("background-color","transparent"),!o&&Se)fe.addClass("sp-clear-display");else{var i=o.toHexString(),l=o.toRgbString();if(a||1===o.alpha?fe.css("background-color",l):(fe.css("background-color","transparent"),fe.css("filter",o.toFilter())),y.showAlpha){var c=o.toRgb();c.a=0;var s=tinycolor(c).toRgbString(),d="linear-gradient(left, "+s+", "+i+")";r?te.css("filter",tinycolor(s).toFilter({gradientType:1},i)):(te.css("background","-webkit-"+d),te.css("background","-moz-"+d),te.css("background","-ms-"+d),te.css("background","linear-gradient(to right, "+s+", "+i+")"))}n=o.toString(t)}y.showInput&&re.val(n),y.showPalette&&Ce(),_e()}function Ve(){var e=B,t=P;if(Se&&we)ne.hide(),ee.hide(),Z.hide();else{ne.show(),ee.show(),Z.show();var o=e*k,n=I-t*I;o=Math.max(-L,Math.min(k-L,o-L)),n=Math.max(-L,Math.min(I-L,n-L)),Z.css({top:n+"px",left:o+"px"});var r=F*O;ne.css({left:r-N/2+"px"});var a=M*R;ee.css({top:a-D+"px"})}}function je(e){var t=Fe(),o="",n=!tinycolor.equals(t,ve);t&&(o=t.toString(ye),Ae(t)),ue&&z.val(o),e&&n&&(T.change(t),z.trigger("change",[t]))}function Ge(){C&&(k=X.width(),I=X.height(),L=Z.height(),Q.width(),R=Q.height(),D=ee.height(),O=oe.width(),N=ne.width(),E||(K.css("position","absolute"),y.offset?K.offset(y.offset):K.offset(function(t,o){var n=0,r=t.outerWidth(),a=t.outerHeight(),i=o.outerHeight(),l=t[0].ownerDocument,c=l.documentElement,s=c.clientWidth+e(l).scrollLeft(),d=c.clientHeight+e(l).scrollTop(),u=o.offset(),g=u.left,m=u.top;return m+=i,g-=Math.min(g,g+r>s&&s>r?Math.abs(g+r-s):0),{top:m-=Math.min(m,m+a>d&&d>a?Math.abs(a+i-n):n),bottom:u.bottom,left:g,right:u.right,width:u.width,height:u.height}}(K,pe))),Ve(),y.showPalette&&Ce(),z.trigger("reflow.spectrum"))}function qe(){Me(),W=!0,z.attr("disabled",!0),pe.addClass("sp-disabled")}!function(){if(r&&K.find("*:not(input)").attr("unselectable","on"),xe(),me&&z.after(he).hide(),Se||ce.hide(),E)z.after(K).hide();else{var t="parent"===y.appendTo?z.parent():e(y.appendTo);1!==t.length&&(t=e("body")),t.append(K)}function o(t){return t.data&&t.data.ignore?(Pe(e(t.target).closest(".sp-thumb-el").data("color")),He()):(Pe(e(t.target).closest(".sp-thumb-el").data("color")),He(),y.hideAfterPaletteSelect?(je(!0),Me()):je()),!1}Te(),pe.on("click.spectrum touchstart.spectrum",(function(t){W||Re(),t.stopPropagation(),e(t.target).is("input")||t.preventDefault()})),(z.is(":disabled")||!0===y.disabled)&&qe(),K.click(u),re.change(Le),re.on("paste",(function(){setTimeout(Le,1)})),re.keydown((function(e){13==e.keyCode&&Le()})),le.text(y.cancelText),le.on("click.spectrum",(function(e){e.stopPropagation(),e.preventDefault(),Be(),Me()})),ce.attr("title",y.clearText),ce.on("click.spectrum",(function(e){e.stopPropagation(),e.preventDefault(),we=!0,He(),E&&je(!0)})),se.text(y.chooseText),se.on("click.spectrum",(function(e){e.stopPropagation(),e.preventDefault(),r&&re.is(":focus")&&re.trigger("change"),!re.hasClass("sp-validation-error")&&(je(!0),Me())})),de.text(y.showPaletteOnly?y.togglePaletteMoreText:y.togglePaletteLessText),de.on("click.spectrum",(function(e){e.stopPropagation(),e.preventDefault(),y.showPaletteOnly=!y.showPaletteOnly,y.showPaletteOnly||E||K.css("left","-="+(J.outerWidth(!0)+5)),xe()})),m(oe,(function(e,t,o){F=e/O,we=!1,o.shiftKey&&(F=Math.round(10*F)/10),He()}),ke,Ie),m(Q,(function(e,t){M=parseFloat(t/R),we=!1,y.showAlpha||(F=1),He()}),ke,Ie),m(X,(function(e,t,o){if(o.shiftKey){if(!$){var n=B*k,r=I-P*I,a=Math.abs(e-n)>Math.abs(t-r);$=a?"x":"y"}}else $=null;var i=!$||"y"===$;(!$||"x"===$)&&(B=parseFloat(e/k)),i&&(P=parseFloat((I-t)/I)),we=!1,y.showAlpha||(F=1),He()}),ke,Ie),be?(Pe(be),Ue(),ye=y.preferredFormat||tinycolor(be).format,Ae(be)):Ue(),E&&Oe();var n=r?"mousedown.spectrum":"click.spectrum touchstart.spectrum";ae.on(n,".sp-thumb-el",o),ie.on(n,".sp-thumb-el:nth-child(1)",{ignore:!0},o)}();var $e={show:Oe,hide:Me,toggle:Re,reflow:Ge,option:function(o,n){return o===t?e.extend({},y):n===t?y[o]:(y[o]=n,"preferredFormat"===o&&(ye=y.preferredFormat),void xe())},enable:function(){W=!1,z.attr("disabled",!1),pe.removeClass("sp-disabled")},disable:qe,offset:function(e){y.offset=e,Ge()},set:function(e){Pe(e),je()},get:Fe,destroy:function(){z.show(),pe.off("click.spectrum touchstart.spectrum"),K.remove(),he.remove(),n[$e.id]=null},container:K};return $e.id=n.push($e)-1,$e}function d(){}function u(e){e.stopPropagation()}function g(e,t){var o=Array.prototype.slice,n=o.call(arguments,2);return function(){return e.apply(t,n.concat(o.call(arguments)))}}function m(t,o,n,a){o=o||function(){},n=n||function(){},a=a||function(){};var i=document,l=!1,c={},s=0,d=0,u="ontouchstart"in window,g={};function m(e){e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),e.returnValue=!1}function h(e){if(l){if(r&&i.documentMode<9&&!e.button)return p();var n=e.originalEvent&&e.originalEvent.touches&&e.originalEvent.touches[0],a=n&&n.pageX||e.pageX,g=n&&n.pageY||e.pageY,h=Math.max(0,Math.min(a-c.left,d)),f=Math.max(0,Math.min(g-c.top,s));u&&m(e),o.apply(t,[h,f,e])}}function p(){l&&(e(i).off(g),e(i.body).removeClass("sp-dragging"),setTimeout((function(){a.apply(t,arguments)}),0)),l=!1}g.selectstart=m,g.dragstart=m,g["touchmove mousemove"]=h,g["touchend mouseup"]=p,e(t).on("touchstart mousedown",(function(o){(o.which?3==o.which:2==o.button)||l||!1!==n.apply(t,arguments)&&(l=!0,s=e(t).height(),d=e(t).width(),c=e(t).offset(),e(i).on(g),e(i.body).addClass("sp-dragging"),h(o),m(o))}))}function h(){return e.fn.spectrum.inputTypeColorSupport()}var p="spectrum.id";e.fn.spectrum=function(t,o){if("string"==typeof t){var r=this,a=Array.prototype.slice.call(arguments,1);return this.each((function(){var o=n[e(this).data(p)];if(o){var i=o[t];if(!i)throw new Error("Spectrum: no such method: '"+t+"'");"get"==t?r=o.get():"container"==t?r=o.container:"option"==t?r=o.option.apply(o,a):"destroy"==t?(o.destroy(),e(this).removeData(p)):i.apply(o,a)}})),r}return this.spectrum("destroy").each((function(){var o=s(this,e.extend({},e(this).data(),t));e(this).data(p,o.id)}))},e.fn.spectrum.load=!0,e.fn.spectrum.loadOpts={},e.fn.spectrum.draggable=m,e.fn.spectrum.defaults=o,e.fn.spectrum.inputTypeColorSupport=function t(){if(void 0===t._cachedResult){var o=e("<input type='color'/>")[0];t._cachedResult="color"===o.type&&""!==o.value}return t._cachedResult},e.spectrum={},e.spectrum.localization={},e.spectrum.palettes={},e.fn.spectrum.processNativeColorInputs=function(){var t=e("input[type=color]");t.length&&!h()&&t.spectrum({preferredFormat:"hex6"})},function(){var e=/^[\s,#]+/,t=/\s+$/,o=0,n=Math,r=n.round,a=n.min,i=n.max,l=n.random,c=function(l,s){if(s=s||{},(l=l||"")instanceof c)return l;if(!(this instanceof c))return new c(l,s);var d=function(o){var r={r:0,g:0,b:0},l=1,c=!1,s=!1;return"string"==typeof o&&(o=function(o){o=o.replace(e,"").replace(t,"").toLowerCase();var n,r=!1;if(C[o])o=C[o],r=!0;else if("transparent"==o)return{r:0,g:0,b:0,a:0,format:"name"};return(n=F.rgb.exec(o))?{r:n[1],g:n[2],b:n[3]}:(n=F.rgba.exec(o))?{r:n[1],g:n[2],b:n[3],a:n[4]}:(n=F.hsl.exec(o))?{h:n[1],s:n[2],l:n[3]}:(n=F.hsla.exec(o))?{h:n[1],s:n[2],l:n[3],a:n[4]}:(n=F.hsv.exec(o))?{h:n[1],s:n[2],v:n[3]}:(n=F.hsva.exec(o))?{h:n[1],s:n[2],v:n[3],a:n[4]}:(n=F.hex8.exec(o))?{a:D(n[1]),r:R(n[2]),g:R(n[3]),b:R(n[4]),format:r?"name":"hex8"}:(n=F.hex6.exec(o))?{r:R(n[1]),g:R(n[2]),b:R(n[3]),format:r?"name":"hex"}:!!(n=F.hex3.exec(o))&&{r:R(n[1]+""+n[1]),g:R(n[2]+""+n[2]),b:R(n[3]+""+n[3]),format:r?"name":"hex"}}(o)),"object"==typeof o&&(o.hasOwnProperty("r")&&o.hasOwnProperty("g")&&o.hasOwnProperty("b")?(d=o.r,u=o.g,g=o.b,r={r:255*I(d,255),g:255*I(u,255),b:255*I(g,255)},c=!0,s="%"===String(o.r).substr(-1)?"prgb":"rgb"):o.hasOwnProperty("h")&&o.hasOwnProperty("s")&&o.hasOwnProperty("v")?(o.s=N(o.s),o.v=N(o.v),r=function(e,t,o){e=6*I(e,360),t=I(t,100),o=I(o,100);var r=n.floor(e),a=e-r,i=o*(1-t),l=o*(1-a*t),c=o*(1-(1-a)*t),s=r%6;return{r:255*[o,l,i,i,c,o][s],g:255*[c,o,o,l,i,i][s],b:255*[i,i,c,o,o,l][s]}}(o.h,o.s,o.v),c=!0,s="hsv"):o.hasOwnProperty("h")&&o.hasOwnProperty("s")&&o.hasOwnProperty("l")&&(o.s=N(o.s),o.l=N(o.l),r=function(e,t,o){var n,r,a;function i(e,t,o){return o<0&&(o+=1),o>1&&(o-=1),o<1/6?e+6*(t-e)*o:o<.5?t:o<2/3?e+(t-e)*(2/3-o)*6:e}if(e=I(e,360),t=I(t,100),o=I(o,100),0===t)n=r=a=o;else{var l=o<.5?o*(1+t):o+t-o*t,c=2*o-l;n=i(c,l,e+1/3),r=i(c,l,e),a=i(c,l,e-1/3)}return{r:255*n,g:255*r,b:255*a}}(o.h,o.s,o.l),c=!0,s="hsl"),o.hasOwnProperty("a")&&(l=o.a)),l=k(l),{ok:c,format:o.format||s,r:a(255,i(r.r,0)),g:a(255,i(r.g,0)),b:a(255,i(r.b,0)),a:l};var d,u,g}(l);this._originalInput=l,this._r=d.r,this._g=d.g,this._b=d.b,this._a=d.a,this._roundA=r(1e3*this._a)/1e3,this._format=s.format||d.format,this._gradientType=s.gradientType,this._r<1&&(this._r=r(this._r)),this._g<1&&(this._g=r(this._g)),this._b<1&&(this._b=r(this._b)),this._ok=d.ok,this._tc_id=o++};function s(e,t,o){e=I(e,255),t=I(t,255),o=I(o,255);var n,r,l=i(e,t,o),c=a(e,t,o),s=(l+c)/2;if(l==c)n=r=0;else{var d=l-c;switch(r=s>.5?d/(2-l-c):d/(l+c),l){case e:n=(t-o)/d+(t<o?6:0);break;case t:n=(o-e)/d+2;break;case o:n=(e-t)/d+4}n/=6}return{h:n,s:r,l:s}}function d(e,t,o){e=I(e,255),t=I(t,255),o=I(o,255);var n,r,l=i(e,t,o),c=a(e,t,o),s=l,d=l-c;if(r=0===l?0:d/l,l==c)n=0;else{switch(l){case e:n=(t-o)/d+(t<o?6:0);break;case t:n=(o-e)/d+2;break;case o:n=(e-t)/d+4}n/=6}return{h:n,s:r,v:s}}function u(e,t,o,n){var a=[O(r(e).toString(16)),O(r(t).toString(16)),O(r(o).toString(16))];return n&&a[0].charAt(0)==a[0].charAt(1)&&a[1].charAt(0)==a[1].charAt(1)&&a[2].charAt(0)==a[2].charAt(1)?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0):a.join("")}function g(e,t,o,n){return[O((a=n,Math.round(255*parseFloat(a)).toString(16))),O(r(e).toString(16)),O(r(t).toString(16)),O(r(o).toString(16))].join("");var a}function m(e,t){t=0===t?0:t||10;var o=c(e).toHsl();return o.s-=t/100,o.s=L(o.s),c(o)}function h(e,t){t=0===t?0:t||10;var o=c(e).toHsl();return o.s+=t/100,o.s=L(o.s),c(o)}function p(e){return c(e).desaturate(100)}function f(e,t){t=0===t?0:t||10;var o=c(e).toHsl();return o.l+=t/100,o.l=L(o.l),c(o)}function b(e,t){t=0===t?0:t||10;var o=c(e).toRgb();return o.r=i(0,a(255,o.r-r(-t/100*255))),o.g=i(0,a(255,o.g-r(-t/100*255))),o.b=i(0,a(255,o.b-r(-t/100*255))),c(o)}function v(e,t){t=0===t?0:t||10;var o=c(e).toHsl();return o.l-=t/100,o.l=L(o.l),c(o)}function y(e,t){var o=c(e).toHsl(),n=(r(o.h)+t)%360;return o.h=n<0?360+n:n,c(o)}function E(e){var t=c(e).toHsl();return t.h=(t.h+180)%360,c(t)}function w(e){var t=c(e).toHsl(),o=t.h;return[c(e),c({h:(o+120)%360,s:t.s,l:t.l}),c({h:(o+240)%360,s:t.s,l:t.l})]}function S(e){var t=c(e).toHsl(),o=t.h;return[c(e),c({h:(o+90)%360,s:t.s,l:t.l}),c({h:(o+180)%360,s:t.s,l:t.l}),c({h:(o+270)%360,s:t.s,l:t.l})]}function x(e){var t=c(e).toHsl(),o=t.h;return[c(e),c({h:(o+72)%360,s:t.s,l:t.l}),c({h:(o+216)%360,s:t.s,l:t.l})]}function T(e,t,o){t=t||6,o=o||30;var n=c(e).toHsl(),r=360/o,a=[c(e)];for(n.h=(n.h-(r*t>>1)+720)%360;--t;)n.h=(n.h+r)%360,a.push(c(n));return a}function A(e,t){t=t||6;for(var o=c(e).toHsv(),n=o.h,r=o.s,a=o.v,i=[],l=1/t;t--;)i.push(c({h:n,s:r,v:a})),a=(a+l)%1;return i}c.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},setAlpha:function(e){return this._a=k(e),this._roundA=r(1e3*this._a)/1e3,this},toHsv:function(){var e=d(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=d(this._r,this._g,this._b),t=r(360*e.h),o=r(100*e.s),n=r(100*e.v);return 1==this._a?"hsv("+t+", "+o+"%, "+n+"%)":"hsva("+t+", "+o+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var e=s(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=s(this._r,this._g,this._b),t=r(360*e.h),o=r(100*e.s),n=r(100*e.l);return 1==this._a?"hsl("+t+", "+o+"%, "+n+"%)":"hsla("+t+", "+o+"%, "+n+"%, "+this._roundA+")"},toHex:function(e){return u(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(){return g(this._r,this._g,this._b,this._a)},toHex8String:function(){return"#"+this.toHex8()},toRgb:function(){return{r:r(this._r),g:r(this._g),b:r(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+r(this._r)+", "+r(this._g)+", "+r(this._b)+")":"rgba("+r(this._r)+", "+r(this._g)+", "+r(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:r(100*I(this._r,255))+"%",g:r(100*I(this._g,255))+"%",b:r(100*I(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+r(100*I(this._r,255))+"%, "+r(100*I(this._g,255))+"%, "+r(100*I(this._b,255))+"%)":"rgba("+r(100*I(this._r,255))+"%, "+r(100*I(this._g,255))+"%, "+r(100*I(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(_[u(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+g(this._r,this._g,this._b,this._a),o=t,n=this._gradientType?"GradientType = 1, ":"";return e&&(o=c(e).toHex8String()),"progid:DXImageTransform.Microsoft.gradient("+n+"startColorstr="+t+",endColorstr="+o+")"},toString:function(e){var t=!!e;e=e||this._format;var o=!1,n=this._a<1&&this._a>=0;return t||!n||"hex"!==e&&"hex6"!==e&&"hex3"!==e&&"name"!==e?("rgb"===e&&(o=this.toRgbString()),"prgb"===e&&(o=this.toPercentageRgbString()),"hex"!==e&&"hex6"!==e||(o=this.toHexString()),"hex3"===e&&(o=this.toHexString(!0)),"hex8"===e&&(o=this.toHex8String()),"name"===e&&(o=this.toName()),"hsl"===e&&(o=this.toHslString()),"hsv"===e&&(o=this.toHsvString()),o||this.toHexString()):"name"===e&&0===this._a?this.toName():this.toRgbString()},_applyModification:function(e,t){var o=e.apply(null,[this].concat([].slice.call(t)));return this._r=o._r,this._g=o._g,this._b=o._b,this.setAlpha(o._a),this},lighten:function(){return this._applyModification(f,arguments)},brighten:function(){return this._applyModification(b,arguments)},darken:function(){return this._applyModification(v,arguments)},desaturate:function(){return this._applyModification(m,arguments)},saturate:function(){return this._applyModification(h,arguments)},greyscale:function(){return this._applyModification(p,arguments)},spin:function(){return this._applyModification(y,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(T,arguments)},complement:function(){return this._applyCombination(E,arguments)},monochromatic:function(){return this._applyCombination(A,arguments)},splitcomplement:function(){return this._applyCombination(x,arguments)},triad:function(){return this._applyCombination(w,arguments)},tetrad:function(){return this._applyCombination(S,arguments)}},c.fromRatio=function(e,t){if("object"==typeof e){var o={};for(var n in e)e.hasOwnProperty(n)&&(o[n]="a"===n?e[n]:N(e[n]));e=o}return c(e,t)},c.equals=function(e,t){return!(!e||!t)&&c(e).toRgbString()==c(t).toRgbString()},c.random=function(){return c.fromRatio({r:l(),g:l(),b:l()})},c.mix=function(e,t,o){o=0===o?0:o||50;var n,r=c(e).toRgb(),a=c(t).toRgb(),i=o/100,l=2*i-1,s=a.a-r.a,d=1-(n=((n=l*s==-1?l:(l+s)/(1+l*s))+1)/2),u={r:a.r*n+r.r*d,g:a.g*n+r.g*d,b:a.b*n+r.b*d,a:a.a*i+r.a*(1-i)};return c(u)},c.readability=function(e,t){var o=c(e),n=c(t),r=o.toRgb(),a=n.toRgb(),i=o.getBrightness(),l=n.getBrightness(),s=Math.max(r.r,a.r)-Math.min(r.r,a.r)+Math.max(r.g,a.g)-Math.min(r.g,a.g)+Math.max(r.b,a.b)-Math.min(r.b,a.b);return{brightness:Math.abs(i-l),color:s}},c.isReadable=function(e,t){var o=c.readability(e,t);return o.brightness>125&&o.color>500},c.mostReadable=function(e,t){for(var o=null,n=0,r=!1,a=0;a<t.length;a++){var i=c.readability(e,t[a]),l=i.brightness>125&&i.color>500,s=i.brightness/125*3+i.color/500;(l&&!r||l&&r&&s>n||!l&&!r&&s>n)&&(r=l,n=s,o=c(t[a]))}return o};var C=c.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},_=c.hexNames=function(e){var t={};for(var o in e)e.hasOwnProperty(o)&&(t[e[o]]=o);return t}(C);function k(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}function I(e,t){(function(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)})(e)&&(e="100%");var o=function(e){return"string"==typeof e&&-1!=e.indexOf("%")}(e);return e=a(t,i(0,parseFloat(e))),o&&(e=parseInt(e*t,10)/100),n.abs(e-t)<1e-6?1:e%t/parseFloat(t)}function L(e){return a(1,i(0,e))}function R(e){return parseInt(e,16)}function O(e){return 1==e.length?"0"+e:""+e}function N(e){return e<=1&&(e=100*e+"%"),e}function D(e){return R(e)/255}var M,B,P,F=(B="[\\s|\\(]+("+(M="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)")+")[,|\\s]+("+M+")[,|\\s]+("+M+")\\s*\\)?",P="[\\s|\\(]+("+M+")[,|\\s]+("+M+")[,|\\s]+("+M+")[,|\\s]+("+M+")\\s*\\)?",{rgb:new RegExp("rgb"+B),rgba:new RegExp("rgba"+P),hsl:new RegExp("hsl"+B),hsla:new RegExp("hsla"+P),hsv:new RegExp("hsv"+B),hsva:new RegExp("hsva"+P),hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/});window.tinycolor=c}(),e((function(){e.fn.spectrum.load&&e.fn.spectrum.processNativeColorInputs()}))},void 0===(a=n.apply(t,r))||(e.exports=a)}()},9690:function(e,t,o){"use strict";var n=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(r,a){function i(e){try{c(n.next(e))}catch(e){a(e)}}function l(e){try{c(n.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,l)}c((n=n.apply(e,t||[])).next())}))},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(o(1669)),i=r(o(9390));o(7655);const l=o(3137),c=o(5252),s=o(7239),d=o(8563),u=o(933),g=o(2589),m=o(7012),h=chrome.runtime.getURL("/imgs/schoology-plus-wide.svg"),p="https://ui.schoology.com/design-system/assets/schoology-logo-horizontal-white.884fbe559c66e06d28c5cfcbd4044f0e.svg",f=chrome.runtime.getURL("/imgs/lausd-legacy.png"),b=chrome.runtime.getURL("/imgs/lausd-2019.png"),v=chrome.runtime.getURL("/imgs/lausd-2022.png"),y=m.SchoologyTheme.CURRENT_VERSION,E="https://via.placeholder.com/200x50?text=School+Logo";var w="app.schoology.com",S={};function x(){return"lms.lausd.net"===w}!function(){n(this,void 0,void 0,(function*(){var e,t,o,n;S=yield chrome.storage.sync.get(null),yield(0,l.initializeAnalytics)({documentContext:!0,isAnalyticsEnabled:"Firefox"!==(0,u.getBrowser)()&&"disabled"!==S.analytics,selectedTheme:null!==(e=S.theme)&&void 0!==e?e:"<unset>",selectedBeta:null!==(t=S.beta)&&void 0!==t?t:"<unset>",currentVersion:chrome.runtime.getManifest().version,newVersion:null!==(o=S.newVersion)&&void 0!==o?o:"<unset>",randomUserId:yield(0,l.getAnalyticsUserId)(),themeIsModern:null!==(n=document.documentElement.getAttribute("modern"))&&void 0!==n?n:"false"}),w=S.defaultDomain||"app.schoology.com",x()?((0,u.setCSSVariable)("lausd-visible","block"),(0,u.setCSSVariable)("lausd-hidden","none")):((0,u.setCSSVariable)("lausd-visible","none"),(0,u.setCSSVariable)("lausd-hidden","block")),a.default.fn.roundSlider.prototype._invertRange=!0,(0,a.default)("#theme-hue").slider({min:0,max:359,slide:mt,stop:mt,change:mt}),(0,a.default)(J).slider({min:0,max:359,slide:mt,stop:mt,change:mt}),(0,a.default)("#color-rainbow-hue-range").roundSlider({sliderType:"range",handleShape:"round",width:15,radius:75,value:"0,359",max:359,startAngle:90,drag:pt,stop:pt,change:pt}),document.querySelector(".rs-tooltip").style.margin="-15.5px 0 0 -33.0547px",(0,a.default)("#color-rainbow-saturation-range").slider({min:0,max:100,range:!0,slide:ht,stop:ht,change:ht,values:[0,100]}),(0,a.default)("#color-rainbow-lightness-range").slider({min:0,max:100,range:!0,slide:ht,stop:ht,change:ht,values:[0,100]}),gt(P,null,"value"),gt(B,null,"value"),P.addEventListener("paste",et),B.addEventListener("paste",et);let r=e=>document.getElementById(e.target.dataset.label).textContent=e.target.value;for(let e of document.querySelectorAll("input[type=range][data-label]"))e.addEventListener("input",r),document.getElementById(e.dataset.label).textContent=e.value;for(let e of d.DEFAULT_THEMES)A.push(e.name),!x()&&d.LAUSD_THEMES.includes(e.name)||(T[e.name]=e);chrome.storage.sync.get(["theme","themes"],(e=>{e.theme=e.theme||c.DEFAULT_THEME_NAME;for(let o of e.themes||[])T[o.name]=o;for(let n in T){let r=(0,u.createElement)("a",["collection-item","theme-item"],{dataset:{theme:n},onclick:e=>{var t,o;Je(n);for(let e of null!==(o=null===(t=r.parentElement)||void 0===t?void 0:t.children)&&void 0!==o?o:[])e.classList.remove("active");r.classList.add("active")}},[(0,u.createElement)("span",["tooltipped"],{textContent:n+(d.CLASSIC_THEMES.includes(n)?" (Classic)":""),dataset:{tooltip:n+(d.CLASSIC_THEMES.includes(n)?" (Classic)":"")}})]),a={textContent:"check",dataset:{tooltip:"Apply Theme"},onclick:e=>{e.stopPropagation(),Re.open("Apply Theme?",`Are you sure you want to apply the theme ${n}?`,["Apply","Cancel"],(e=>{"Apply"===e&&((0,l.trackEvent)("button_click",{id:"apply-theme",context:"Theme List",value:n,legacyTarget:`Theme: ${n}`,legacyAction:"apply",legacyLabel:"Theme List"}),chrome.storage.sync.set({theme:n},(()=>location.href=`https://${w}`)))}))}},s={textContent:"star",dataset:{tooltip:"Theme Applied"},onclick:()=>location.href=`https://${w}`};function g(e){return(0,u.createElement)("i",["material-icons","right","tooltipped"],e)}let m=(0,u.createElement)("div",["right"]);m.style.width="160px",r.appendChild(m),m.appendChild(g(n==e.theme?s:a));let h=g({textContent:"content_copy",dataset:{tooltip:"Copy Theme to Clipboard"}});h.addEventListener("click",(e=>{it(n)})),m.appendChild(h),A.includes(n)||(m.appendChild(g({textContent:"delete",dataset:{tooltip:"Delete Theme"},onclick:e=>{Xe(n),e.stopPropagation()}})),m.appendChild(g({textContent:"edit",dataset:{tooltip:"Edit Theme"},onclick:()=>Ze(n)}))),ue.appendChild(r)}(Array.from(ue.children).find((t=>t.dataset.theme==e.theme))||ue.firstElementChild).click(),i.default.Tooltip.init(document.querySelectorAll(".tooltipped"),{outDuration:0,inDuration:300,enterDelay:0,exitDelay:10});var t=document.querySelectorAll(".fixed-action-btn");i.default.FloatingActionButton.init(t,{direction:"left",hoverEnabled:!1})}))}))}();var T={},A=[],C=void 0,_=document.getElementById("theme-name"),k=document.getElementById("theme-hue"),I=(document.getElementById("theme-primary-color"),document.getElementById("theme-secondary-color"),document.getElementById("theme-background-color"),document.getElementById("theme-border-color"),document.getElementById("theme-link-color"),document.getElementById("theme-schoology-plus-logo")),L=document.getElementById("theme-schoology-logo"),R=document.getElementById("theme-lausd-logo-2022"),O=document.getElementById("theme-new-lausd-logo"),N=document.getElementById("theme-lausd-logo"),D=document.getElementById("theme-default-logo"),M=document.getElementById("theme-custom-logo"),B=document.getElementById("theme-logo"),P=document.getElementById("theme-cursor"),F=document.getElementById("theme-color-hue"),H=document.getElementById("theme-color-custom"),U=document.getElementById("theme-color-rainbow"),V=document.getElementById("theme-color-custom-wrapper"),j=document.getElementById("theme-color-rainbow-wrapper"),G=document.getElementById("color-rainbow-hue-animate"),q=document.getElementById("color-rainbow-saturation-animate"),$=document.getElementById("color-rainbow-lightness-animate"),Y=document.getElementById("color-rainbow-hue-animate-wrapper"),z=document.getElementById("color-rainbow-saturation-animate-wrapper"),W=document.getElementById("color-rainbow-lightness-animate-wrapper"),K=document.getElementById("color-rainbow-hue-speed"),J=document.getElementById("color-rainbow-hue-value"),X=document.getElementById("color-rainbow-hue-preview"),Z=document.getElementById("color-rainbow-saturation-speed"),Q=document.getElementById("color-rainbow-saturation-value"),ee=document.getElementById("color-rainbow-lightness-speed"),te=document.getElementById("color-rainbow-lightness-value"),oe=document.getElementById("color-rainbow-hue-alternate"),ne=document.getElementById("color-rainbow-saturation-alternate"),re=document.getElementById("color-rainbow-lightness-alternate"),ae=document.getElementById("color-rainbow-hue-range"),ie=document.getElementById("color-rainbow-saturation-range"),le=document.getElementById("color-rainbow-lightness-range"),ce=document.getElementById("theme-hue-wrapper"),se=document.getElementById("theme-logo-wrapper"),de=document.getElementById("preview-section"),ue=document.getElementById("themes-list"),ge=document.getElementById("themes-list-section"),me=document.getElementById("theme-editor-section"),he=document.getElementById("test-icon"),pe=document.getElementById("icon-list"),fe=(document.getElementById("tab-icons"),document.getElementById("icon-list-table"));document.getElementById("new-icon").addEventListener("click",Qe);var be=document.getElementById("icon-test-text");be.addEventListener("input",at),document.getElementById("save-button").addEventListener("click",(e=>ze())),document.getElementById("save-close-button").addEventListener("click",(e=>ze(!0))),document.getElementById("discard-button").addEventListener("click",(e=>Re.open("Discard Changes?","Are you sure you want to discard changes? All unsaved edits will be permanently lost.",["Discard","Cancel"],(e=>"Discard"===e&&location.reload())))),document.getElementById("close-button").addEventListener("click",(e=>!lt()&&(location.href=`https://${w}`)||Re.open("Discard Changes?","Are you sure you want to close without saving? All unsaved edits will be permanently lost.",["Discard","Cancel"],(e=>"Discard"===e&&(location.href=`https://${w}`))))),document.getElementById("settings-button").addEventListener("click",(e=>Oe.open())),document.getElementById("import-button").addEventListener("click",(e=>{Le.open("Import Theme","Paste theme JSON here",["Import","Cancel"],((e,t)=>{if("Import"===e)try{Ue(JSON.parse(t)),We(!1,!0)}catch(e){Re.open("Error Importing Theme",Me.length>0?Me.join():"Please provide a valid JSON string",["OK"])}}),"import-theme")}));var ve=document.getElementById("create-preset-dark-theme");null==ve||ve.addEventListener("click",(e=>Ze("Schoology Plus Modern Dark","My Dark Theme")));var ye=document.getElementById("create-preset-light-theme");null==ye||ye.addEventListener("click",(e=>Ze("Schoology Plus Modern Light","My Light Theme")));var Ee=document.getElementById("create-preset-rainbow-theme");null==Ee||Ee.addEventListener("click",(e=>Ze("Rainbow Modern","My Rainbow Theme"))),document.getElementById("create-preset-classic-theme").addEventListener("click",(e=>Ze("Schoology Plus","My Classic Theme"))),document.getElementById("preview-navbar"),document.getElementById("preview-logo");var we=document.getElementById("preview-page"),Se=null,xe=document.getElementById("modern-enable");xe.addEventListener("click",(e=>(0,l.trackEvent)("update_setting",{id:"modern-enable",context:"Theme Editor",value:xe.checked.toString(),legacyTarget:"modern-enable",legacyAction:xe.checked.toString(),legacyLabel:"Theme Editor"})));var Te=document.getElementById("modern-wrapper"),Ae=document.getElementById("modern-border-radius-value"),Ce=document.getElementById("modern-border-size-value"),_e=document.getElementById("modern-padding-value"),ke=document.getElementById("preview-modal");document.getElementById("splus-modal-close").addEventListener("click",(e=>{e.stopPropagation(),ke.classList.add("hidden"),we.classList.remove("hidden"),(0,l.trackEvent)("button_click",{id:"close-preview-modal",context:"Theme Editor",legacyTarget:"splus-modal-close",legacyAction:"click",legacyLabel:"Theme Editor"})})),document.getElementById("preview-splus-button").addEventListener("click",(e=>{e.stopPropagation(),ke.classList.toggle("hidden"),we.classList.toggle("hidden"),(0,l.trackEvent)("button_click",{id:"preview-splus-button",context:"Theme Editor",legacyTarget:"preview-splus-button",legacyAction:"click",legacyLabel:"Theme Editor"})}));class Ie{static get ELEMENT(){return document.getElementById("modal")}static get CONTENT_CONTAINER(){return document.getElementById("modal-content")}static get BUTTONS_CONTAINER(){return document.getElementById("modal-buttons")}static open(e,t=["OK"],o){Ie.CONTENT_CONTAINER.innerHTML="",Ie.BUTTONS_CONTAINER.innerHTML="";var n=null;Ie.CONTENT_CONTAINER.appendChild(e);for(let e of t)Ie.BUTTONS_CONTAINER.appendChild((0,u.createElement)("a",["modal-close","waves-effect","waves-dark","btn-flat"],{textContent:e,onclick:t=>{(0,l.trackEvent)("button_click",{id:"modal-button",context:"Theme Editor",value:e,legacyTarget:"Modal Button",legacyAction:e,legacyLabel:"Theme Editor"}),n=e}}));i.default.Modal.init(Ie.ELEMENT,{onCloseEnd:()=>o&&o(n)}).open()}}class Le{static open(e,t,o,n,r){let a=dt(`\n        <div>\n            <h4>${e}</h4>\n            <div class="input-field">\n                <textarea id="prompt-modal-textarea" class="materialize-textarea ${r}"></textarea>\n                <label for="prompt-modal-textarea">${t}</label>\n            </div>\n        </div>\n        `);Ie.open(a,o,(e=>n(e,document.getElementById("prompt-modal-textarea").value)))}}class Re{static open(e,t,o,n){let r=dt(`\n        <div>\n            <h4>${e}</h4>\n            <p>${t}</p>\n        </div>\n        `);Ie.open(r,o,n)}}class Oe{static open(){let e=dt("\n        <div>\n            <h4>Settings</h4>\n            <p>\n                Nothing to see here yet! Theme editor settings coming soon&trade;.\n            </p>\n        </div>\n        ");Ie.open(e,["Cancel","Save"],(e=>{}))}}var Ne=void 0;let De=[],Me=[],Be=null;var Pe=document.getElementById("json-output");Pe.addEventListener("input",He),Pe.addEventListener("paste",(e=>{if(lt()){e.preventDefault(),e.stopPropagation();let t=e.clipboardData.getData("text");Pe.value=t,He()}}));for(let e of document.querySelectorAll("#theme-editor-section input"))e.addEventListener("input",(function(e){$e()}));i.default.Tabs.init(document.querySelector(".tabs"),{onShow:function(e){"tab-preview"==e.id?de.classList.add("fixed-on-large-and-up"):de.classList.remove("fixed-on-large-and-up")}});var Fe=document.querySelectorAll(".dropdown-trigger");function He(){Ue(function(e){try{let t=JSON.parse(e);return!!(t instanceof Object)&&t}catch(e){return!1}}(Pe.value))}function Ue(e){Me=[],De=[],function(e){var t,o,n,r,l,c,s,d,u,g,m,h,p,f,b,v,y,E,w,S,x,T,A,C,V,j;if(e){switch(_.value=e.name,B.value="",null===(t=e.logo)||void 0===t?void 0:t.preset){case"schoology_plus":I.click();break;case"schoology_logo":L.click();break;case"lausd_legacy":N.click();break;case"lausd_2019":O.click();break;case"lausd_2022":R.click();break;case"default":D.click();break;default:B.value=null!==(n=null===(o=e.logo)||void 0===o?void 0:o.url)&&void 0!==n?n:"",M.click()}if((0,a.default)(k).slider("value",e.color.hue||200),G.checked=!1,K.value="50",(0,a.default)(ae).roundSlider("setValue","0,359"),oe.checked=!1,(0,a.default)(J).slider("value",180),q.checked=!1,Z.value="50",(0,a.default)(ie).slider("values",[0,100]),ne.checked=!1,Q.value="50",$.checked=!1,ee.value="50",(0,a.default)(le).slider("values",[0,100]),re.checked=!1,te.value="50",e.color.hue||0===e.color.hue)F.click();else if(e.color.custom){let t={"#theme-primary-color":"primary","#theme-background-color":"background","#theme-secondary-color":"hover","#theme-border-color":"border","#theme-link-color":"link"};Object.keys(t).map((o=>(0,a.default)(o).spectrum("set",e.color.custom[t[o]]))),H.click()}else if(e.color.rainbow){if(U.click(),!!(null===(r=e.color.rainbow.hue)||void 0===r?void 0:r.animate)!==G.checked&&G.click(),null===(l=e.color.rainbow.hue)||void 0===l?void 0:l.animate){K.value=e.color.rainbow.hue.animate.speed.toString(),(0,a.default)(J).slider("value",e.color.rainbow.hue.animate.offset),!!e.color.rainbow.hue.animate.alternate!==oe.checked&&oe.click();let t=e.color.rainbow.hue.animate.min?e.color.rainbow.hue.animate.min:0,o=e.color.rainbow.hue.animate.max&&e.color.rainbow.hue.animate.max>=0&&e.color.rainbow.hue.animate.max<=359?e.color.rainbow.hue.animate.max:359;(0,a.default)(ae).roundSlider("setValue",`${t},${o}`)}else(0,a.default)(J).slider("value",null!==(s=null===(c=e.color.rainbow.hue)||void 0===c?void 0:c.value)&&void 0!==s?s:0);!!(null===(d=e.color.rainbow.saturation)||void 0===d?void 0:d.animate)!==q.checked&&q.click(),(null===(u=e.color.rainbow.saturation)||void 0===u?void 0:u.animate)?(Z.value=e.color.rainbow.saturation.animate.speed.toString(),Q.value=e.color.rainbow.saturation.animate.offset.toString(),!!e.color.rainbow.saturation.animate.alternate!==ne.checked&&ne.click(),(0,a.default)(ie).slider("values",[e.color.rainbow.saturation.animate.min&&e.color.rainbow.saturation.animate.min<e.color.rainbow.saturation.animate.max&&e.color.rainbow.saturation.animate.min>=0&&e.color.rainbow.saturation.animate.min<=100?e.color.rainbow.saturation.animate.min:0,e.color.rainbow.saturation.animate.max&&e.color.rainbow.saturation.animate.max>e.color.rainbow.saturation.animate.min&&e.color.rainbow.saturation.animate.max>=0&&e.color.rainbow.saturation.animate.max<=100?e.color.rainbow.saturation.animate.max:100])):Q.value=null!==(h=null===(m=null===(g=e.color.rainbow.saturation)||void 0===g?void 0:g.value)||void 0===m?void 0:m.toString())&&void 0!==h?h:"0",!!(null===(p=e.color.rainbow.lightness)||void 0===p?void 0:p.animate)!==$.checked&&$.click(),(null===(f=e.color.rainbow.lightness)||void 0===f?void 0:f.animate)?(ee.value=e.color.rainbow.lightness.animate.speed.toString(),te.value=e.color.rainbow.lightness.animate.offset.toString(),!!e.color.rainbow.lightness.animate.alternate!==re.checked&&re.click(),(0,a.default)(le).slider("values",[e.color.rainbow.lightness.animate.min&&e.color.rainbow.lightness.animate.min<e.color.rainbow.lightness.animate.max&&e.color.rainbow.lightness.animate.min>=0&&e.color.rainbow.lightness.animate.min<=100?e.color.rainbow.lightness.animate.min:0,e.color.rainbow.lightness.animate.max&&e.color.rainbow.lightness.animate.max>e.color.rainbow.lightness.animate.min&&e.color.rainbow.lightness.animate.max>=0&&e.color.rainbow.lightness.animate.max<=100?e.color.rainbow.lightness.animate.max:100])):te.value=null!==(y=null===(v=null===(b=e.color.rainbow.lightness)||void 0===b?void 0:b.value)||void 0===v?void 0:v.toString())&&void 0!==y?y:"0"}e.color.modern?(xe.checked=!0,Object.keys(qe).map((t=>{var o;let n=e.color.modern[qe[t][0]];(0,a.default)(t).spectrum("set",null!==(o=null==n?void 0:n[qe[t][1]])&&void 0!==o?o:"#00DEAD")})),Ae.value=null!==(S=null===(w=null===(E=e.color.modern.options)||void 0===E?void 0:E.borderRadius)||void 0===w?void 0:w.toString())&&void 0!==S?S:"5",Ce.value=null!==(A=null===(T=null===(x=e.color.modern.options)||void 0===x?void 0:x.borderSize)||void 0===T?void 0:T.toString())&&void 0!==A?A:"1",_e.value=null!==(j=null===(V=null===(C=e.color.modern.options)||void 0===C?void 0:C.padding)||void 0===V?void 0:V.toString())&&void 0!==j?j:"5"):xe.checked=!1;for(let e of document.querySelectorAll("input[type=range][data-label]"))document.getElementById(e.dataset.label).textContent=e.value;for(let e of[ie,le])document.getElementById(e.id+"-display").textContent=`${(0,a.default)(e).slider("values")[0]} - ${(0,a.default)(e).slider("values")[1]}`;if(pe.innerHTML="",e.icons)for(let t of e.icons){let e=Qe();e.querySelector(".class-name").textContent=t.regex.toString(),e.querySelector(".icon-url").textContent=t.url,e.querySelector(".small-icon-preview").src=t.url}P.value="",e.cursor&&e.cursor.primary&&(P.value=e.cursor.primary),i.default.updateTextFields(),$e()}}(function(e){if(!e)return Me.push("The JSON you have entered is not valid"),void Ye(!1);if(Me=function(e){let t=[];return 2===e.version&&(e.name||t.push("Theme must have a name"),e.color||t.push("Theme must have a color object")),t}(e),Me.length>0)return void Ye(!1);let t=Ve(e);return m.SchoologyTheme.loadFromObject(t)}(e))}function Ve(e){if(2!==e.version)throw Me.push("The theme version is not supported"),new Error("The theme version is not supported");return e.version==y?e:Ve(e)}i.default.Dropdown.init(Fe,{constrainWidth:!1});let je=0;function Ge(e,t,o=$e,n=!1){(0,a.default)(`#${e}`).spectrum({showInput:!0,containerClassName:"full-spectrum",showInitial:!0,showPalette:!0,showSelectionPalette:!0,maxPaletteSize:10,preferredFormat:"hex",showAlpha:n,color:t||["red","blue","yellow","green","magenta"][je++%5],move:function(e){o(e)},hide:function(e){o(e)},palette:[["rgb(0, 0, 0)","rgb(67, 67, 67)","rgb(102, 102, 102)","rgb(204, 204, 204)","rgb(217, 217, 217)","rgb(255, 255, 255)"],["rgb(152, 0, 0)","rgb(255, 0, 0)","rgb(255, 153, 0)","rgb(255, 255, 0)","rgb(0, 255, 0)","rgb(0, 255, 255)","rgb(74, 134, 232)","rgb(0, 0, 255)","rgb(153, 0, 255)","rgb(255, 0, 255)"],["rgb(230, 184, 175)","rgb(244, 204, 204)","rgb(252, 229, 205)","rgb(255, 242, 204)","rgb(217, 234, 211)","rgb(208, 224, 227)","rgb(201, 218, 248)","rgb(207, 226, 243)","rgb(217, 210, 233)","rgb(234, 209, 220)"],["rgb(221, 126, 107)","rgb(234, 153, 153)","rgb(249, 203, 156)","rgb(255, 229, 153)","rgb(182, 215, 168)","rgb(162, 196, 201)","rgb(164, 194, 244)","rgb(159, 197, 232)","rgb(180, 167, 214)","rgb(213, 166, 189)"],["rgb(204, 65, 37)","rgb(224, 102, 102)","rgb(246, 178, 107)","rgb(255, 217, 102)","rgb(147, 196, 125)","rgb(118, 165, 175)","rgb(109, 158, 235)","rgb(111, 168, 220)","rgb(142, 124, 195)","rgb(194, 123, 160)"],["rgb(166, 28, 0)","rgb(204, 0, 0)","rgb(230, 145, 56)","rgb(241, 194, 50)","rgb(106, 168, 79)","rgb(69, 129, 142)","rgb(60, 120, 216)","rgb(61, 133, 198)","rgb(103, 78, 167)","rgb(166, 77, 121)"],["rgb(133, 32, 12)","rgb(153, 0, 0)","rgb(180, 95, 6)","rgb(191, 144, 0)","rgb(56, 118, 29)","rgb(19, 79, 92)","rgb(17, 85, 204)","rgb(11, 83, 148)","rgb(53, 28, 117)","rgb(116, 27, 71)"],["rgb(91, 15, 0)","rgb(102, 0, 0)","rgb(120, 63, 4)","rgb(127, 96, 0)","rgb(39, 78, 19)","rgb(12, 52, 61)","rgb(28, 69, 135)","rgb(7, 55, 99)","rgb(32, 18, 77)","rgb(76, 17, 48)"]]})}Ge("theme-primary-color"),Ge("theme-secondary-color"),Ge("theme-background-color"),Ge("theme-border-color"),Ge("theme-link-color"),Ge("modern-color-primary","#EAEAEA"),Ge("modern-color-accent","#F7F7F7"),Ge("modern-color-secondary","#DDD"),Ge("modern-color-input","#D0D0D0"),Ge("modern-color-border","#BABABA"),Ge("modern-color-highlight","rgba(255, 183, 2, 0.2)",$e,!0),Ge("modern-color-active","#98d4e4",$e,!0),Ge("modern-color-grades","#009400"),Ge("modern-color-error","#F44336"),Ge("modern-cal-1","#d6e7f4"),Ge("modern-cal-2","#d7e8cf"),Ge("modern-cal-3","#f9e9d4"),Ge("modern-cal-4","#e7e0e5"),Ge("modern-cal-5","#e6b5c9"),Ge("modern-cal-6","#f9f1cf"),Ge("modern-cal-7","#daf0f9"),Ge("modern-cal-8","#f9ddea"),Ge("modern-cal-9","#fbd7d8"),Ge("modern-cal-10","#f1f2d1"),Ge("modern-cal-11","#e0e8f5"),Ge("modern-cal-12","#fbd7e4"),Ge("modern-cal-13","#fcddd3"),Ge("modern-cal-14","#e7f2d5"),Ge("modern-cal-15","#e6e0ee"),Ge("modern-cal-16","#f0e5db"),Ge("modern-cal-17","#fce8d1"),Ge("modern-cal-18","#e1f1e7"),Ge("modern-cal-19","#f0dfed"),Ge("modern-cal-20","#e9e9ea"),Ge("modern-cal-21","#00427c"),Ge("modern-cal-22","#603073"),Ge("modern-cal-23","#8b1941"),Ge("modern-cal-24","#970c0c"),Ge("modern-cal-25","#9c3b07"),Ge("modern-cal-26","#685203"),Ge("modern-cal-27","#2a5f16"),Ge("modern-cal-28","#09584f"),Ge("modern-cal-29","#005a75"),Ge("modern-cal-30","#4d5557"),Ge("modern-color-text-primary","#2A2A2A"),Ge("modern-color-text-muted","#677583"),Ge("modern-color-text-contrast","white");var qe={"#modern-color-primary":["interface","primary","modern-primary"],"#modern-color-accent":["interface","accent","modern-accent"],"#modern-color-secondary":["interface","secondary","modern-secondary"],"#modern-color-input":["interface","input","modern-input"],"#modern-color-border":["interface","border","modern-contrast-border"],"#modern-color-highlight":["interface","highlight","modern-highlight"],"#modern-color-active":["interface","active","modern-active"],"#modern-color-grades":["interface","grades","modern-grades"],"#modern-color-error":["interface","error","modern-error"],"#modern-color-text-primary":["text","primary","modern-text"],"#modern-color-text-muted":["text","muted","modern-muted-text"],"#modern-color-text-contrast":["text","contrast","modern-contrast-text"],"#modern-cal-1":["calendar",0,"cal1"],"#modern-cal-2":["calendar",1,"cal2"],"#modern-cal-3":["calendar",2,"cal3"],"#modern-cal-4":["calendar",3,"cal4"],"#modern-cal-5":["calendar",4,"cal5"],"#modern-cal-6":["calendar",5,"cal6"],"#modern-cal-7":["calendar",6,"cal7"],"#modern-cal-8":["calendar",7,"cal8"],"#modern-cal-9":["calendar",8,"cal9"],"#modern-cal-10":["calendar",9,"cal10"],"#modern-cal-11":["calendar",10,"cal11"],"#modern-cal-12":["calendar",11,"cal12"],"#modern-cal-13":["calendar",12,"cal13"],"#modern-cal-14":["calendar",13,"cal14"],"#modern-cal-15":["calendar",14,"cal15"],"#modern-cal-16":["calendar",15,"cal16"],"#modern-cal-17":["calendar",16,"cal17"],"#modern-cal-18":["calendar",17,"cal18"],"#modern-cal-19":["calendar",18,"cal19"],"#modern-cal-20":["calendar",19,"cal20"],"#modern-cal-21":["calendar",20,"cal21"],"#modern-cal-22":["calendar",21,"cal22"],"#modern-cal-23":["calendar",22,"cal23"],"#modern-cal-24":["calendar",23,"cal24"],"#modern-cal-25":["calendar",24,"cal25"],"#modern-cal-26":["calendar",25,"cal26"],"#modern-cal-27":["calendar",26,"cal27"],"#modern-cal-28":["calendar",27,"cal28"],"#modern-cal-29":["calendar",28,"cal29"],"#modern-cal-30":["calendar",29,"cal30"]};function $e(){if(clearInterval(C),De=[],Me=[],Be=new m.SchoologyTheme(_.value||"Untitled Theme",m.SchoologyTheme.CURRENT_VERSION,{hue:210}),Be.name?A.includes(Be.name)?Me.push("Theme can't use the same name as a default theme. Please choose a different name."):Be.name!=Ne&&T[Be.name]&&Me.push(`A theme with the name "${Be.name}" already exists. Delete that theme or choose a different name before saving.`):Me.push("Theme must have a name"),Be.color=new m.ThemeColor,F.checked)V.classList.add("hidden"),ce.classList.remove("hidden"),j.classList.add("hidden"),Be.color.hue=(0,a.default)(k).slider("value"),(0,u.setCSSVariable)("color-hue",Be.color.hue.toString()),(0,u.setCSSVariable)("primary-color","hsl(var(--color-hue), 50%, 50%)"),(0,u.setCSSVariable)("background-color","hsl(var(--color-hue), 60%, 30%)"),(0,u.setCSSVariable)("hover-color","hsl(var(--color-hue), 55%, 40%)"),(0,u.setCSSVariable)("border-color","hsl(var(--color-hue), 60%, 25%)"),(0,u.setCSSVariable)("link-color","hsl(var(--color-hue), 55%, 40%)");else if(H.checked)V.classList.remove("hidden"),ce.classList.add("hidden"),j.classList.add("hidden"),Be.color.custom=new m.CustomColorDefinition((0,a.default)("#theme-primary-color").spectrum("get").toHexString(),(0,a.default)("#theme-secondary-color").spectrum("get").toHexString(),(0,a.default)("#theme-background-color").spectrum("get").toHexString(),(0,a.default)("#theme-border-color").spectrum("get").toHexString(),(0,a.default)("#theme-link-color").spectrum("get").toHexString()),(0,u.setCSSVariable)("primary-color",Be.color.custom.primary),(0,u.setCSSVariable)("background-color",Be.color.custom.background),(0,u.setCSSVariable)("hover-color",Be.color.custom.hover),(0,u.setCSSVariable)("border-color",Be.color.custom.border),(0,u.setCSSVariable)("link-color",Be.color.custom.link);else if(U.checked){if(V.classList.add("hidden"),ce.classList.add("hidden"),j.classList.remove("hidden"),Be.color.rainbow=new m.RainbowColorDefinition(new m.RainbowColorComponentDefinition,new m.RainbowColorComponentDefinition,new m.RainbowColorComponentDefinition),Be.color.rainbow.hue&&G.checked){Y.classList.remove("hidden"),document.querySelector("label[for=color-rainbow-hue-value]").firstElementChild.textContent="Hue Offset",J.classList.remove("hue-slider"),Be.color.rainbow.hue.animate=new m.RainbowColorComponentAnimation(+K.value,+(0,a.default)(J).slider("value"),+(0,a.default)(ae).roundSlider("getValue").split(",")[0],+(0,a.default)(ae).roundSlider("getValue").split(",")[1],oe.checked);let e=[],t=Be.color.rainbow.hue.animate.min>Be.color.rainbow.hue.animate.max?Be.color.rainbow.hue.animate.max+360:Be.color.rainbow.hue.animate.max;for(let o=0;o<=1;o+=.05)e.push(`hsl(${Be.color.rainbow.hue.animate.min*(1-o)+t*o}, 50%, 50%)`);Be.color.rainbow.hue.animate.alternate&&e.push(...e.slice(0,e.length-1).reverse()),X.style.background=`linear-gradient(to right, ${e.join()})`}else Y.classList.add("hidden"),document.querySelector("label[for=color-rainbow-hue-value]").firstElementChild.textContent="Hue Value",J.classList.add("hue-slider"),Be.color.rainbow.hue.value=(0,a.default)(J).slider("value");Be.color.rainbow.saturation&&q.checked?(z.classList.remove("hidden"),document.querySelector("label[for=color-rainbow-saturation-value]").firstElementChild.textContent="Saturation Offset",Be.color.rainbow.saturation.animate=new m.RainbowColorComponentAnimation(+Z.value,+Q.value,(0,a.default)(ie).slider("values")[0],(0,a.default)(ie).slider("values")[1],ne.checked)):(z.classList.add("hidden"),document.querySelector("label[for=color-rainbow-saturation-value]").firstElementChild.textContent="Saturation Value",Be.color.rainbow.saturation.value=Number.parseFloat(Q.value)),$.checked?(W.classList.remove("hidden"),document.querySelector("label[for=color-rainbow-lightness-value]").firstElementChild.textContent="Lightness Offset",Be.color.rainbow.lightness.animate=new m.RainbowColorComponentAnimation(+ee.value,+te.value,(0,a.default)(le).slider("values")[0],(0,a.default)(le).slider("values")[1],re.checked)):(W.classList.add("hidden"),document.querySelector("label[for=color-rainbow-lightness-value]").firstElementChild.textContent="Lightness Value",Be.color.rainbow.lightness.value=Number.parseFloat(te.value));let e=function(e){return e.color.rainbow?()=>{var o,n,r,a,i,l,c,s,d,g,m,h,p,f,b;let v=0,y=0,E=0,w=(new Date).valueOf();if(null===(n=null===(o=e.color.rainbow)||void 0===o?void 0:o.hue)||void 0===n?void 0:n.animate){let o=e.color.rainbow.hue.animate;o.max<o.min&&(o.max+=360),v=t(o,w)}else v=null!==(i=null===(a=null===(r=e.color.rainbow)||void 0===r?void 0:r.hue)||void 0===a?void 0:a.value)&&void 0!==i?i:210;y=(null===(c=null===(l=e.color.rainbow)||void 0===l?void 0:l.saturation)||void 0===c?void 0:c.animate)?t(e.color.rainbow.saturation.animate,w):null!==(g=null===(d=null===(s=e.color.rainbow)||void 0===s?void 0:s.saturation)||void 0===d?void 0:d.value)&&void 0!==g?g:100,E=(null===(h=null===(m=e.color.rainbow)||void 0===m?void 0:m.lightness)||void 0===h?void 0:h.animate)?t(e.color.rainbow.lightness.animate,w):null!==(b=null===(f=null===(p=e.color.rainbow)||void 0===p?void 0:p.lightness)||void 0===f?void 0:f.value)&&void 0!==b?b:100,document.documentElement.style.setProperty("--color-hue",v.toString()),(0,u.setCSSVariable)("primary-color",`hsl(var(--color-hue), ${y}%, ${E}%)`),(0,u.setCSSVariable)("background-color","hsl(var(--color-hue), 60%, 30%)"),(0,u.setCSSVariable)("hover-color","hsl(var(--color-hue), 55%, 40%)"),(0,u.setCSSVariable)("border-color","hsl(var(--color-hue), 60%, 25%)"),(0,u.setCSSVariable)("link-color","hsl(var(--color-hue), 55%, 40%)")}:void 0;function t(e,t){let{speed:o,offset:n,alternate:r,min:a,max:i}=e,l=i-a,c=(t/(150-o)+ +n)%(r?2*l:l)+a;return r&&c>i&&(c=i-(c-i)),c}}(Be);e&&(e(),C=setInterval(e,100))}if(xe.checked){document.documentElement.setAttribute("modern","true"),Te.classList.remove("hidden"),Be.color.modern=new m.ModernColorDefinition,Be.color.modern.calendar=[],Be.color.modern.interface=new m.ModernInterfaceColorDefinition("#00DEAD","#00DEAD","#00DEAD","#00DEAD","#00DEAD","#00DEAD","#00DEAD","#00DEAD","#00DEAD"),Be.color.modern.text=new m.ModernTextColorDefinition("#00DEAD","#00DEAD","#00DEAD"),Be.color.modern.options=new m.ModernOptionsDefinition(5,1,5),Be.color.modern.dark=(0,a.default)("#modern-color-primary").spectrum("get").isDark(),document.documentElement.setAttribute("dark",Be.color.modern.dark.toString());for(let e in qe){let t=qe[e];Be.color.modern[t[0]][t[1]]=(0,a.default)(e).spectrum("get").toString(),(0,u.setCSSVariable)(t[2],(0,a.default)(e).spectrum("get").toString())}Be.color.modern.options.borderSize=+Ce.value,Be.color.modern.options.borderRadius=+Ae.value,Be.color.modern.options.padding=+_e.value,(0,u.setCSSVariable)("modern-border-size",`${Ce.value}px`),(0,u.setCSSVariable)("modern-border-radius",`${Ae.value}px`),(0,u.setCSSVariable)("modern-padding",`${_e.value}px`)}else document.documentElement.setAttribute("modern","false"),Te.classList.add("hidden");if(se.classList.add("hidden"),I.checked?(Be.logo=new m.ThemeLogo(void 0,"schoology_plus"),(0,u.setCSSVariable)("background-url",`url(${h})`)):L.checked?(Be.logo=new m.ThemeLogo(void 0,"schoology_logo"),(0,u.setCSSVariable)("background-url",`url(${p})`)):R.checked?(Be.logo=new m.ThemeLogo(void 0,"lausd_2022"),(0,u.setCSSVariable)("background-url",`url(${v})`)):O.checked?(Be.logo=new m.ThemeLogo(void 0,"lausd_2019"),(0,u.setCSSVariable)("background-url",`url(${b})`)):N.checked?(Be.logo=new m.ThemeLogo(void 0,"lausd_legacy"),(0,u.setCSSVariable)("background-url",`url(${f})`)):D.checked?(Be.logo=new m.ThemeLogo(void 0,"default"),(0,u.setCSSVariable)("background-url",`url(${E})`)):M.checked&&(se.classList.remove("hidden"),B.value?(Be.logo=new m.ThemeLogo(B.value),Ke(B.value,(e=>{let t=e.target;(160!=t.width||t.height<36||t.height>60)&&De.push("Logo image is not between the recommended sizes of 160x36 and 160x60"),(0,u.setCSSVariable)("background-url",`url(${B.value})`)}),(()=>Me.push("Logo URL does not point to a valid image")))):Me.push("No logo URL is specified")),P.value?(Be.cursor=new m.ThemeCursor(P.value),Ke(P.value,(e=>{let t=e.target;(t.width>128||t.height>128)&&Me.push("Cursor images must be smaller than 128x128 to appear"),(0,u.setCSSVariable)("cursor",`url(${P.value}), auto`)}),(()=>Me.push("Cursor URL does not point to a valid image")))):(0,u.setCSSVariable)("cursor","auto"),fe.rows.length>1){let e=[],t=!0;for(let o of fe.rows){if(t||!o.cells[1].textContent||!o.cells[2].textContent){t=!1;continue}let n=o.cells[1].textContent,r=o.cells[2].textContent;Ke(r,void 0,(()=>Me.push(r+" is not a valid image URL (Course Icons)")));try{RegExp(n)}catch(e){Me.push(n+" is not a valid regular expression (Course Icons)")}e.push(new m.ThemeIcon(n,r))}Be.icons=e}Ye()}function Ye(e=!0){e&&(Pe.value=JSON.stringify(Be,null,4));let t=document.getElementById("warning-card");De.length>0?(t.style.display="block",document.getElementById("warning-content").innerHTML=De.join("<br/>")):t.style.display="none";let o=document.getElementById("error-card");Me.length>0&&lt()?(o.style.display="block",document.getElementById("error-content").innerHTML=Me.join("<br/>")):o.style.display="none",i.default.updateTextFields(),i.default.textareaAutoResize(Pe),at()}function ze(e=!1){try{We(e)}catch(e){alert(e)}}function We(e=!1,t=!1,o){var r,a;if(Me.length>0)throw new Error("Please fix all errors before saving the theme:\n"+Me.join("\n"));let i=null!=o?o:JSON.parse(Pe.value);function c(t){return n(this,void 0,void 0,(function*(){try{let n=(yield chrome.storage.sync.get({themes:[]})).themes.filter((e=>e.name!=(Ne||t.name)));n.push(t),yield chrome.storage.sync.set({themes:n}),o(),Re.open("Theme saved successfully","",["OK"],(()=>{Ne=t.name,e?chrome.storage.sync.set({theme:t.name},(()=>location.href=`https://${w}`)):location.reload()}))}catch(e){o()}function o(){var e;if(chrome.runtime.lastError&&(null===(e=chrome.runtime.lastError.message)||void 0===e?void 0:e.includes("QUOTA_BYTES_PER_ITEM")))throw alert("No space remaining to save theme. Please delete another theme or make this theme smaller in order to save. Most commonly themes are too large if they have too many custom icons."),new Error("No space remaining to save theme. Please delete another theme or make this theme smaller in order to save. Most commonly themes are too large if they have too many custom icons.")}}))}Ne&&i.name!=Ne?Re.open("Rename Theme?",`Are you sure you want to rename "${Ne}" to "${i.name}"?`,["Rename","Cancel"],(e=>"Rename"===e&&c(i))):((0,l.trackEvent)("perform_action",{id:"color_type",context:"New Theme Created",value:Object.keys(i.color).find((e=>"modern"!==e)),legacyTarget:"color_type",legacyAction:Object.keys(i.color).find((e=>"modern"!==e)),legacyLabel:"New Theme Created"}),(0,l.trackEvent)("perform_action",{id:"logo_type",context:"New Theme Created",value:(null===(r=null==i?void 0:i.logo)||void 0===r?void 0:r.preset)||"custom",legacyTarget:"logo_type",legacyAction:(null===(a=null==i?void 0:i.logo)||void 0===a?void 0:a.preset)||"custom",legacyLabel:"New Theme Created"}),(0,l.trackEvent)("perform_action",{id:"cursor_type",context:"New Theme Created",value:i.cursor?"primary":"none",legacyTarget:"cursor_type",legacyAction:i.cursor?"primary":"none",legacyLabel:"New Theme Created"}),(0,l.trackEvent)("perform_action",{id:"modern_enabled",context:"New Theme Created",value:String(!!i.color.modern),legacyTarget:"modern_enabled",legacyAction:String(!!i.color.modern),legacyLabel:"New Theme Created"}),(0,l.trackEvent)("perform_action",{id:"preset",context:"New Theme Created",value:t?"Imported":null!=Se?Se:void 0,legacyTarget:"preset",legacyAction:t?"Imported":null!=Se?Se:void 0,legacyLabel:"New Theme Created"}),c(i))}function Ke(e,t,o){try{var n=new Image;t&&(n.onload=t),o&&(n.onerror=o),n.src=e}catch(e){null==o||o()}}function Je(e){Ue(T[e])}function Xe(e){Re.open("Delete Theme?",`Are you sure you want to delete the theme "${e}"?\nThe page will reload when the theme is deleted.`,["Delete","Cancel"],(t=>n(this,void 0,void 0,(function*(){if("Delete"===t){(0,l.trackEvent)("button_click",{id:"delete-theme",context:"Theme List",value:e,legacyTarget:`Theme: ${e}`,legacyAction:"delete",legacyLabel:"Theme List"});let t=yield chrome.storage.sync.get(["theme","themes"]);yield chrome.storage.sync.set({theme:t.theme==e?null:t.theme,themes:t.themes.filter((t=>t.name!=e))}),window.location.reload()}}))))}function Ze(e,t){t&&(Se=e),(0,l.trackEvent)("button_click",{id:"edit-theme",context:"Theme List",value:e,legacyTarget:`Theme: ${e}`,legacyAction:"edit",legacyLabel:"Theme List"}),clearInterval(C),ge.classList.add("hidden"),me.classList.remove("hidden");let o=e?T[e]:{name:"My Theme",hue:210};t&&(o.name=t),Ue(o),de.classList.add("show-editor-controls"),Pe.removeAttribute("readonly"),Array.from(pe.querySelectorAll(".class-name, .icon-url")).map((e=>e.setAttribute("contenteditable","true"))),Ne=t||e,document.querySelector("#json-output + label").textContent="JSON (Paste to import a theme)"}function Qe(){var e,t,o,n,r,a;(0,l.trackEvent)("button_click",{id:"add-theme-icon",context:"Theme Editor",legacyTarget:"new-icon",legacyAction:"click",legacyLabel:"Theme Editor"});let c=document.createElement("tr");c.innerHTML='<td style=text-align:center><a class="action-button tooltipped arrow-button move-down"data-tooltip="Move Down"><i class=material-icons>arrow_downward</i> </a><a class="action-button tooltipped arrow-button move-up"data-tooltip="Move Up"><i class=material-icons>arrow_upward</i></a><td class=class-name data-text="Class Name Pattern"><td class=icon-url data-text="Icon URL or paste/drop image"><td><img class="small-icon-preview" height=32/></td><td><a class="action-button tooltipped btn-flat delete-icon-button right waves-effect waves-light"data-tooltip=Delete><i class=material-icons>delete</i></a>',pe.appendChild(c);let s=c.querySelector(".small-icon-preview");if(null===(e=c.querySelector(".move-down"))||void 0===e||e.addEventListener("click",nt),null===(t=c.querySelector(".move-up"))||void 0===t||t.addEventListener("click",ot),null===(o=c.querySelector(".delete-icon-button"))||void 0===o||o.addEventListener("click",rt),null===(n=c.querySelector(".icon-url"))||void 0===n||n.addEventListener("paste",et),gt(c.querySelector(".icon-url"),c.querySelector(".small-icon-preview"),"textContent"),null===(r=c.querySelector(".class-name"))||void 0===r||r.addEventListener("paste",tt),null===(a=c.querySelector(".icon-url"))||void 0===a||a.addEventListener("input",(e=>s.src=e.target.textContent)),Array.from(c.querySelectorAll("td")).map((e=>e.addEventListener("blur",(e=>e.target.scrollLeft=0)))),i.default.Tooltip.init(c.querySelectorAll(".tooltipped"),{outDuration:0,inDuration:300,enterDelay:0,exitDelay:10}),lt()){let e=Array.from(c.querySelectorAll(".class-name, .icon-url"));e.map((e=>e.setAttribute("contenteditable","true"))),e.map((e=>e.addEventListener("input",$e)))}return c}function et(e){var t;let o=null===(t=e.clipboardData||e.originalEvent.clipboardData)||void 0===t?void 0:t.items,n=null;for(let e of null!=o?o:[])0===e.type.indexOf("image")&&(n=e.getAsFile());if(null!==n){e.preventDefault(),e.stopPropagation();let t=e.target;var r=new FileReader;r.onload=function(e){let o=e.target.result;t.dataset.originalText=t.dataset.text,t.dataset.text="Uploading...";let n=i.default.toast({html:"Uploading image...",displayLength:Number.MAX_SAFE_INTEGER});ut(null==o?void 0:o.toString(),(e=>{n.dismiss();let o=e.data.link;document.queryCommandSupported("insertText")?document.execCommand("insertText",!1,o):document.execCommand("paste",!1,o),(0,l.trackEvent)("perform_action",{id:"paste",context:"Theme Editor",value:"icon-image",legacyTarget:"icon-image",legacyAction:"paste",legacyLabel:"Theme Editor"}),t.dataset.text=t.dataset.originalText,t.dataset.originalText="",$e()}),(e=>{n.dismiss(),i.default.toast({html:`Uploading image failed: ${e.message||e.toString()}`}),t.dataset.text=t.dataset.originalText,t.dataset.originalText=""}))},r.readAsDataURL(n)}else tt(e)}function tt(e){var t;e.preventDefault();var o=void 0;(e.clipboardData||e.originalEvent.clipboardData)&&(o=null===(t=(e.originalEvent||e).clipboardData)||void 0===t?void 0:t.getData("text/plain")),document.queryCommandSupported("insertText")?document.execCommand("insertText",!1,o):document.execCommand("paste",!1,o)}function ot(e){var t,o;let n=e.target;for(;"TR"!=(null==n?void 0:n.tagName);)n=null!==(t=null==n?void 0:n.parentElement)&&void 0!==t?t:null;n.previousElementSibling&&(null===(o=null==n?void 0:n.parentNode)||void 0===o||o.insertBefore(n,n.previousElementSibling)),$e()}function nt(e){var t,o;let n=e.target;for(;"TR"!=(null==n?void 0:n.tagName);)n=null!==(t=null==n?void 0:n.parentElement)&&void 0!==t?t:null;n.nextElementSibling&&(null===(o=null==n?void 0:n.parentNode)||void 0===o||o.insertBefore(n.nextElementSibling,n)),$e()}function rt(e){var t;(0,l.trackEvent)("button_click",{id:"delete-theme-icon",context:"Theme Editor",legacyTarget:"delete-icon-button",legacyAction:"click",legacyLabel:"Theme Editor"});let o=e.target;for(;"TR"!=(null==o?void 0:o.tagName);)o=null!==(t=null==o?void 0:o.parentElement)&&void 0!==t?t:null;i.default.Tooltip.getInstance(o.querySelector(".delete-icon-button")).destroy(),o.outerHTML="",$e()}function at(){he.src=(e=>{if(!e)return chrome.runtime.getURL("imgs/fallback-course-icon.svg");if(e+=" ",Be&&Be.icons)for(let t of Be.icons)if(e.match(new RegExp(t.regex,"i")))return t.url;if(x()||"enabled"===S.useDefaultIconSet)for(let t of s.DEFAULT_ICONS)if(e.match(new RegExp(t.regex,"i")))return t.url;return chrome.runtime.getURL("imgs/fallback-course-icon.svg")})(be.value)}function it(e){(0,l.trackEvent)("button_click",{id:"copy-theme",context:"Theme List",value:e,legacyTarget:`Theme: ${e}`,legacyAction:"copy",legacyLabel:"Theme List"});let t=JSON.stringify(T[e]);var o=(0,a.default)("<textarea/>");o.text(t),(0,a.default)("body").append(o),o.select(),document.execCommand("copy"),o.remove(),i.default.toast({html:`Copied theme "${e}" to clipboard`})}function lt(){return!!document.querySelector(".show-editor-controls")}function ct(e){e.preventDefault(),e.stopPropagation()}function st(e){e.classList.contains("highlight")&&(e.classList.remove("highlight"),e.dataset.text=e.dataset.originalText,e.dataset.originalText="")}function dt(e){var t=document.createElement("template");return e=e.trim(),t.innerHTML=e,t.content.firstChild}function ut(e,t,o){function n(){fetch("https://api.imgur.com/3/image",{method:"POST",mode:"cors",headers:{"Content-Type":"application/json",Authorization:"Client-ID 56755c36eb5772d"},body:JSON.stringify({type:"base64",image:e.split(",")[1]})}).then((e=>{if(!e.ok)throw new Error(e.statusText);return e})).then((e=>e.json())).then(t).catch((e=>{g.Logger.log(e),o(e)}))}e?localStorage.getItem("imgurPromptViewed")?n():Re.open("Imgur Upload Consent","By clicking 'agree', you consent to have the image you just dropped or pasted uploaded to Imgur. Click cancel to prevent the upload. If you click 'agree' this message will not be shown again.",["Agree","Cancel"],(e=>{"Agree"===e?(localStorage.setItem("imgurPromptViewed","true"),n()):o(new Error("User did not give consent to upload"))})):o(new Error("Invalid URL"))}function gt(e,t,o){["dragenter","dragover","dragleave","drop"].forEach((t=>{e.addEventListener(t,ct,!1)})),["dragenter","dragover"].forEach((t=>{e.addEventListener(t,(t=>function(e){e.classList.contains("highlight")||(e.classList.add("highlight"),e.dataset.originalText=e.dataset.text,e.dataset.text="Drop to Use Image")}(e)),!1)})),e.addEventListener("dragleave",(t=>st(e)),!1),e.addEventListener("drop",(n=>{st(e),function(e,t,o,n){try{if(e.dataTransfer&&e.dataTransfer.files.length>0){let o=e.dataTransfer.files[0],n=new FileReader;n.onloadend=()=>{var e;t.dataset.originalText=t.dataset.text,t.dataset.text="Uploading...";let o=i.default.toast({html:"Uploading image...",displayLength:Number.MAX_SAFE_INTEGER});ut(null===(e=n.result)||void 0===e?void 0:e.toString(),(e=>{r(e.data.link,o)}),(e=>{o.dismiss(),i.default.toast({html:`Uploading image failed: ${e.message||e.toString()}`}),t.dataset.text=t.dataset.originalText,t.dataset.originalText=""}))},n.readAsDataURL(o)}else e.dataTransfer&&e.dataTransfer.items.length>=3&&e.dataTransfer.items[2].getAsString((e=>{r(dt(e).src)}))}catch(e){i.default.toast({html:"Error: Invalid image file"}),g.Logger.error(e)}function r(e,r){(0,l.trackEvent)("perform_action",{id:"drop",context:"Theme Editor",value:"icon-image",legacyTarget:"icon-image",legacyAction:"drop",legacyLabel:"Theme Editor"}),r&&r.dismiss(),o&&(o.src=e),t[n]=e,t.dataset.text=t.dataset.originalText,t.dataset.originalText="",$e()}}(n,e,t,o)}),!1)}function mt(e,t){var o,n;e.originalEvent&&($e(),document.getElementById(e.target.dataset.display).textContent=null!==(n=null===(o=t.value)||void 0===o?void 0:o.toString())&&void 0!==n?n:"<ERR>")}function ht(e,t){var o,n;e.originalEvent&&(document.getElementById(e.target.id+"-display").textContent=`${null===(o=t.values)||void 0===o?void 0:o[0]} - ${null===(n=t.values)||void 0===n?void 0:n[1]}`,$e())}function pt(){$e()}},3137:function(e,t){"use strict";var o=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(r,a){function i(e){try{c(n.next(e))}catch(e){a(e)}}function l(e){try{c(n.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,l)}c((n=n.apply(e,t||[])).next())}))},n=this&&this.__rest||function(e,t){var o={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(n=Object.getOwnPropertySymbols(e);r<n.length;r++)t.indexOf(n[r])<0&&Object.prototype.propertyIsEnumerable.call(e,n[r])&&(o[n[r]]=e[n[r]])}return o};Object.defineProperty(t,"__esModule",{value:!0}),t.initializeAnalytics=t.getAnalyticsUserId=t.trackEvent=void 0,t.trackEvent=function(e,t={}){var{legacyTarget:o,legacyAction:r,legacyLabel:a,legacyValue:i,id:l,context:c,value:s}=t;n(t,["legacyTarget","legacyAction","legacyLabel","legacyValue","id","context","value"]),console.debug("[S+] Tracking disabled by user",arguments)},t.getAnalyticsUserId=function(){return o(this,void 0,void 0,(function*(){let e=yield chrome.storage.local.get({randomUserId:null});if(!e.randomUserId){let e=function(){var e=new Uint8Array(32);crypto.getRandomValues(e);for(var t="",o=0;o<e.length;++o)t+=e[o].toString(16);return t}();return yield chrome.storage.local.set({randomUserId:e}),e}return e.randomUserId}))},t.initializeAnalytics=function(e){return o(this,arguments,void 0,(function*({documentContext:e,isAnalyticsEnabled:o,selectedTheme:r,selectedBeta:a,currentVersion:i,newVersion:l,randomUserId:c,themeIsModern:s}){o&&function(){function o(...e){var t;null===(t=globalThis.dataLayer)||void 0===t||t.push(arguments)}function d(e){if(!e.isTrusted)return;let o=e.currentTarget||e.target;(0,t.trackEvent)("tracking_link_click",{legacyTarget:o.dataset.splusTrackingId||o.id||"Unlabeled Button",legacyAction:"click",legacyLabel:o.dataset.splusTrackingContext||"Tracking Link",legacyValue:o.dataset.splusTrackingValue||e.button,id:o.dataset.splusTrackingId||o.id||"Unlabeled Button",context:o.dataset.splusTrackingContext||"Tracking Link",value:o.dataset.splusTrackingValue})}if(globalThis.dataLayer=globalThis.dataLayer||[],o("js",new Date),o("config","G-YM6B00RDYC",{page_location:location.href.replace(/\/\d{3,}\b/g,"/*"),page_path:location.pathname.replace(/\/\d{3,}\b/g,"/*"),page_title:null,user_id:c,user_properties:{theme:r,activeBeta:a,lastEnabledVersion:l,extensionVersion:i,domain:location.host,modernTheme:s}}),t.trackEvent=function(e,t={}){var{legacyTarget:r,legacyAction:a,legacyLabel:i,legacyValue:l,id:c,context:s,value:d}=t,u=n(t,["legacyTarget","legacyAction","legacyLabel","legacyValue","id","context","value"]);let g=Object.assign({id:c,context:s,value:d},u);console.debug("[S+] Tracked event:",e,g),o("event",e,g)},e){let g=new Set,m=new MutationObserver(((e,t)=>{for(let e of document.querySelectorAll(".splus-track-clicks:not(.splus-tracked)"))g.has(e)||(e.addEventListener("click",d),e.addEventListener("auxclick",d),e.classList.add("splus-tracked"),g.add(e))}));var u=setInterval((function(){"complete"===document.readyState&&(clearInterval(u),h())}),10);function h(){m.observe(document.body,{childList:!0,subtree:!0});for(let e of document.querySelectorAll(".splus-track-clicks"))g.has(e)||(e.addEventListener("click",d),e.addEventListener("auxclick",d),e.classList.add("splus-tracked"),g.add(e))}}}()}))}},5252:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_THEME_NAME=t.DISCORD_URL=t.EXTENSION_WEBSITE=t.EXTENSION_NAME=void 0,t.EXTENSION_NAME="Schoology Plus",t.EXTENSION_WEBSITE="https://schoologypl.us",t.DISCORD_URL="https://discord.schoologypl.us",t.DEFAULT_THEME_NAME=t.EXTENSION_NAME},7239:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_ICONS=void 0,t.DEFAULT_ICONS=[{regex:"\\bPE\\b|Phys(ical)? Edu?(cation)?|\\bSRLA\\b|TRK|TRACK FIELD|CROSS C|ADV COND|MO?V BD AWR|ATHLETIC|SPORTS|FITNESS|PHYS FIT",url:"https://cdn-icons-png.flaticon.com/512/2553/2553967.png",source:"exercise_2553967"},{regex:"WO?R?LD HIST?(ORY)?|WHG|WLD LANG|LAT AM|INTL REL",url:"https://cdn-icons-png.flaticon.com/512/174/174249.png",source:"internet_174249"},{regex:"ANIMAL",url:"https://cdn-icons-png.flaticon.com/512/2109/2109342.png",source:"barn_2109342"},{regex:"ANIM",url:"https://cdn-icons-png.flaticon.com/512/2037/2037876.png",source:"animation_2037876"},{regex:"FOREN",url:"https://cdn-icons-png.flaticon.com/512/1616/1616525.png",source:"forensic-science_1616525"},{regex:"AUTO.*[TM]ECH|[MT]ECH.*AUTO|AUTO MAIN",url:"https://cdn-icons-png.flaticon.com/512/2040/2040989.png",source:"car-service_2040989"},{regex:"ALG(EB|EBRA)?(\\d|\\b)",url:"https://cdn-icons-png.flaticon.com/512/167/167753.png",source:"blackboard_167753"},{regex:"ART HIST|PAINT",url:"https://cdn-icons-png.flaticon.com/512/214/214275.png",source:"paint-brush_214275"},{regex:"EUR",url:"https://cdn-icons-png.flaticon.com/512/664/664549.png",source:"europe_664549"},{regex:"PHYSICS|PHY:C",url:"https://cdn-icons-png.flaticon.com/512/164/164969.png",source:"science_164969"},{regex:"ASTRONOMY",url:"https://cdn-icons-png.flaticon.com/512/124/124553.png",source:"telescope_124553"},{regex:"PRE ?CALC",url:"https://cdn-icons-png.flaticon.com/512/1074/1074140.png",source:"parabola_1074140"},{regex:"BASKETBALL|BSKTBL",url:"https://cdn-icons-png.flaticon.com/512/500/500245.png",source:"basketball_500245"},{regex:"(^|\\b)CALC(ULUS)?\\b",url:"https://cdn-icons-png.flaticon.com/512/1572/1572296.png",source:"line-graph_1572296"},{regex:"CHEER|DRILL",url:"https://cdn-icons-png.flaticon.com/512/2185/2185584.png",source:"cheerleaders_2185584"},{regex:"CHEM",url:"https://cdn-icons-png.flaticon.com/512/123/123381.png",source:"flask_123381"},{regex:"GAME DESG?N|GAME DESIGN",url:"https://cdn-icons-png.flaticon.com/512/1737/1737285.png",source:"computer_1737285"},{regex:"COMP SCI?|COMPUTER|INTRO COMP|COMP PRO?G|INTRO PROG|CODING|INTE?R?NE?T|DIGITAL LIT|JAVA",url:"https://cdn-icons-png.flaticon.com/512/626/626570.png",source:"binary-code_626570"},{regex:"US HIST|AMER(ICAN?)?|AM DEM|AM IMAGE|IB HS AMR",url:"https://cdn-icons-png.flaticon.com/512/149/149513.png",source:"united-states-of-america_149513"},{regex:"HE?A?LTH|MEDICAL|MED INTERVEN|MEDICINE|HOSP|PATIENT",url:"https://cdn-icons-png.flaticon.com/512/179/179555.png",source:"first-aid-kit_179555"},{regex:"CERAMICS|AM IND",url:"https://cdn-icons-png.flaticon.com/512/123/123458.png",source:"pot_123458"},{regex:"FLOR|FLOWER",url:"https://cdn-icons-png.flaticon.com/512/346/346167.png",source:"flower_346167"},{regex:"MARINE|ZOOLOGY|OCEAN",url:"https://cdn-icons-png.flaticon.com/512/146/146718.png",source:"turtle_146718"},{regex:"MAND|CHINESE|CHINA|CHIN LANG",url:"https://cdn-icons-png.flaticon.com/512/2448/2448781.png",source:"flag_2448781"},{regex:"KOREA",url:"https://cdn-icons-png.flaticon.com/512/1999/1999610.png",source:"korea_1999610"},{regex:"PSYC|IB THEORY",url:"https://cdn-icons-png.flaticon.com/512/552/552408.png",source:"creativity_552408"},{regex:"PIANO|KEYBOARD",url:"https://cdn-icons-png.flaticon.com/512/1973/1973888.png",source:"keyboard_1973888"},{regex:"EXPO TE?XT|SH STORY",url:"https://cdn-icons-png.flaticon.com/512/176/176690.png",source:"writing_176690"},{regex:"DISCR",url:"https://cdn-icons-png.flaticon.com/512/251/251986.png",source:"calculating_251986"},{regex:"VET",url:"https://cdn-icons-png.flaticon.com/512/2659/2659366.png",source:"pawprint_2659366"},{regex:"ORCH|VIOLIN|STRINGS",url:"https://cdn-icons-png.flaticon.com/512/124/124811.png",source:"violin_124811"},{regex:"BAND|MAR DYN",url:"https://cdn-icons-png.flaticon.com/512/718/718543.png",source:"drums_718543"},{regex:"SOCCER",url:"https://cdn-icons-png.flaticon.com/512/1800/1800944.png",source:"football_1800944"},{regex:"LACROSS",url:"https://cdn-icons-png.flaticon.com/512/2827/2827041.png",source:"lacrosse_2827041"},{regex:"MUSIC|JAZZ|CHOIR|INSTRUM|WIND PERC|HARMONY|GLEE|CHORUS|VOC ENSEMBLE|SING|VOICE",url:"https://cdn-icons-png.flaticon.com/512/579/579496.png",source:"treble-clef_579496"},{regex:"BIO(LOGY|TECH(NOLOGY)?|MED)?\\b|GENETICS",url:"https://cdn-icons-png.flaticon.com/512/620/620366.png",source:"dna_620366"},{regex:"(^|\\b)LIT(ERATURE)?\\b|READ|L & L|LIBRARY",url:"https://cdn-icons-png.flaticon.com/512/167/167755.png",source:"open-book_167755"},{regex:"STAGE|THEATRE DSN|TH DSN WKSP|CHORPROC",url:"https://cdn-icons-png.flaticon.com/512/2673/2673346.png",source:"spotlight_2673346"},{regex:"ADVT DES",url:"https://cdn-icons-png.flaticon.com/512/1055/1055664.png",source:"ads_1055664"},{regex:"ECON(O(MICS)?)?|AP MA ECO|FIN MGMT|FINANCIAL",url:"https://cdn-icons-png.flaticon.com/512/712/712743.png",source:"profit_712743"},{regex:"STAT(STICS|ISTCS)|STATS?|STATISTICS",url:"https://cdn-icons-png.flaticon.com/512/1006/1006636.png",source:"analysis_1006636"},{regex:"FILM(MAKING)?\\b|VIDEO|VID PRD|BRDCST|CINEMA|SCREEN PLAY",url:"https://cdn-icons-png.flaticon.com/512/321/321799.png",source:"video-camera_321799"},{regex:"(FIR|1)ST RESPONDER",url:"https://cdn-icons-png.flaticon.com/512/119/119083.png",source:"ambulance_119083"},{regex:"GEOLOGY",url:"https://cdn-icons-png.flaticon.com/512/184/184647.png",source:"science_184647"},{regex:"COOK|CULINARY|FOOD|CATER",url:"https://cdn-icons-png.flaticon.com/512/1142/1142696.png",source:"cooking_1142696"},{regex:"\\bGOVT\\b|YOU ADM JUS|JUSTICE",url:"https://cdn-icons-png.flaticon.com/512/167/167718.png",source:"university_167718"},{regex:"GEOM",url:"https://cdn-icons-png.flaticon.com/512/258/258316.png",source:"office-material_258316"},{regex:"GUIT(AR)?|MARIACHI|UKELELE",url:"https://cdn-icons-png.flaticon.com/512/1586/1586234.png",source:"guitar_1586234"},{regex:"MYP ST TECH|\\bCTE\\b|SEM(INAR)?\\b|ENGINEER|\\bENG DE\\b|INTRO ENGIN|CREAT EXP|STEA?M|MULTICRAFT CORE",url:"https://cdn-icons-png.flaticon.com/512/1460/1460471.png",source:"idea_1460471"},{regex:"FLIGHT|SPACE|AEROSPA?CE",url:"https://cdn-icons-png.flaticon.com/512/744/744502.png",source:"globe_744502"},{regex:"ENG(LISH)?\\b|CREAT(IVE)? WRI?T(ING)?|\\bCOMP(OSITION)?\\b|\\bERWC\\b|LANGUAGE ARTS|LNG ART|\\bELA\\b",url:"https://cdn-icons-png.flaticon.com/512/254/254022.png",source:"signing_254022"},{regex:"SPAN(ISH)?\\b|SP LANG",url:"https://cdn-icons-png.flaticon.com/512/8081/8081829.png",source:"spanish-language_8081829"},{regex:"FREN(CH)?\\b|AP FR LANG",url:"https://cdn-icons-png.flaticon.com/512/206/206657.png",source:"france_206657"},{regex:"ITALIAN",url:"https://cdn-icons-png.flaticon.com/512/555/555668.png",source:"italy_555668"},{regex:"ENV",url:"https://cdn-icons-png.flaticon.com/512/291/291211.png",source:"recycle_291211"},{regex:"ROBOT|MFG|INTRO PHYS COMPUTING|MACHINING|MACHI?NI?ST",url:"https://cdn-icons-png.flaticon.com/512/1546/1546683.png",source:"robotic-arm_1546683"},{regex:"MEDIA",url:"https://cdn-icons-png.flaticon.com/512/1649/1649092.png",source:"media-player_1649092"},{regex:"CYBER",url:"https://cdn-icons-png.flaticon.com/512/2084/2084028.png",source:"cyber-security_2084028"},{regex:"GEOG|HUMAN GEO",url:"https://cdn-icons-png.flaticon.com/512/717/717982.png",source:"globe_717982"},{regex:"(^|\\b)ART\\b|DES CRAFT|CRAFTS",url:"https://cdn-icons-png.flaticon.com/512/1497/1497573.png",source:"creativity_1497573"},{regex:"AM SIGN LNG",url:"https://cdn-icons-png.flaticon.com/512/2014/2014363.png",source:"sign-language_2014363"},{regex:"DANCE?|DN CH|DNC CMP?NT?Y|BALLET?",url:"https://cdn-icons-png.flaticon.com/512/493/493507.png",source:"dancing_493507"},{regex:"APP CREAT",url:"https://cdn-icons-png.flaticon.com/512/186/186239.png",source:"smartphone_186239"},{regex:"MUSEUM",url:"https://cdn-icons-png.flaticon.com/512/252/252032.png",source:"banks_252032"},{regex:"GOLF",url:"https://cdn-icons-png.flaticon.com/512/1584/1584143.png",source:"golf_1584143"},{regex:"JAPAN",url:"https://cdn-icons-png.flaticon.com/512/206/206789.png",source:"japan_206789"},{regex:"MEX",url:"https://cdn-icons-png.flaticon.com/512/206/206600.png",source:"mexico_206600"},{regex:"RUSSIA",url:"https://cdn-icons-png.flaticon.com/512/206/206604.png",source:"russia_206604"},{regex:"(^|\\b)ELD\\b|(^|\\b)ELS\\b|(^|\\b)ELL\\b",url:"https://cdn-icons-png.flaticon.com/512/947/947478.png",source:"book_947478"},{regex:"(^|\\b)THEA(T[ER][ER])?\\b|DRAMA|PERFORM ART",url:"https://cdn-icons-png.flaticon.com/512/214/214351.png",source:"theater_214351"},{regex:"LEADER",url:"https://cdn-icons-png.flaticon.com/512/1534/1534091.png",source:"government_1534091"},{regex:"SERVICE|T\\.A\\.|PEER COUNSELING|TUTOR|AVID|ETHNIC|ETHN STUDIES|INTERACTIONS|ANTHRO|SOCI|DECATHLON|PENTATHLON|AFRO-AM",url:"https://cdn-icons-png.flaticon.com/512/4337/4337288.png",source:"idea_4337288"},{regex:"LATIN|\\bLAW\\b|CALLIGRAPHY",url:"https://cdn-icons-png.flaticon.com/512/1020/1020074.png",source:"manuscript_1020074"},{regex:"HUMANITI?E?S?|LIFE (MGMT|SKI?L?LS)|PHIL",url:"https://cdn-icons-png.flaticon.com/512/1205/1205495.png",source:"discussion_1205495"},{regex:"YEARBOOK|DIG IMAG|PHOTO",url:"https://cdn-icons-png.flaticon.com/512/1006/1006107.png",source:"memories_1006107"},{regex:"NETWORKING",url:"https://cdn-icons-png.flaticon.com/512/1554/1554377.png",source:"network_1554377"},{regex:"RES(EA)?RCH",url:"https://cdn-icons-png.flaticon.com/512/164/164996.png",source:"research_164996"},{regex:"COL(LEGE)?\\b|CLASS OF",url:"https://cdn-icons-png.flaticon.com/512/167/167743.png",source:"mortarboard_167743"},{regex:"CAREER|JOB|GEN WRK|\\bWORK\\b|ENTERP|SMALL BUS",url:"https://cdn-icons-png.flaticon.com/512/149/149018.png",source:"briefcase_149018"},{regex:"ADVIS|HOME|SOCIAL COM|GRADE \\d|BOOKS",url:"https://cdn-icons-png.flaticon.com/512/167/167729.png",source:"desk_167729"},{regex:"SWIM",url:"https://cdn-icons-png.flaticon.com/512/124/124212.png",source:"swimming_124212"},{regex:"CONSTRUCTION|WOOD|CARPENTRY?",url:"https://cdn-icons-png.flaticon.com/512/1973/1973946.png",source:"woodworking_1973946"},{regex:"VO?LLE?YBA?LL?",url:"https://cdn-icons-png.flaticon.com/512/68/68175.png",source:"volley-ball_68175"},{regex:"FOOTBALL",url:"https://cdn-icons-png.flaticon.com/512/167/167741.png",source:"american-football_167741"},{regex:"JOURNALI?SM",url:"https://cdn-icons-png.flaticon.com/512/1720/1720094.png",source:"communication_1720094"},{regex:"TENNIS",url:"https://cdn-icons-png.flaticon.com/512/1645/1645793.png",source:"tennis_1645793"},{regex:"SPEECH",url:"https://cdn-icons-png.flaticon.com/512/512/512500.png",source:"speak_512500"},{regex:"WRESTLING",url:"https://cdn-icons-png.flaticon.com/512/577/577132.png",source:"wrestling_577132"},{regex:"GRAPH(IC)? (DESIGN|COMM|ARTS)|INTR INT VD",url:"https://cdn-icons-png.flaticon.com/512/148/148862.png",source:"layers_148862"},{regex:"FASH DSN",url:"https://cdn-icons-png.flaticon.com/512/770/770088.png",source:"dress_770088"},{regex:"JROTC",url:"https://cdn-icons-png.flaticon.com/512/942/942444.png",source:"rank_942444"},{regex:"WATERPOLO",url:"https://cdn-icons-png.flaticon.com/512/625/625383.png",source:"water-polo_625383"},{regex:"HORT|LANDSCAP",url:"https://cdn-icons-png.flaticon.com/512/346/346195.png",source:"sprout_346195"},{regex:"ARABIC",url:"https://cdn-icons-png.flaticon.com/512/1704/1704491.png",source:"pattern_1704491"},{regex:"GERMAN",url:"https://cdn-icons-png.flaticon.com/512/555/555613.png",source:"germany_555613"},{regex:"HIST|ANCT CIVL",url:"https://cdn-icons-png.flaticon.com/512/1501/1501478.png",source:"parchment_1501478"},{regex:"SCULPT",url:"https://cdn-icons-png.flaticon.com/512/2071/2071211.png",source:"sculpture_2071211"},{regex:"SCI|ISCS",url:"https://cdn-icons-png.flaticon.com/512/167/167733.png",source:"microscope_167733"},{regex:"(BASE|SOFT)BALL",url:"https://cdn-icons-png.flaticon.com/512/1668/1668514.png",source:"baseball_1668514"},{regex:"PHYSIO|HUM BODY|BOD DYN|KINESIOLOGY",url:"https://cdn-icons-png.flaticon.com/512/2044/2044715.png",source:"x-ray_2044715"},{regex:"(^|\\b)MATH|IB MTH",url:"https://cdn-icons-png.flaticon.com/512/1284/1284095.png",source:"mathematics_1284095"},{regex:"DRAW|2D|3D|DESIGN|DE?SN|DRAFT ARC|SCREEN PRINT|EXPL ARCH|DRAFT TEC",url:"https://cdn-icons-png.flaticon.com/512/681/681560.png",source:"sketch_681560"},{regex:"SANDBOX",url:"https://cdn-icons-png.flaticon.com/512/1588/1588745.png",source:"sandbox_1588745"},{regex:"DRIVER|DRIVING",url:"https://cdn-icons-png.flaticon.com/512/741/741407.png",source:"car_741407"},{regex:".",url:"https://cdn-icons-png.flaticon.com/512/164/164949.png",source:"bookshelf_164949"}]},8563:(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_THEMES=t.CLASSIC_THEMES=t.LAUSD_THEMES=void 0;const n=o(5252);t.LAUSD_THEMES=["LAUSD Orange","LAUSD Dark Blue","LAUSD 2019"],t.CLASSIC_THEMES=["Schoology Plus","Rainbow"],t.DEFAULT_THEMES=[{name:"Schoology Plus Modern Light",version:2,color:{hue:200,modern:{dark:!1,interface:{primary:"#EAEAEA",accent:"#F7F7F7",secondary:"#DDD",input:"#D0D0D0",border:"#BABABA",highlight:"rgba(255, 183, 2, 0.2)",active:"rgba(152, 212, 228, 0.8)",grades:"#009400",error:"#F44336"},calendar:["#d6e7f4","#d7e8cf","#f9e9d4","#e7e0e5","#e6b5c9","#f9f1cf","#daf0f9","#f9ddea","#fbd7d8","#f1f2d1","#e0e8f5","#fbd7e4","#fcddd3","#e7f2d5","#e6e0ee","#f0e5db","#fce8d1","#e1f1e7","#f0dfed","#e9e9ea","#00427c","#603073","#8b1941","#970c0c","#9c3b07","#685203","#2a5f16","#09584f","#005a75","#4d5557"],text:{primary:"#2A2A2A",muted:"#677583",contrast:"white"},options:{borderRadius:5,borderSize:1,padding:10}}},logo:{preset:"schoology_plus"}},{name:"Schoology Plus Modern Dark",version:2,color:{custom:{primary:"#202225",hover:"#40444B",background:"#36393f",border:"#40444b",link:"#6fa8dc"},modern:{dark:!0,interface:{primary:"#36393F",accent:"#2F3136",secondary:"#202225",input:"#40444B",border:"#DCDDDE",highlight:"rgba(184, 134, 11, 0.2)",active:"rgba(0, 255, 255, 0.1)",grades:"#8BC34A",error:"#F44336"},calendar:["#457da5","#547c41","#926c37","#7c3d6b","#0b4c9c","#00209c","#004a09","#72721a","#44233e","#683131","#770a0a","#a72413","#E0024C","#188C16","#bd7304","#80168C","#164152","#00543f","#633e11","#461b2d","#00427c","#603073","#8b1941","#970c0c","#9c3b07","#685203","#2a5f16","#09584f","#005a75","#4d5557"],text:{primary:"#DCDDDE",muted:"#72767D",contrast:"#EEEEEE"},options:{borderRadius:5,borderSize:1,padding:10}}},logo:{preset:"schoology_plus"}},{name:"Rainbow Modern",version:2,color:{rainbow:{hue:{animate:{speed:50,offset:0,min:0,max:359,alternate:!1}},saturation:{value:50},lightness:{value:50}},modern:{dark:!1,interface:{primary:"#EAEAEA",accent:"#F7F7F7",secondary:"#DDD",input:"#D0D0D0",border:"#BABABA",highlight:"rgba(255, 183, 2, 0.2)",active:"rgba(152, 212, 228, 0.8)",grades:"#009400",error:"#F44336"},calendar:["#d6e7f4","#d7e8cf","#f9e9d4","#e7e0e5","#e6b5c9","#f9f1cf","#daf0f9","#f9ddea","#fbd7d8","#f1f2d1","#e0e8f5","#fbd7e4","#fcddd3","#e7f2d5","#e6e0ee","#f0e5db","#fce8d1","#e1f1e7","#f0dfed","#e9e9ea","#00427c","#603073","#8b1941","#970c0c","#9c3b07","#685203","#2a5f16","#09584f","#005a75","#4d5557"],text:{primary:"#2A2A2A",muted:"#677583",contrast:"white"},options:{borderRadius:5,borderSize:1,padding:10}}},logo:{preset:"schoology_plus"}},{name:n.DEFAULT_THEME_NAME,version:2,color:{hue:210},logo:{preset:"schoology_plus"}},{name:"Rainbow",version:2,color:{rainbow:{hue:{animate:{speed:50,offset:0,min:0,max:359,alternate:!1}},saturation:{value:50},lightness:{value:50}}},logo:{preset:"schoology_plus"}},{name:"Toy",version:2,color:{hue:150},logo:{preset:"schoology_plus"},cursor:{primary:chrome.runtime.getURL("/imgs/toy-mode.png")}},{name:"LAUSD Dark Blue",version:2,color:{custom:{primary:"#143f69",hover:"#345f89",background:"#345f89",border:"#024f7d"}},logo:{preset:"lausd_2022"}},{name:"LAUSD 2019",version:2,color:{custom:{primary:"#143f69",hover:"#345f89",background:"#345f89",border:"#024f7d"}},logo:{preset:"lausd_2019"}},{name:"LAUSD Orange",version:2,color:{custom:{primary:"#ff7a00",hover:"#ff9a20",background:"#ff8a10",border:"#df5a00"}},logo:{preset:"lausd_legacy"}},{name:"Schoology Default",version:2,color:{custom:{primary:"#0677ba",hover:"#024f7d",background:"#002c47",border:"#024f7d"}},logo:{preset:"schoology_logo"}}]},933:(e,t)=>{"use strict";function o(e,t,o,n){let r=document.createElement(e);if(t)for(let e of t)r.classList.add(e);if(o)for(let e in o)if(o[e]instanceof Object&&!(o[e]instanceof Function))for(let t in o[e])r[e][t]=o[e][t];else void 0!==e&&void 0!==o[e]&&(r[e]=o[e]);if(n)for(let e of n)r.appendChild(e);return r}function n(e,t,n){return o("span",["submit-span-wrapper","splus-modal-button"],{onclick:n},[o("input",["form-submit","splus-track-clicks"],{type:"button",value:t,id:e,dataset:{splusTrackingContext:"S+ Button"}})])}function r(...e){let t=document.createElementNS("http://www.w3.org/2000/svg","circle");t.setAttribute("cx","250"),t.setAttribute("cy","250"),t.setAttribute("r","230"),t.setAttribute("style","fill: none; stroke-width: 35px; stroke: currentColor;");let o=document.createElementNS("http://www.w3.org/2000/svg","line");o.setAttribute("x1","250"),o.setAttribute("y1","125"),o.setAttribute("x2","250"),o.setAttribute("y2","375"),o.setAttribute("style","stroke-linecap: round; stroke-width: 35px; stroke: currentColor;");let n=document.createElementNS("http://www.w3.org/2000/svg","line");n.setAttribute("x1","125"),n.setAttribute("y1","250"),n.setAttribute("x2","375"),n.setAttribute("y2","250"),n.setAttribute("style","stroke-linecap: round; stroke-width: 35px; stroke: currentColor;");let r=document.createElementNS("http://www.w3.org/2000/svg","svg");return r.setAttribute("viewBox","0 0 500 500"),r.append(t,o,n),e&&r.classList.add(...e),r}Object.defineProperty(t,"__esModule",{value:!0}),t.waitForElement=t.createSvgLogo=t.setCSSVariable=t.getParents=t.isVisible=t.getBrowser=t.createButtonWithLogo=t.createButton=t.createElement=void 0,t.createElement=o,t.createButton=n,t.createButtonWithLogo=function(e,t,o){let a=n(e,t,o),i=r();Object.assign(i.style,{verticalAlign:"middle",paddingLeft:"4px",width:"18px"}),a.prepend(i),a.style.setProperty("height","36px","important");let l=a.querySelector("input");return l.style.paddingLeft="4px",l.style.setProperty("height","36px","important"),a.style.cursor="pointer",a},t.getBrowser=function(){return void 0!==globalThis.chrome?void 0!==globalThis.browser?"Firefox":"Chrome":"Other"},t.isVisible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},t.getParents=function(e,t){var o,n=[];for(t&&(o=t.charAt(0));e&&e!==document.documentElement;e=e.parentNode)t?("."===o&&e.classList.contains(t.substr(1))&&n.push(e),"#"===o&&e.id===t.substr(1)&&n.push(e),"["===o&&e.hasAttribute(t.substr(1,t.length-1))&&n.push(e),e.tagName.toLowerCase()===t&&n.push(e)):n.push(e);return n},t.setCSSVariable=function(e,t){document.documentElement.style.setProperty(`--${e}`,null!=t?t:null)},t.createSvgLogo=r,t.waitForElement=function(e,t=50){return new Promise((o=>{let n=setInterval((()=>{let t=document.querySelector(e);t&&(clearInterval(n),o(t))}),t)}))}},2589:(e,t)=>{"use strict";function o(e){return`color:${e};border:1px solid #2A2A2A;border-radius:100%;font-size:14px;font-weight:bold;padding: 0 4px 0 4px;background-color:#2A2A2A`}Object.defineProperty(t,"__esModule",{value:!0}),t.Logger=void 0,t.Logger={log:console.log.bind(globalThis.console,"%c+",o("#81D4FA")),error:console.error.bind(globalThis.console,"%c+",o("#FF6961")),info:console.info.bind(globalThis.console,"%c+",o("white")),warn:console.warn.bind(globalThis.console,"%c+",o("#FDFD96")),trace:console.trace.bind(globalThis.console,"%c+",o("orange")),debug:console.debug.bind(globalThis.console,"%c+",o("lightgreen"))}},7012:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SchoologyTheme=t.ThemeIcon=t.ThemeCursor=t.ThemeLogo=t.ThemeColor=t.ModernColorDefinition=t.ModernOptionsDefinition=t.ModernTextColorDefinition=t.ModernInterfaceColorDefinition=t.RainbowColorDefinition=t.RainbowColorComponentDefinition=t.RainbowColorComponentAnimation=t.CustomColorDefinition=void 0;class o{constructor(e,t,o,n,r){this.primary=e,this.hover=t,this.background=o,this.border=n,this.link=r||t}static loadFromObject(e){return e?new o(e.primary,e.hover,e.background,e.border,e.link||e.hover):void 0}}t.CustomColorDefinition=o;class n{constructor(e,t,o,n,r){this.speed=e,this.offset=t,this.min=o,this.max=n,this.alternate=r}static loadFromObject(e){return e?new n(e.speed,e.offset,e.min,e.max,e.alternate):void 0}}t.RainbowColorComponentAnimation=n;class r{constructor(e,t){this.animate=e,this.value=t}static loadFromObject(e){return e?new r(n.loadFromObject(e.animate),e.value):void 0}}t.RainbowColorComponentDefinition=r;class a{constructor(e,t,o){this.hue=e,this.saturation=t,this.lightness=o}static loadFromObject(e){return e?new a(r.loadFromObject(e.hue),r.loadFromObject(e.saturation),r.loadFromObject(e.lightness)):void 0}}t.RainbowColorDefinition=a;class i{constructor(e,t,o,n,r,a,i,l,c){this.primary=e,this.accent=t,this.secondary=o,this.input=n,this.border=r,this.highlight=a,this.active=i,this.grades=l,this.error=c}static loadFromObject(e){return e?new i(e.primary,e.accent,e.secondary,e.input,e.border,e.highlight,e.active,e.grades,e.error):void 0}}t.ModernInterfaceColorDefinition=i;class l{constructor(e,t,o){this.primary=e,this.muted=t,this.contrast=o}static loadFromObject(e){return e?new l(e.primary,e.muted,e.contrast):void 0}}t.ModernTextColorDefinition=l;class c{constructor(e,t,o){this.borderRadius=e,this.borderSize=t,this.padding=o}static loadFromObject(e){return e?new c(e.borderRadius,e.borderSize,e.padding):void 0}}t.ModernOptionsDefinition=c;class s{constructor(e,t,o,n,r){this.dark=e,this.interface=t,this.calendar=o,this.text=n,this.options=r}static loadFromObject(e){return e?new s(e.dark,i.loadFromObject(e.interface),e.calendar,l.loadFromObject(e.text),c.loadFromObject(e.options)):void 0}}t.ModernColorDefinition=s;class d{constructor(e,t,o,n){this.hue=e,this.custom=t,this.rainbow=o,this.modern=n}static loadFromObject(e){return e?new d(e.hue,o.loadFromObject(e.custom),a.loadFromObject(e.rainbow),s.loadFromObject(e.modern)):new d(210)}}t.ThemeColor=d;class u{constructor(e,t){this.url=e,this.preset=t}static loadFromObject(e){return e?new u(e.url,e.preset):new u(void 0,"schoology_plus")}}t.ThemeLogo=u;class g{constructor(e){this.primary=e}static loadFromObject(e){return e?new g(e.primary):void 0}}t.ThemeCursor=g;class m{constructor(e,t){this.regex=e,this.url=t}static loadArrayFromObject(e){return e?e.map((e=>new m(e.regex,e.url))):void 0}}t.ThemeIcon=m;class h{constructor(e,t,o,n,r,a){if(!e)throw new Error("Theme must have a name");this.name=e,this.version=t||h.CURRENT_VERSION,this.color=o,this.logo=n,this.cursor=r,this.icons=a}toString(){return JSON.stringify(this)}static loadFromObject(e){if(e&&e.version===h.CURRENT_VERSION)return new h(e.name,e.version,d.loadFromObject(e.color),u.loadFromObject(e.logo),g.loadFromObject(e.cursor),m.loadArrayFromObject(e.icons));throw new Error(`Invalid theme object provided. Make sure the provided JSON is a valid version ${h.CURRENT_VERSION} theme.`)}}t.SchoologyTheme=h,h.CURRENT_VERSION=2},9390:e=>{"use strict";e.exports=M},1669:e=>{"use strict";e.exports=jQuery}},t={};!function o(n){var r=t[n];if(void 0!==r)return r.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,o),a.exports}(9690)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZWRpdG9yLmpzIiwibWFwcGluZ3MiOiI0QkFBQSxXQUtBLFNBQVdBLEdBQ1AsYUFHSSxFQUFPLENBQUMsU0FBVyxFQVF4QixTQUFTQyxFQUFHQyxHQUdYLElBQUlDLEVBQWMsQ0FHZEMsV0FBWUMsRUFDWkMsS0FBTUQsRUFDTkUsT0FBUUYsRUFDUkcsS0FBTUgsRUFDTkksS0FBTUosRUFHTkssT0FBTyxFQUNQQyxNQUFNLEVBQ05DLFdBQVcsRUFDWEMsWUFBWSxFQUNaQyxhQUFhLEVBQ2JDLHFCQUFxQixFQUNyQkMsYUFBYSxFQUNiQyxhQUFhLEVBQ2JDLGlCQUFpQixFQUNqQkMsd0JBQXdCLEVBQ3hCQyxtQkFBbUIsRUFDbkJDLHNCQUFzQixFQUN0QkMsaUJBQWlCLEVBQ2pCQyxTQUFVLE9BQ1ZDLGlCQUFrQixFQUNsQkMsV0FBWSxTQUNaQyxXQUFZLFNBQ1pDLHNCQUF1QixPQUN2QkMsc0JBQXVCLE9BQ3ZCQyxVQUFXLHdCQUNYQyxvQkFBcUIsb0JBQ3JCQyxpQkFBaUIsRUFDakJDLFVBQVcsR0FDWEMsbUJBQW9CLEdBQ3BCQyxrQkFBbUIsR0FDbkJDLFdBQVcsRUFDWEMsTUFBTyxXQUNQQyxRQUFTLENBQUMsQ0FBQyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsWUFDbkdDLGlCQUFrQixHQUNsQkMsVUFBVSxFQUNWQyxPQUFRLE1BRVpDLEVBQVksR0FDWkMsSUFBTyxRQUFRQyxLQUFNQyxPQUFPQyxVQUFVQyxXQUN0Q0MsRUFBYyxXQUNWLFNBQVNDLEVBQVVDLEVBQUtDLEdBQ3BCLFVBQVcsR0FBS0QsR0FBS0UsUUFBUUQsRUFDakMsQ0FFQSxJQUNJRSxFQURPQyxTQUFTQyxjQUFjLE9BQ2pCRixNQUVqQixPQURBQSxFQUFNRyxRQUFVLGtDQUNUUCxFQUFTSSxFQUFNSSxnQkFBaUIsU0FBV1IsRUFBU0ksRUFBTUksZ0JBQWlCLE9BQ3JGLENBVGEsR0FVZEMsRUFBZSxDQUNYLDRCQUNJLHFFQUNBLG1DQUNKLFVBQ0ZDLEtBQUssSUFDUEMsRUFBUyxXQUlMLElBQUlDLEVBQWMsR0FDbEIsR0FBSWxCLEVBQ0EsSUFBSyxJQUFJbUIsRUFBSSxFQUFHQSxHQUFLLEVBQUdBLElBQ3BCRCxHQUFlLGtCQUFvQkMsRUFBSSxXQUkvQyxNQUFPLENBQ0gsdUNBQ0kscUNBQ0ksZ0RBQ0Esa0RBQ0ksNERBQ0osU0FDSixTQUNBLG9DQUNJLDZCQUNJLDhCQUNBLDZCQUNJLHlCQUNJLHVCQUNJLHVCQUNJLGlDQUNKLFNBQ0osU0FDSixTQUNBLDBDQUNBLFNBQ0EsdUJBQ0ksZ0NBQ0FELEVBQ0osU0FDSixTQUNBLG9HQUNKLFNBQ0EseUNBQ0ksNkRBQ0osU0FDQSxnREFDQSwwQ0FDSSxxQ0FDQSxvREFDSixTQUNKLFNBQ0osVUFDRkYsS0FBSyxHQUNWLENBbERRLEdBb0RULFNBQVNJLEVBQWlCQyxFQUFHckQsRUFBT3NCLEVBQVdnQyxHQUUzQyxJQURBLElBQUlDLEVBQU8sR0FDRkosRUFBSSxFQUFHQSxFQUFJRSxFQUFFRyxPQUFRTCxJQUFLLENBQy9CLElBQUlNLEVBQVVKLEVBQUVGLEdBQ2hCLEdBQUdNLEVBQVMsQ0FDUixJQUFJQyxFQUFPQyxVQUFVRixHQUNqQkcsRUFBSUYsRUFBS0csUUFBUUMsRUFBSSxHQUFNLDRCQUE4Qiw2QkFDN0RGLEdBQU1ELFVBQVVJLE9BQU8vRCxFQUFPeUQsR0FBWSxtQkFBcUIsR0FDL0QsSUFBSU8sRUFBa0JOLEVBQUtPLFNBQVNYLEVBQUtqQyxpQkFBbUIsT0FDeEQ2QyxFQUFjN0IsRUFBZSxvQkFBc0JxQixFQUFLUyxjQUFpQixVQUFZVCxFQUFLVSxXQUM5RmIsRUFBS2MsS0FBSyxnQkFBa0JMLEVBQWtCLGlCQUFtQk4sRUFBS1MsY0FBZ0IsWUFBY1AsRUFBSSx5Q0FBMkNNLEVBQWMsb0JBQ3JLLEtBQU8sQ0FFSFgsRUFBS2MsS0FBSzlFLEVBQUUsV0FDUCtFLE9BQU8vRSxFQUFFLDhGQUNMZ0YsS0FBSyxRQUFTakIsRUFBS2xDLHNCQUV2Qm1DLE9BRVQsQ0FDSixDQUNBLE1BQU8scUJBQXVCakMsRUFBWSxLQUFPaUMsRUFBS1AsS0FBSyxJQUFNLFFBQ3JFLENBdUJBLFNBQVN3QixFQUFTQyxFQUFTQyxHQUV2QixJQSs3QmNDLEVBQU1DLEVBQU1DLEVBQ3RCQyxFQWg4QkF4QixFQWZSLFNBQXlCb0IsRUFBR0ssR0FDeEIsSUFBSXpCLEVBQU8vRCxFQUFFeUYsT0FBTyxDQUFDLEVBQUd2RixFQUFhaUYsR0FTckMsT0FSQXBCLEVBQUsyQixVQUFZLENBQ2IsS0FBUUMsRUFBSzVCLEVBQUsxRCxLQUFNbUYsR0FDeEIsT0FBVUcsRUFBSzVCLEVBQUt6RCxPQUFRa0YsR0FDNUIsS0FBUUcsRUFBSzVCLEVBQUt4RCxLQUFNaUYsR0FDeEIsS0FBUUcsRUFBSzVCLEVBQUt2RCxLQUFNZ0YsR0FDeEIsV0FBY0csRUFBSzVCLEVBQUs1RCxXQUFZcUYsSUFHakN6QixDQUNYLENBSWU2QixDQUFnQlQsRUFBR0QsR0FDMUJ4RSxFQUFPcUQsRUFBS3JELEtBQ1pVLEVBQXVCMkMsRUFBSzNDLHFCQUM1QkMsRUFBa0IwQyxFQUFLMUMsZ0JBQ3ZCYyxFQUFRNEIsRUFBSzVCLE1BQ2J1RCxFQUFZM0IsRUFBSzJCLFVBQ2pCRyxHQXk3QlVULEVBejdCUVUsR0F5N0JGVCxFQXo3QlUsR0EyN0J2QixXQUNILElBQUlVLEVBQVVDLEtBQU1DLEVBQU9DLFVBQ3ZCQyxFQUFZLFdBQ1paLEVBQVUsS0FDVkgsRUFBS2dCLE1BQU1MLEVBQVNFLEVBQ3hCLEVBQ0lYLEdBQVVlLGFBQWFkLElBQ3ZCRCxHQUFhQyxJQUFTQSxFQUFVZSxXQUFXSCxFQUFXZCxHQUM5RCxHQWw4QklrQixHQUFVLEVBQ1ZDLEdBQWEsRUFDYkMsRUFBWSxFQUNaQyxFQUFhLEVBQ2JDLEVBQW1CLEVBQ25CQyxFQUFjLEVBRWRDLEVBQWEsRUFDYkMsRUFBd0IsRUFDeEJDLEVBQW9CLEVBQ3BCQyxFQUFhLEVBQ2JDLEVBQW9CLEVBQ3BCQyxFQUFlLEVBQ2ZDLEVBQWUsRUFDZi9FLEVBQVUsR0FDVmdGLEVBQWUsR0FDZkMsRUFBZ0IsQ0FBQyxFQUNqQmhGLEVBQW1CMEIsRUFBSzFCLGlCQUFpQmlGLE1BQU0sR0FDL0MvRixFQUFtQndDLEVBQUt4QyxpQkFDeEJnRyxFQUFnQixjQUNoQkMsRUFBeUIsS0FFekJDLEVBQU12QyxFQUFRd0MsY0FFZEMsR0FET0YsRUFBSUcsS0FDSTVILEVBQUVrRixJQUNqQjVDLEdBQVcsRUFDWHVGLEVBQVk3SCxFQUFFMEQsRUFBUStELEdBQUtLLFNBQVMzRixHQUNwQzRGLEVBQWtCRixFQUFVRyxLQUFLLHdCQUNqQ0MsRUFBVUosRUFBVUcsS0FBSyxhQUN6QkUsRUFBYUwsRUFBVUcsS0FBSyxlQUM1QkcsRUFBU04sRUFBVUcsS0FBSyxXQUN4QkksR0FBY1AsRUFBVUcsS0FBSyxjQUM3QkssR0FBbUJSLEVBQVVHLEtBQUssbUJBQ2xDTSxHQUFjVCxFQUFVRyxLQUFLLGFBQzdCTyxHQUFtQlYsRUFBVUcsS0FBSyxvQkFDbENRLEdBQVlYLEVBQVVHLEtBQUssYUFDM0JTLEdBQW1CWixFQUFVRyxLQUFLLGVBQ2xDVSxHQUF3QmIsRUFBVUcsS0FBSyxlQUN2Q1csR0FBZWQsRUFBVUcsS0FBSyxjQUM5QlksR0FBY2YsRUFBVUcsS0FBSyxhQUM3QmEsR0FBZWhCLEVBQVVHLEtBQUssY0FDOUJjLEdBQWVqQixFQUFVRyxLQUFLLHNCQUM5QmUsR0FBVXBCLEVBQWFxQixHQUFHLFNBQzFCQyxHQUFtQkYsSUFBeUMsVUFBOUJwQixFQUFhM0MsS0FBSyxTQUF1QmtFLElBQ3ZFQyxHQUFnQkosS0FBWXJJLEVBQzVCMEksR0FBVyxHQUFrQnBKLEVBQUV3RCxHQUFjc0UsU0FBUzNGLEdBQU8yRixTQUFTL0QsRUFBS2hDLFdBQVcrRixTQUFTL0QsRUFBSzlCLG1CQUFxQmpDLEVBQUUsSUFDM0hxSixHQUFnQixHQUFrQkQsR0FBV3pCLEVBQzdDMkIsR0FBaUJGLEdBQVNwQixLQUFLLHFCQUMvQnVCLEdBQWV4RixFQUFLdEQsT0FBVXNJLElBQVdwQixFQUFhNkIsTUFDdERDLElBQWMsRUFDZEMsR0FBeUIzRixFQUFLakMsZ0JBQzlCaEIsSUFBdUJpRCxFQUFLbEQsYUFBZWtELEVBQUtqRCxvQkFDaEQ2SSxJQUFXSixHQUNYM0ksR0FBYW1ELEVBQUtuRCxhQUFlcUksR0FFckMsU0FBU1csS0FRTCxHQU5JN0YsRUFBSzlDLGtCQUNMOEMsRUFBSy9DLGFBQWMsR0FHdkI4SCxHQUFhZSxLQUFLOUYsRUFBSzlDLGdCQUFrQjhDLEVBQUtyQyxzQkFBd0JxQyxFQUFLcEMsdUJBRXZFb0MsRUFBSzNCLFFBQVMsQ0FDZEEsRUFBVTJCLEVBQUszQixRQUFRa0YsTUFBTSxHQUM3QkYsRUFBZXBILEVBQUU4SixRQUFRMUgsRUFBUSxJQUFNQSxFQUFVLENBQUNBLEdBQ2xEaUYsRUFBZ0IsQ0FBQyxFQUNqQixJQUFLLElBQUl6RCxFQUFJLEVBQUdBLEVBQUl3RCxFQUFhbkQsT0FBUUwsSUFDckMsSUFBSyxJQUFJbUcsRUFBSSxFQUFHQSxFQUFJM0MsRUFBYXhELEdBQUdLLE9BQVE4RixJQUFLLENBQzdDLElBQUlDLEVBQU01RixVQUFVZ0QsRUFBYXhELEdBQUdtRyxJQUFJbkYsY0FDeEN5QyxFQUFjMkMsSUFBTyxDQUN6QixDQUVSLENBRUFuQyxFQUFVb0MsWUFBWSxVQUFXdkosR0FDakNtSCxFQUFVb0MsWUFBWSxxQkFBc0JsRyxFQUFLcEQsV0FDakRrSCxFQUFVb0MsWUFBWSxtQkFBb0JsRyxFQUFLN0IsV0FDL0MyRixFQUFVb0MsWUFBWSxtQkFBb0JySixJQUMxQ2lILEVBQVVvQyxZQUFZLHVCQUF3QmxHLEVBQUtsRCxhQUNuRGdILEVBQVVvQyxZQUFZLCtCQUFnQ2xHLEVBQUs1QyxtQkFDM0QwRyxFQUFVb0MsWUFBWSx1QkFBd0JsRyxFQUFLL0MsYUFDbkQ2RyxFQUFVb0MsWUFBWSxrQkFBbUJsRyxFQUFLOUMsaUJBQzlDNEcsRUFBVW9DLFlBQVksdUJBQXdCbEcsRUFBS2hELGFBQ25EOEcsRUFBVUMsU0FBUy9ELEVBQUtoQyxXQUFXK0YsU0FBUy9ELEVBQUsvQixvQkFFakQ4RCxJQUNKLENBa05BLFNBQVNvRSxLQUVMLEdBQUk3SSxHQUFtQnNCLE9BQU93SCxhQUFjLENBR3hDLElBQ0ksSUFBSUMsRUFBYXpILE9BQU93SCxhQUFhOUksR0FBaUJnSixNQUFNLE1BQ3hERCxFQUFXbkcsT0FBUyxXQUNidEIsT0FBT3dILGFBQWE5SSxHQUMzQnJCLEVBQUVzSyxLQUFLRixHQUFZLFNBQVN4RyxFQUFHUyxHQUMxQmtHLEdBQTJCbEcsRUFDaEMsSUFFUixDQUNBLE1BQU1tRyxHQUFLLENBRVgsSUFDSW5JLEVBQW1CTSxPQUFPd0gsYUFBYTlJLEdBQWlCZ0osTUFBTSxJQUNsRSxDQUNBLE1BQU9HLEdBQUssQ0FDaEIsQ0FDSixDQUVBLFNBQVNELEdBQTJCOUosR0FDaEMsR0FBSVcsRUFBc0IsQ0FDdEIsSUFBSTRJLEVBQU01RixVQUFVM0QsR0FBT21FLGNBQzNCLElBQUt5QyxFQUFjMkMsS0FBOEMsSUFBdENoSyxFQUFFeUssUUFBUVQsRUFBSzNILEdBRXRDLElBREFBLEVBQWlCeUMsS0FBS2tGLEdBQ2hCM0gsRUFBaUI0QixPQUFTMUMsR0FDNUJjLEVBQWlCcUksUUFJekIsR0FBSXJKLEdBQW1Cc0IsT0FBT3dILGFBQzFCLElBQ0l4SCxPQUFPd0gsYUFBYTlJLEdBQW1CZ0IsRUFBaUJvQixLQUFLLElBQ2pFLENBQ0EsTUFBTStHLEdBQUssQ0FFbkIsQ0FDSixDQWlCQSxTQUFTRyxLQUVMLElBQUlDLEVBQWVDLEtBRWY3RyxFQUFPaEUsRUFBRThLLElBQUkxRCxHQUFjLFNBQVVoRixFQUFTd0IsR0FDOUMsT0FBT0MsRUFBZ0J6QixFQUFTd0ksRUFBYyxpQ0FBbUNoSCxFQUFHRyxFQUN4RixJQUVBbUcsS0FFSTdILEdBQ0EyQixFQUFLYyxLQUFLakIsRUExQmxCLFdBQ0ksSUFBSWtILEVBQVMsR0FDYixHQUFJaEgsRUFBSy9DLFlBQ0wsSUFBSyxJQUFJNEMsRUFBSSxFQUFHQSxFQUFJdkIsRUFBaUI0QixPQUFRTCxJQUFLLENBQzlDLElBQUlvRyxFQUFNNUYsVUFBVS9CLEVBQWlCdUIsSUFBSWdCLGNBRXBDeUMsRUFBYzJDLElBQ2ZlLEVBQU9qRyxLQUFLekMsRUFBaUJ1QixHQUVyQyxDQUdKLE9BQU9tSCxFQUFPQyxVQUFVMUQsTUFBTSxFQUFHdkQsRUFBS3hDLGlCQUMxQyxDQWFrQzBKLEdBQTZCTCxFQUFjLDBDQUEyQzdHLElBR3BIMEUsR0FBaUJ6RSxLQUFLQSxFQUFLUCxLQUFLLElBQ3BDLENBRUEsU0FBU3lILEtBQ0wsR0FBSW5ILEVBQUtoRCxZQUFhLENBQ2xCLElBQUlvSyxFQUFVMUIsR0FDVnZGLEVBQVUyRyxLQUNkbkMsR0FBc0IxRSxLQUFLSCxFQUFnQixDQUFDc0gsRUFBU2pILEdBQVVBLEVBQVMseUJBQTBCSCxHQUN0RyxDQUNKLENBRUEsU0FBU3FILE1BQ0QxRSxHQUFjLEdBQUtELEdBQWEsR0FBS0csR0FBZSxJQUNwRGQsS0FFSlUsR0FBYSxFQUNicUIsRUFBVUMsU0FBU1AsR0FDbkJDLEVBQXlCLEtBQ3pCRyxFQUFhMEQsUUFBUSxxQkFBc0IsQ0FBRVIsTUFDakQsQ0FFQSxTQUFTUyxLQUNMOUUsR0FBYSxFQUNicUIsRUFBVTBELFlBQVloRSxHQUN0QkksRUFBYTBELFFBQVEsb0JBQXFCLENBQUVSLE1BQ2hELENBRUEsU0FBU1csS0FFTCxJQUFJQyxFQUFRakQsR0FBVWdCLE1BRXRCLEdBQWUsT0FBVmlDLEdBQTRCLEtBQVZBLElBQWlCN0ssR0FLbkMsQ0FDRCxJQUFJdUQsRUFBT0MsVUFBVXFILEdBQ2pCdEgsRUFBS3VILFdBQ0xDLEdBQUl4SCxHQUNKOUQsS0FDQXVMLE1BR0FwRCxHQUFVVixTQUFTLHNCQUUzQixNQWRJNkQsR0FBSSxNQUNKdEwsS0FDQXVMLElBYVIsQ0FFQSxTQUFTQyxLQUNEdEYsRUFDQS9GLEtBR0FELElBRVIsQ0FFQSxTQUFTQSxLQUNMLElBQUl1TCxFQUFROUwsRUFBRStMLE1BQU0sdUJBRWhCeEYsRUFDQVQsTUFJSjZCLEVBQWEwRCxRQUFRUyxFQUFPLENBQUVqQixRQUVNLElBQWhDbkYsRUFBVXZGLFdBQVcwSyxPQUFvQmlCLEVBQU1FLHVCQWxkM0QsV0FDSSxJQUFLLElBQUlwSSxFQUFJLEVBQUdBLEVBQUlwQixFQUFVeUIsT0FBUUwsSUFDOUJwQixFQUFVb0IsSUFDVnBCLEVBQVVvQixHQUFHcEQsTUFHekIsQ0FnZFF5TCxHQUNBMUYsR0FBVSxFQUVWdkcsRUFBRXlILEdBQUt5RSxHQUFHLG1CQUFvQkMsSUFDOUJuTSxFQUFFeUgsR0FBS3lFLEdBQUcsaUJBQWtCRSxJQUM1QnBNLEVBQUUyQyxRQUFRdUosR0FBRyxrQkFBbUJyRyxHQUNoQ3VELEdBQVN0QixTQUFTLGFBQ2xCRCxFQUFVMEQsWUFBWSxhQUV0QnpGLEtBQ0F1RyxLQUVBNUMsR0FBY29CLEtBRWRLLEtBQ0F4RixFQUFVbkYsS0FBS2tKLElBQ2Y5QixFQUFhMEQsUUFBUSxnQkFBaUIsQ0FBRTVCLE1BQzVDLENBRUEsU0FBUzBDLEdBQVUzQixHQUVHLEtBQWRBLEVBQUU4QixTQUNGOUwsSUFFUixDQUVBLFNBQVM0TCxHQUFTNUIsR0FFRSxHQUFaQSxFQUFFK0IsU0FJRi9GLElBRUExRixHQUNBOEssSUFBb0IsR0FHcEJZLEtBRUpoTSxNQUNKLENBRUEsU0FBU0EsS0FFQStGLElBQVc3RixJQUNoQjZGLEdBQVUsRUFFVnZHLEVBQUV5SCxHQUFLZ0YsSUFBSSxtQkFBb0JOLElBQy9Cbk0sRUFBRXlILEdBQUtnRixJQUFJLGlCQUFrQkwsSUFDN0JwTSxFQUFFMkMsUUFBUThKLElBQUksa0JBQW1CNUcsR0FFakN1RCxHQUFTbUMsWUFBWSxhQUNyQjFELEVBQVVDLFNBQVMsYUFFbkJwQyxFQUFVbEYsS0FBS3FLLE1BQ2ZsRCxFQUFhMEQsUUFBUSxnQkFBaUIsQ0FBRVIsT0FDNUMsQ0FFQSxTQUFTMkIsS0FDTGIsR0FBSWxDLElBQWEsR0FDakJtQyxJQUFvQixFQUN4QixDQUVBLFNBQVNELEdBQUlsTCxFQUFPaU0sR0FRaEIsSUFBSUMsRUFBVUMsRUFQVnhJLFVBQVVJLE9BQU8vRCxFQUFPb0ssTUFHeEJ3QixPQUtDNUwsR0FBU0csR0FDVitJLElBQVUsR0FFVkEsSUFBVSxFQUVWaUQsR0FEQUQsRUFBV3ZJLFVBQVUzRCxJQUNIb00sUUFFbEI3RixFQUFjNEYsRUFBT0UsRUFBSSxJQUFPLElBQ2hDN0YsRUFBb0IyRixFQUFPRyxFQUMzQjdGLEVBQWUwRixFQUFPSSxFQUN0QjdGLEVBQWV5RixFQUFPSyxHQUUxQlosS0FFSU0sR0FBWUEsRUFBU2pCLFlBQWNnQixJQUNuQ2hELEdBQXlCM0YsRUFBS2pDLGlCQUFtQjZLLEVBQVNPLGFBRWxFLENBRUEsU0FBU3JDLEdBQUk5RyxHQUdULE9BRkFBLEVBQU9BLEdBQVEsQ0FBRSxFQUVibkQsSUFBYytJLEdBQ1AsS0FHSnZGLFVBQVUrSSxVQUFVLENBQ3ZCTCxFQUFHOUYsRUFDSCtGLEVBQUc5RixFQUNIK0YsRUFBRzlGLEVBQ0grRixFQUFHRyxLQUFLQyxNQUFxQixJQUFmbEcsR0FBdUIsS0FDdEMsQ0FBRW1HLE9BQVF2SixFQUFLdUosUUFBVTVELElBQ2hDLENBTUEsU0FBU3JKLEtBQ0xnTSxLQUVBM0csRUFBVXJGLEtBQUt3SyxNQUNmbEQsRUFBYTBELFFBQVEsZ0JBQWlCLENBQUVSLE1BQzVDLENBRUEsU0FBU3dCLEtBRUw3RCxHQUFVK0MsWUFBWSx1QkFFdEJnQyxLQUdBLElBQUlDLEVBQVlwSixVQUFVK0ksVUFBVSxDQUFFTCxFQUFHOUYsRUFBWStGLEVBQUcsRUFBR0MsRUFBRyxJQUM5RC9FLEVBQVF3RixJQUFJLG1CQUFvQkQsRUFBVUUsZUFHMUMsSUFBSUosRUFBUzVELEdBQ1R2QyxFQUFlLElBQXdCLElBQWpCQSxHQUFpQyxTQUFYbUcsS0FDN0IsUUFBWEEsR0FBK0IsU0FBWEEsR0FBZ0MsU0FBWEEsR0FBZ0MsU0FBWEEsSUFDOURBLEVBQVMsUUFJakIsSUFBSUssRUFBWTlDLEdBQUksQ0FBRXlDLE9BQVFBLElBQzFCTSxFQUFlLEdBTW5CLEdBSEF0RSxHQUFlaUMsWUFBWSxvQkFDM0JqQyxHQUFlbUUsSUFBSSxtQkFBb0IsZ0JBRWxDRSxHQUFhL00sR0FFZDBJLEdBQWV4QixTQUFTLHdCQUV2QixDQUNELElBQUkrRixFQUFVRixFQUFVRCxjQUNwQkksRUFBVUgsRUFBVS9JLGNBV3hCLEdBUkk5QixHQUFtQyxJQUFwQjZLLEVBQVVJLE1BQ3pCekUsR0FBZW1FLElBQUksbUJBQW9CSyxJQUd2Q3hFLEdBQWVtRSxJQUFJLG1CQUFvQixlQUN2Q25FLEdBQWVtRSxJQUFJLFNBQVVFLEVBQVU5SSxhQUd2Q2QsRUFBSzdCLFVBQVcsQ0FDaEIsSUFBSThILEVBQU0yRCxFQUFVSyxRQUNwQmhFLEVBQUlpRCxFQUFJLEVBQ1IsSUFBSWdCLEVBQVk3SixVQUFVNEYsR0FBS3BGLGNBQzNCc0osRUFBVyx5QkFBMkJELEVBQVksS0FBT0osRUFBVSxJQUVuRXBMLEVBQ0E0RixHQUFpQm9GLElBQUksU0FBVXJKLFVBQVU2SixHQUFXcEosU0FBUyxDQUFFc0osYUFBYyxHQUFLTixLQUdsRnhGLEdBQWlCb0YsSUFBSSxhQUFjLFdBQWFTLEdBQ2hEN0YsR0FBaUJvRixJQUFJLGFBQWMsUUFBVVMsR0FDN0M3RixHQUFpQm9GLElBQUksYUFBYyxPQUFTUyxHQUU1QzdGLEdBQWlCb0YsSUFBSSxhQUNqQiw2QkFBK0JRLEVBQVksS0FBT0osRUFBVSxLQUV4RSxDQUVBRCxFQUFlRCxFQUFVakosU0FBUzRJLEVBQ3RDLENBR0l2SixFQUFLcEQsV0FDTDZILEdBQVVnQixJQUFJb0UsR0FHZDdKLEVBQUsvQyxhQUNMMkosS0FHSk8sSUFDSixDQUVBLFNBQVNxQyxLQUNMLElBQUlSLEVBQUk5RixFQUNKK0YsRUFBSTlGLEVBRVIsR0FBR3RHLElBQWMrSSxHQUVicEIsR0FBaUIvSCxPQUNqQjRILEdBQVk1SCxPQUNaMEgsRUFBVzFILFdBRVYsQ0FFRCtILEdBQWlCaEksT0FDakI2SCxHQUFZN0gsT0FDWjJILEVBQVczSCxPQUdYLElBQUk2TixFQUFRckIsRUFBSXRHLEVBQ1o0SCxFQUFRM0gsRUFBY3NHLEVBQUl0RyxFQUM5QjBILEVBQVFoQixLQUFLa0IsS0FDUjNILEVBQ0R5RyxLQUFLbUIsSUFBSTlILEVBQVlFLEVBQWtCeUgsRUFBUXpILElBRW5EMEgsRUFBUWpCLEtBQUtrQixLQUNSM0gsRUFDRHlHLEtBQUttQixJQUFJN0gsRUFBYUMsRUFBa0IwSCxFQUFRMUgsSUFFcER1QixFQUFXdUYsSUFBSSxDQUNYLElBQU9ZLEVBQVEsS0FDZixLQUFRRCxFQUFRLE9BR3BCLElBQUlJLEVBQVNySCxFQUFlTixFQUM1QjBCLEdBQWlCa0YsSUFBSSxDQUNqQixLQUFTZSxFQUFVMUgsRUFBd0IsRUFBTSxPQUlyRCxJQUFJMkgsRUFBUyxFQUFlN0gsRUFDNUJ3QixHQUFZcUYsSUFBSSxDQUNaLElBQVFnQixFQUFTMUgsRUFBcUIsTUFFOUMsQ0FDSixDQUVBLFNBQVM2RSxHQUFvQjhDLEdBQ3pCLElBQUlqTyxFQUFRb0ssS0FDUitDLEVBQWUsR0FDZmUsR0FBY3ZLLFVBQVVJLE9BQU8vRCxFQUFPZ0osSUFFdENoSixJQUNBbU4sRUFBZW5OLEVBQU1pRSxTQUFTZ0YsSUFFOUJhLEdBQTJCOUosSUFHM0JzSSxJQUNBcEIsRUFBYTZCLElBQUlvRSxHQUdqQmMsR0FBZ0JDLElBQ2hCakosRUFBVXBGLE9BQU9HLEdBQ2pCa0gsRUFBYTBELFFBQVEsU0FBVSxDQUFFNUssSUFFekMsQ0FFQSxTQUFTcUYsS0FDQVMsSUFHTEUsRUFBWXdCLEVBQVEyRyxRQUNwQmxJLEVBQWF1QixFQUFRNEcsU0FDckJsSSxFQUFtQnVCLEVBQVcyRyxTQUNqQjFHLEVBQU95RyxRQUNwQmhJLEVBQWN1QixFQUFPMEcsU0FDckI5SCxFQUFvQnFCLEdBQVl5RyxTQUNoQ2hJLEVBQWF5QixHQUFZc0csUUFDekI5SCxFQUF3QnlCLEdBQWlCcUcsUUFFcENsTyxJQUNEbUgsRUFBVTRGLElBQUksV0FBWSxZQUN0QjFKLEVBQUt4QixPQUNMc0YsRUFBVXRGLE9BQU93QixFQUFLeEIsUUFFdEJzRixFQUFVdEYsT0FvRjFCLFNBQW1CdU0sRUFBUUMsR0FDdkIsSUFBSUMsRUFBUyxFQUNUQyxFQUFVSCxFQUFPSSxhQUNqQkMsRUFBV0wsRUFBT00sY0FDbEJDLEVBQWNOLEVBQU1LLGNBQ3BCM0gsRUFBTXFILEVBQU8sR0FBR3BILGNBQ2hCNEgsRUFBVTdILEVBQUk4SCxnQkFDZEMsRUFBWUYsRUFBUUcsWUFBY3pQLEVBQUV5SCxHQUFLaUksYUFDekNDLEVBQWFMLEVBQVFNLGFBQWU1UCxFQUFFeUgsR0FBS29JLFlBQzNDdE4sRUFBU3dNLEVBQU14TSxTQUNmdU4sRUFBYXZOLEVBQU93TixLQUNwQkMsRUFBWXpOLEVBQU8wTixJQVl2QixPQVZBRCxHQUFhWCxFQUViUyxHQUNJMUMsS0FBS21CLElBQUl1QixFQUFhQSxFQUFhYixFQUFVTyxHQUFhQSxFQUFZUCxFQUN0RTdCLEtBQUs4QyxJQUFJSixFQUFhYixFQUFVTyxHQUFhLEdBTTFDLENBQ0hTLElBTEpELEdBQ0k1QyxLQUFLbUIsSUFBSXlCLEVBQWFBLEVBQVliLEVBQVdRLEdBQWNBLEVBQWFSLEVBQ3hFL0IsS0FBSzhDLElBQUlmLEVBQVdFLEVBQWNMLEdBQVVBLEdBSTVDbUIsT0FBUTVOLEVBQU80TixPQUNmSixLQUFNRCxFQUNOTSxNQUFPN04sRUFBTzZOLE1BQ2R4QixNQUFPck0sRUFBT3FNLE1BQ2RDLE9BQVF0TSxFQUFPc00sT0FFdkIsQ0FuSGlDd0IsQ0FBVXhJLEVBQVd3QixNQUk5Q2tFLEtBRUl4SixFQUFLL0MsYUFDTDJKLEtBR0poRCxFQUFhMEQsUUFBUSxtQkFDekIsQ0FnQ0EsU0FBU2lGLEtBQ0w5UCxLQUNBOEIsR0FBVyxFQUNYcUYsRUFBYTNDLEtBQUssWUFBWSxHQUM5QnFFLEdBQWN2QixTQUFTLGNBQzNCLEVBcnFCQSxXQWdCSSxHQWRJckYsR0FDQW9GLEVBQVVHLEtBQUssZ0JBQWdCaEQsS0FBSyxlQUFnQixNQUd4RDRFLEtBRUlULElBQ0F4QixFQUFhNEksTUFBTW5ILElBQVU1SSxPQUc1QkksSUFDRGdJLEdBQVlwSSxPQUdaRSxFQUNBaUgsRUFBYTRJLE1BQU0xSSxHQUFXckgsV0FFN0IsQ0FFRCxJQUFJYyxFQUE2QixXQUFsQnlDLEVBQUt6QyxTQUF3QnFHLEVBQWE2SSxTQUFXeFEsRUFBRStELEVBQUt6QyxVQUNuRCxJQUFwQkEsRUFBUzJDLFNBQ1QzQyxFQUFXdEIsRUFBRSxTQUdqQnNCLEVBQVN5RCxPQUFPOEMsRUFDcEIsQ0EwSkEsU0FBUzRJLEVBQW9CakcsR0FtQnpCLE9BbEJJQSxFQUFFa0csTUFBUWxHLEVBQUVrRyxLQUFLQyxRQUNqQmhGLEdBQUkzTCxFQUFFd0ssRUFBRW9HLFFBQVFDLFFBQVEsZ0JBQWdCSCxLQUFLLFVBQzdDclEsT0FHQXNMLEdBQUkzTCxFQUFFd0ssRUFBRW9HLFFBQVFDLFFBQVEsZ0JBQWdCSCxLQUFLLFVBQzdDclEsS0FJSTBELEVBQUs3Qyx3QkFDTDBLLElBQW9CLEdBQ3BCcEwsTUFFQW9MLE9BSUQsQ0FDWCxDQTVLQTFCLEtBRUFiLEdBQWM2QyxHQUFHLHNDQUFzQyxTQUFVMUIsR0FDeERsSSxHQUNEdUosS0FHSnJCLEVBQUVzRyxrQkFFRzlRLEVBQUV3SyxFQUFFb0csUUFBUTVILEdBQUcsVUFDaEJ3QixFQUFFdUcsZ0JBRVYsS0FFR3BKLEVBQWFxQixHQUFHLGVBQW1DLElBQWxCakYsRUFBS3pCLFdBQ3JDZ08sS0FJSnpJLEVBQVVtSixNQUFNRixHQUdoQnRJLEdBQVVsSSxPQUFPa0wsSUFDakJoRCxHQUFVMEQsR0FBRyxTQUFTLFdBQ2xCNUYsV0FBV2tGLEdBQWtCLEVBQ2pDLElBQ0FoRCxHQUFVeUksU0FBUSxTQUFVekcsR0FBc0IsSUFBYkEsRUFBRThCLFNBQWlCZCxJQUFzQixJQUU5RTdDLEdBQWFrQixLQUFLOUYsRUFBS3ZDLFlBQ3ZCbUgsR0FBYXVELEdBQUcsa0JBQWtCLFNBQVUxQixHQUN4Q0EsRUFBRXNHLGtCQUNGdEcsRUFBRXVHLGlCQUNGdkUsS0FDQWhNLElBQ0osSUFFQW9JLEdBQVk1RCxLQUFLLFFBQVNqQixFQUFLbkMsV0FDL0JnSCxHQUFZc0QsR0FBRyxrQkFBa0IsU0FBVTFCLEdBQ3ZDQSxFQUFFc0csa0JBQ0Z0RyxFQUFFdUcsaUJBQ0ZwSCxJQUFVLEVBQ1Z0SixLQUVHSyxHQUVDa0wsSUFBb0IsRUFFNUIsSUFFQS9DLEdBQWFnQixLQUFLOUYsRUFBS3RDLFlBQ3ZCb0gsR0FBYXFELEdBQUcsa0JBQWtCLFNBQVUxQixHQUN4Q0EsRUFBRXNHLGtCQUNGdEcsRUFBRXVHLGlCQUVFdE8sR0FBTStGLEdBQVVRLEdBQUcsV0FDbkJSLEdBQVU2QyxRQUFRLFdBdVhsQjdDLEdBQVUwSSxTQUFTLHlCQW5YbkJ0RixJQUFvQixHQUNwQnBMLEtBRVIsSUFFQXNJLEdBQWFlLEtBQUs5RixFQUFLOUMsZ0JBQWtCOEMsRUFBS3JDLHNCQUF3QnFDLEVBQUtwQyx1QkFDM0VtSCxHQUFhb0QsR0FBRyxrQkFBa0IsU0FBVTFCLEdBQ3hDQSxFQUFFc0csa0JBQ0Z0RyxFQUFFdUcsaUJBRUZoTixFQUFLOUMsaUJBQW1COEMsRUFBSzlDLGdCQU94QjhDLEVBQUs5QyxpQkFBb0JQLEdBQzFCbUgsRUFBVTRGLElBQUksT0FBUSxNQUFRMUYsRUFBZ0JtSCxZQUFXLEdBQVEsSUFFckV0RixJQUNKLElBRUF1SCxFQUFVN0ksSUFBYSxTQUFVOEYsRUFBT0MsRUFBTzdELEdBQzNDckQsRUFBZ0JpSCxFQUFRdkgsRUFDeEI4QyxJQUFVLEVBQ05hLEVBQUU0RyxXQUNGakssRUFBZWlHLEtBQUtDLE1BQXFCLEdBQWZsRyxHQUFxQixJQUduRDlHLElBQ0osR0FBRytLLEdBQVdFLElBRWQ2RixFQUFVaEosR0FBUSxTQUFVaUcsRUFBT0MsR0FDL0JySCxFQUFhcUssV0FBV2hELEVBQVF6SCxHQUNoQytDLElBQVUsRUFDTDVGLEVBQUs3QixZQUNOaUYsRUFBZSxHQUVuQjlHLElBQ0osR0FBRytLLEdBQVdFLElBRWQ2RixFQUFVbEosR0FBUyxTQUFVbUcsRUFBT0MsRUFBTzdELEdBR3ZDLEdBQUtBLEVBQUU0RyxVQUdGLElBQUs1SixFQUF3QixDQUM5QixJQUFJOEosRUFBV3JLLEVBQW9CUixFQUMvQjhLLEVBQVc3SyxFQUFjUSxFQUFlUixFQUN4QzhLLEVBQWVwRSxLQUFLOEMsSUFBSTlCLEVBQVFrRCxHQUFZbEUsS0FBSzhDLElBQUk3QixFQUFRa0QsR0FFakUvSixFQUF5QmdLLEVBQWUsSUFBTSxHQUNsRCxPQVJJaEssRUFBeUIsS0FVN0IsSUFDSWlLLEdBQVlqSyxHQUFxRCxNQUEzQkEsSUFEckJBLEdBQXFELE1BQTNCQSxLQUkzQ1AsRUFBb0JvSyxXQUFXakQsRUFBUTNILElBRXZDZ0wsSUFDQXZLLEVBQWVtSyxZQUFZM0ssRUFBYTJILEdBQVMzSCxJQUdyRGlELElBQVUsRUFDTDVGLEVBQUs3QixZQUNOaUYsRUFBZSxHQUduQjlHLElBRUosR0FBRytLLEdBQVdFLElBRVIvQixJQUNGb0MsR0FBSXBDLElBSUo4QyxLQUNBM0MsR0FBeUIzRixFQUFLakMsaUJBQW1Cc0MsVUFBVW1GLElBQWMrRCxPQUV6RS9DLEdBQTJCaEIsS0FHM0I4QyxLQUdBM0wsR0FDQUgsS0F5QkosSUFBSW1SLEVBQWVqUCxFQUFLLHFCQUF1QixxQ0FDL0NnRyxHQUFpQnlELEdBQUd3RixFQUFjLGVBQWdCakIsR0FDbEQvSCxHQUFzQndELEdBQUd3RixFQUFjLDRCQUE2QixDQUFFZixRQUFRLEdBQVFGLEVBQzFGLENBOGRBa0IsR0FFQSxJQUFJQyxHQUFRLENBQ1JyUixLQUFNQSxHQUNOQyxLQUFNQSxHQUNOcUwsT0FBUUEsR0FDUi9GLE9BQVFBLEdBQ1IrTCxPQXpDSixTQUFnQkMsRUFBWUMsR0FDeEIsT0FBSUQsSUFBZTdSLEVBQ1JELEVBQUV5RixPQUFPLENBQUMsRUFBRzFCLEdBRXBCZ08sSUFBZ0I5UixFQUNUOEQsRUFBSytOLElBR2hCL04sRUFBSytOLEdBQWNDLEVBRUEsb0JBQWZELElBQ0FwSSxHQUF5QjNGLEVBQUtqQyxzQkFFbEM4SCxLQUNKLEVBNEJJb0ksT0ExQkosV0FDSTFQLEdBQVcsRUFDWHFGLEVBQWEzQyxLQUFLLFlBQVksR0FDOUJxRSxHQUFja0MsWUFBWSxjQUM5QixFQXVCSStFLFFBQVNBLEdBQ1QvTixPQWZKLFNBQW1CMFAsR0FDZmxPLEVBQUt4QixPQUFTMFAsRUFDZG5NLElBQ0osRUFhSTZGLElBQUssU0FBVXRILEdBQ1hzSCxHQUFJdEgsR0FDSnVILElBQ0osRUFDQWYsSUFBS0EsR0FDTHFILFFBMURKLFdBQ0l2SyxFQUFhcEgsT0FDYjhJLEdBQWNvRCxJQUFJLHNDQUNsQjVFLEVBQVVzSyxTQUNWL0ksR0FBUytJLFNBQ1QzUCxFQUFVb1AsR0FBTVEsSUFBTSxJQUMxQixFQXFESXZLLFVBQVdBLEdBS2YsT0FGQStKLEdBQU1RLEdBQUs1UCxFQUFVc0MsS0FBSzhNLElBQVMsRUFFNUJBLEVBQ1gsQ0EwQ0EsU0FBU3hSLElBRVQsQ0FLQSxTQUFTMFEsRUFBZ0J0RyxHQUNyQkEsRUFBRXNHLGlCQUNOLENBTUEsU0FBU25MLEVBQUtQLEVBQU1pTixHQUNoQixJQUFJL0ssRUFBUWdMLE1BQU1DLFVBQVVqTCxNQUN4QnJCLEVBQU9xQixFQUFNa0wsS0FBS3RNLFVBQVcsR0FDakMsT0FBTyxXQUNILE9BQU9kLEVBQUtnQixNQUFNaU0sRUFBS3BNLEVBQUt3TSxPQUFPbkwsRUFBTWtMLEtBQUt0TSxZQUNsRCxDQUNKLENBTUEsU0FBU2lMLEVBQVVqTSxFQUFTd04sRUFBUUMsRUFBU0MsR0FDekNGLEVBQVNBLEdBQVUsV0FBYyxFQUNqQ0MsRUFBVUEsR0FBVyxXQUFjLEVBQ25DQyxFQUFTQSxHQUFVLFdBQWMsRUFDakMsSUFBSW5MLEVBQU1yRSxTQUNOeVAsR0FBVyxFQUNYdFEsRUFBUyxDQUFDLEVBQ1Z1USxFQUFZLEVBQ1pDLEVBQVcsRUFDWEMsRUFBWSxpQkFBa0JyUSxPQUU5QnNRLEVBQW1CLENBQUMsRUFNeEIsU0FBU0MsRUFBUTFJLEdBQ1RBLEVBQUVzRyxpQkFDRnRHLEVBQUVzRyxrQkFFRnRHLEVBQUV1RyxnQkFDRnZHLEVBQUV1RyxpQkFFTnZHLEVBQUUySSxhQUFjLENBQ3BCLENBRUEsU0FBUzlTLEVBQUttSyxHQUNWLEdBQUlxSSxFQUFVLENBRVYsR0FBSXBRLEdBQU1nRixFQUFJMkwsYUFBZSxJQUFNNUksRUFBRStCLE9BQ2pDLE9BQU84RyxJQUdYLElBQUlDLEVBQUs5SSxFQUFFK0ksZUFBaUIvSSxFQUFFK0ksY0FBY0MsU0FBV2hKLEVBQUUrSSxjQUFjQyxRQUFRLEdBQzNFQyxFQUFRSCxHQUFNQSxFQUFHRyxPQUFTakosRUFBRWlKLE1BQzVCQyxFQUFRSixHQUFNQSxFQUFHSSxPQUFTbEosRUFBRWtKLE1BRTVCdEYsRUFBUWhCLEtBQUtrQixJQUFJLEVBQUdsQixLQUFLbUIsSUFBSWtGLEVBQVFsUixFQUFPd04sS0FBTWdELElBQ2xEMUUsRUFBUWpCLEtBQUtrQixJQUFJLEVBQUdsQixLQUFLbUIsSUFBSW1GLEVBQVFuUixFQUFPME4sSUFBSzZDLElBRWpERSxHQUVBRSxFQUFRMUksR0FHWmtJLEVBQU90TSxNQUFNbEIsRUFBUyxDQUFDa0osRUFBT0MsRUFBTzdELEdBQ3pDLENBQ0osQ0FzQkEsU0FBUzZJLElBQ0RSLElBQ0E3UyxFQUFFeUgsR0FBS2dGLElBQUl3RyxHQUNYalQsRUFBRXlILEVBQUlHLE1BQU0yRCxZQUFZLGVBSXhCakYsWUFBVyxXQUNQc00sRUFBT3hNLE1BQU1sQixFQUFTZ0IsVUFDMUIsR0FBRyxJQUVQMk0sR0FBVyxDQUNmLENBdEVBSSxFQUE4QixZQUFJQyxFQUNsQ0QsRUFBNEIsVUFBSUMsRUFDaENELEVBQWlCLHVCQUF5QjVTLEVBQzFDNFMsRUFBaUIsb0JBQXNCSSxFQXFFdkNyVCxFQUFFa0YsR0FBU2dILEdBQUcsd0JBbENkLFNBQWUxQixJQUNPQSxFQUFPLE1BQWdCLEdBQVhBLEVBQUVtSixNQUEyQixHQUFabkosRUFBRStCLFNBRTdCc0csSUFDMEIsSUFBdENGLEVBQVF2TSxNQUFNbEIsRUFBU2dCLGFBQ3ZCMk0sR0FBVyxFQUNYQyxFQUFZOVMsRUFBRWtGLEdBQVMySixTQUN2QmtFLEVBQVcvUyxFQUFFa0YsR0FBUzBKLFFBQ3RCck0sRUFBU3ZDLEVBQUVrRixHQUFTM0MsU0FFcEJ2QyxFQUFFeUgsR0FBS3lFLEdBQUcrRyxHQUNWalQsRUFBRXlILEVBQUlHLE1BQU1FLFNBQVMsZUFFckJ6SCxFQUFLbUssR0FFTDBJLEVBQVExSSxHQUdwQixHQWlCSixDQWVBLFNBQVN0QixJQUNMLE9BQU9sSixFQUFFNFQsR0FBRzNPLFNBQVNpRSx1QkFDekIsQ0FLQSxJQUFJMkssRUFBUyxjQUNiN1QsRUFBRTRULEdBQUczTyxTQUFXLFNBQVVsQixFQUFNK1AsR0FFNUIsR0FBbUIsaUJBQVIvUCxFQUFrQixDQUV6QixJQUFJb1AsRUFBY25OLEtBQ2RDLEVBQU9xTSxNQUFNQyxVQUFVakwsTUFBTWtMLEtBQU10TSxVQUFXLEdBNkJsRCxPQTNCQUYsS0FBS3NFLE1BQUssV0FDTixJQUFJc0gsRUFBUXBQLEVBQVV4QyxFQUFFZ0csTUFBTTBLLEtBQUttRCxJQUNuQyxHQUFJakMsRUFBTyxDQUNQLElBQUltQyxFQUFTbkMsRUFBTTdOLEdBQ25CLElBQUtnUSxFQUNELE1BQU0sSUFBSUMsTUFBTyw4QkFBZ0NqUSxFQUFPLEtBR2hELE9BQVJBLEVBQ0FvUCxFQUFjdkIsRUFBTS9HLE1BRVAsYUFBUjlHLEVBQ0xvUCxFQUFjdkIsRUFBTS9KLFVBRVAsVUFBUjlELEVBQ0xvUCxFQUFjdkIsRUFBTUMsT0FBT3pMLE1BQU13TCxFQUFPM0wsR0FFM0IsV0FBUmxDLEdBQ0w2TixFQUFNTSxVQUNObFMsRUFBRWdHLE1BQU1pTyxXQUFXSixJQUduQkUsRUFBTzNOLE1BQU13TCxFQUFPM0wsRUFFNUIsQ0FDSixJQUVPa04sQ0FDWCxDQUdBLE9BQU9uTixLQUFLZixTQUFTLFdBQVdxRixNQUFLLFdBQ2pDLElBQ0lzSCxFQUFRM00sRUFBU2UsS0FEUGhHLEVBQUV5RixPQUFPLENBQUMsRUFBR3pGLEVBQUVnRyxNQUFNMEssT0FBUTNNLElBRTNDL0QsRUFBRWdHLE1BQU0wSyxLQUFLbUQsRUFBUWpDLEVBQU1RLEdBQy9CLEdBQ0osRUFFQXBTLEVBQUU0VCxHQUFHM08sU0FBU2lQLE1BQU8sRUFDckJsVSxFQUFFNFQsR0FBRzNPLFNBQVNrUCxTQUFXLENBQUMsRUFDMUJuVSxFQUFFNFQsR0FBRzNPLFNBQVNrTSxVQUFZQSxFQUMxQm5SLEVBQUU0VCxHQUFHM08sU0FBU21QLFNBQVdsVSxFQUN6QkYsRUFBRTRULEdBQUczTyxTQUFTaUUsc0JBQXdCLFNBQVNBLElBQzNDLFFBQW1ELElBQXhDQSxFQUFzQm1MLGNBQStCLENBQzVELElBQUlDLEVBQWF0VSxFQUFFLHlCQUF5QixHQUM1Q2tKLEVBQXNCbUwsY0FBb0MsVUFBcEJDLEVBQVdDLE1BQXlDLEtBQXJCRCxFQUFXN0ksS0FDcEYsQ0FDQSxPQUFPdkMsRUFBc0JtTCxhQUNqQyxFQUVBclUsRUFBRWlGLFNBQVcsQ0FBRSxFQUNmakYsRUFBRWlGLFNBQVN1UCxhQUFlLENBQUUsRUFDNUJ4VSxFQUFFaUYsU0FBU3dQLFNBQVcsQ0FBRSxFQUV4QnpVLEVBQUU0VCxHQUFHM08sU0FBU3lQLHlCQUEyQixXQUNyQyxJQUFJQyxFQUFjM1UsRUFBRSxxQkFDaEIyVSxFQUFZMVEsU0FBV2lGLEtBQ3ZCeUwsRUFBWTFQLFNBQVMsQ0FDakJuRCxnQkFBaUIsUUFHN0IsRUFNQSxXQUVBLElBQUk4UyxFQUFXLFdBQ1hDLEVBQVksT0FDWkMsRUFBYyxFQUNkQyxFQUFPM0gsS0FDUDRILEVBQVlELEVBQUsxSCxNQUNqQjRILEVBQVVGLEVBQUt4RyxJQUNmMkcsRUFBVUgsRUFBS3pHLElBQ2Y2RyxFQUFhSixFQUFLSyxPQUVsQmhSLEVBQVksU0FBUzNELEVBQU9zRCxHQU01QixHQUhBQSxFQUFPQSxHQUFRLENBQUUsR0FEakJ0RCxFQUFRLEdBQWtCLGNBSUwyRCxFQUNsQixPQUFPM0QsRUFHVixLQUFNdUYsZ0JBQWdCNUIsR0FDbEIsT0FBTyxJQUFJQSxFQUFVM0QsRUFBT3NELEdBR2hDLElBQUlpRyxFQWdRUixTQUFvQnZKLEdBRWhCLElBQUl1SixFQUFNLENBQUVxTCxFQUFHLEVBQUdDLEVBQUcsRUFBR0MsRUFBRyxHQUN2QnRJLEVBQUksRUFDSnVJLEdBQUssRUFDTGxJLEdBQVMsRUFrQ2IsTUFoQ29CLGlCQUFUN00sSUFDUEEsRUF5dUJSLFNBQTZCQSxHQUV6QkEsRUFBUUEsRUFBTWdWLFFBQVFiLEVBQVMsSUFBSWEsUUFBUVosRUFBVyxJQUFJYSxjQUMxRCxJQWFJQyxFQWJBQyxHQUFRLEVBQ1osR0FBSUMsRUFBTXBWLEdBQ05BLEVBQVFvVixFQUFNcFYsR0FDZG1WLEdBQVEsT0FFUCxHQUFhLGVBQVRuVixFQUNMLE1BQU8sQ0FBRTRVLEVBQUcsRUFBR0MsRUFBRyxFQUFHQyxFQUFHLEVBQUd0SSxFQUFHLEVBQUdLLE9BQVEsUUFRN0MsT0FBS3FJLEVBQVFHLEVBQVM5TCxJQUFJdEgsS0FBS2pDLElBQ3BCLENBQUU0VSxFQUFHTSxFQUFNLEdBQUlMLEVBQUdLLEVBQU0sR0FBSUosRUFBR0ksRUFBTSxLQUUzQ0EsRUFBUUcsRUFBU0MsS0FBS3JULEtBQUtqQyxJQUNyQixDQUFFNFUsRUFBR00sRUFBTSxHQUFJTCxFQUFHSyxFQUFNLEdBQUlKLEVBQUdJLEVBQU0sR0FBSTFJLEVBQUcwSSxFQUFNLEtBRXhEQSxFQUFRRyxFQUFTRSxJQUFJdFQsS0FBS2pDLElBQ3BCLENBQUVxTSxFQUFHNkksRUFBTSxHQUFJNUksRUFBRzRJLEVBQU0sR0FBSXBSLEVBQUdvUixFQUFNLEtBRTNDQSxFQUFRRyxFQUFTRyxLQUFLdlQsS0FBS2pDLElBQ3JCLENBQUVxTSxFQUFHNkksRUFBTSxHQUFJNUksRUFBRzRJLEVBQU0sR0FBSXBSLEVBQUdvUixFQUFNLEdBQUkxSSxFQUFHMEksRUFBTSxLQUV4REEsRUFBUUcsRUFBU0ksSUFBSXhULEtBQUtqQyxJQUNwQixDQUFFcU0sRUFBRzZJLEVBQU0sR0FBSTVJLEVBQUc0SSxFQUFNLEdBQUkzSSxFQUFHMkksRUFBTSxLQUUzQ0EsRUFBUUcsRUFBU0ssS0FBS3pULEtBQUtqQyxJQUNyQixDQUFFcU0sRUFBRzZJLEVBQU0sR0FBSTVJLEVBQUc0SSxFQUFNLEdBQUkzSSxFQUFHMkksRUFBTSxHQUFJMUksRUFBRzBJLEVBQU0sS0FFeERBLEVBQVFHLEVBQVNNLEtBQUsxVCxLQUFLakMsSUFDckIsQ0FDSHdNLEVBQUdvSixFQUFvQlYsRUFBTSxJQUM3Qk4sRUFBR2lCLEVBQWdCWCxFQUFNLElBQ3pCTCxFQUFHZ0IsRUFBZ0JYLEVBQU0sSUFDekJKLEVBQUdlLEVBQWdCWCxFQUFNLElBQ3pCckksT0FBUXNJLEVBQVEsT0FBUyxTQUc1QkQsRUFBUUcsRUFBU1MsS0FBSzdULEtBQUtqQyxJQUNyQixDQUNINFUsRUFBR2lCLEVBQWdCWCxFQUFNLElBQ3pCTCxFQUFHZ0IsRUFBZ0JYLEVBQU0sSUFDekJKLEVBQUdlLEVBQWdCWCxFQUFNLElBQ3pCckksT0FBUXNJLEVBQVEsT0FBUyxVQUc1QkQsRUFBUUcsRUFBU1UsS0FBSzlULEtBQUtqQyxLQUNyQixDQUNINFUsRUFBR2lCLEVBQWdCWCxFQUFNLEdBQUssR0FBS0EsRUFBTSxJQUN6Q0wsRUFBR2dCLEVBQWdCWCxFQUFNLEdBQUssR0FBS0EsRUFBTSxJQUN6Q0osRUFBR2UsRUFBZ0JYLEVBQU0sR0FBSyxHQUFLQSxFQUFNLElBQ3pDckksT0FBUXNJLEVBQVEsT0FBUyxNQUtyQyxDQXZ5QmdCYSxDQUFvQmhXLElBR1osaUJBQVRBLElBQ0hBLEVBQU1pVyxlQUFlLE1BQVFqVyxFQUFNaVcsZUFBZSxNQUFRalcsRUFBTWlXLGVBQWUsTUFpRHpFckIsRUFoRFM1VSxFQUFNNFUsRUFnRFpDLEVBaERlN1UsRUFBTTZVLEVBZ0RsQkMsRUFoRHFCOVUsRUFBTThVLEVBQXZDdkwsRUFpREQsQ0FDSHFMLEVBQXFCLElBQWxCc0IsRUFBUXRCLEVBQUcsS0FDZEMsRUFBcUIsSUFBbEJxQixFQUFRckIsRUFBRyxLQUNkQyxFQUFxQixJQUFsQm9CLEVBQVFwQixFQUFHLE1BbkRWQyxHQUFLLEVBQ0xsSSxFQUF3QyxNQUEvQnNKLE9BQU9uVyxFQUFNNFUsR0FBR3BTLFFBQVEsR0FBYSxPQUFTLE9BRWxEeEMsRUFBTWlXLGVBQWUsTUFBUWpXLEVBQU1pVyxlQUFlLE1BQVFqVyxFQUFNaVcsZUFBZSxNQUNwRmpXLEVBQU1zTSxFQUFJOEosRUFBb0JwVyxFQUFNc00sR0FDcEN0TSxFQUFNdU0sRUFBSTZKLEVBQW9CcFcsRUFBTXVNLEdBQ3BDaEQsRUFvSlgsU0FBa0I4QyxFQUFHQyxFQUFHQyxHQUVyQkYsRUFBc0IsRUFBbEI2SixFQUFRN0osRUFBRyxLQUNmQyxFQUFJNEosRUFBUTVKLEVBQUcsS0FDZkMsRUFBSTJKLEVBQVEzSixFQUFHLEtBRWYsSUFBSXBKLEVBQUltUixFQUFLK0IsTUFBTWhLLEdBQ2ZpSyxFQUFJakssRUFBSWxKLEVBQ1JFLEVBQUlrSixHQUFLLEVBQUlELEdBQ2JpSyxFQUFJaEssR0FBSyxFQUFJK0osRUFBSWhLLEdBQ2pCa0ssRUFBSWpLLEdBQUssR0FBSyxFQUFJK0osR0FBS2hLLEdBQ3ZCbUssRUFBTXRULEVBQUksRUFLZCxNQUFPLENBQUV5UixFQUFPLElBSlIsQ0FBQ3JJLEVBQUdnSyxFQUFHbFQsRUFBR0EsRUFBR21ULEVBQUdqSyxHQUFHa0ssR0FJTjVCLEVBQU8sSUFIcEIsQ0FBQzJCLEVBQUdqSyxFQUFHQSxFQUFHZ0ssRUFBR2xULEVBQUdBLEdBQUdvVCxHQUdNM0IsRUFBTyxJQUZoQyxDQUFDelIsRUFBR0EsRUFBR21ULEVBQUdqSyxFQUFHQSxFQUFHZ0ssR0FBR0UsR0FHL0IsQ0FyS2tCQyxDQUFTMVcsRUFBTXFNLEVBQUdyTSxFQUFNc00sRUFBR3RNLEVBQU11TSxHQUN2Q3dJLEdBQUssRUFDTGxJLEVBQVMsT0FFSjdNLEVBQU1pVyxlQUFlLE1BQVFqVyxFQUFNaVcsZUFBZSxNQUFRalcsRUFBTWlXLGVBQWUsT0FDcEZqVyxFQUFNc00sRUFBSThKLEVBQW9CcFcsRUFBTXNNLEdBQ3BDdE0sRUFBTThELEVBQUlzUyxFQUFvQnBXLEVBQU04RCxHQUNwQ3lGLEVBNkVaLFNBQWtCOEMsRUFBR0MsRUFBR3hJLEdBQ3BCLElBQUk4USxFQUFHQyxFQUFHQyxFQU1WLFNBQVM2QixFQUFRdFQsRUFBR2tULEVBQUdDLEdBR25CLE9BRkdBLEVBQUksSUFBR0EsR0FBSyxHQUNaQSxFQUFJLElBQUdBLEdBQUssR0FDWkEsRUFBSSxFQUFFLEVBQVVuVCxFQUFjLEdBQVRrVCxFQUFJbFQsR0FBU21ULEVBQ2xDQSxFQUFJLEdBQVlELEVBQ2hCQyxFQUFJLEVBQUUsRUFBVW5ULEdBQUtrVCxFQUFJbFQsSUFBTSxFQUFFLEVBQUltVCxHQUFLLEVBQ3RDblQsQ0FDWCxDQUVBLEdBYkFnSixFQUFJNkosRUFBUTdKLEVBQUcsS0FDZkMsRUFBSTRKLEVBQVE1SixFQUFHLEtBQ2Z4SSxFQUFJb1MsRUFBUXBTLEVBQUcsS0FXTixJQUFOd0ksRUFDQ3NJLEVBQUlDLEVBQUlDLEVBQUloUixNQUVYLENBQ0QsSUFBSXlTLEVBQUl6UyxFQUFJLEdBQU1BLEdBQUssRUFBSXdJLEdBQUt4SSxFQUFJd0ksRUFBSXhJLEVBQUl3SSxFQUN4Q2pKLEVBQUksRUFBSVMsRUFBSXlTLEVBQ2hCM0IsRUFBSStCLEVBQVF0VCxFQUFHa1QsRUFBR2xLLEVBQUksRUFBRSxHQUN4QndJLEVBQUk4QixFQUFRdFQsRUFBR2tULEVBQUdsSyxHQUNsQnlJLEVBQUk2QixFQUFRdFQsRUFBR2tULEVBQUdsSyxFQUFJLEVBQUUsRUFDNUIsQ0FFQSxNQUFPLENBQUV1SSxFQUFPLElBQUpBLEVBQVNDLEVBQU8sSUFBSkEsRUFBU0MsRUFBTyxJQUFKQSxFQUN4QyxDQXpHa0I4QixDQUFTNVcsRUFBTXFNLEVBQUdyTSxFQUFNc00sRUFBR3RNLEVBQU04RCxHQUN2Q2lSLEdBQUssRUFDTGxJLEVBQVMsT0FHVDdNLEVBQU1pVyxlQUFlLE9BQ3JCekosRUFBSXhNLEVBQU13TSxJQUlsQkEsRUFBSXFLLEVBQVdySyxHQUVSLENBQ0h1SSxHQUFJQSxFQUNKbEksT0FBUTdNLEVBQU02TSxRQUFVQSxFQUN4QitILEVBQUdKLEVBQVEsSUFBS0MsRUFBUWxMLEVBQUlxTCxFQUFHLElBQy9CQyxFQUFHTCxFQUFRLElBQUtDLEVBQVFsTCxFQUFJc0wsRUFBRyxJQUMvQkMsRUFBR04sRUFBUSxJQUFLQyxFQUFRbEwsRUFBSXVMLEVBQUcsSUFDL0J0SSxFQUFHQSxHQWdCWCxJQUFrQm9JLEVBQUdDLEVBQUdDLENBZHhCLENBL1NjZ0MsQ0FBVzlXLEdBQ3JCdUYsS0FBS3dSLGVBQWlCL1csRUFDdEJ1RixLQUFLeVIsR0FBS3pOLEVBQUlxTCxFQUNkclAsS0FBSzBSLEdBQUsxTixFQUFJc0wsRUFDZHRQLEtBQUsyUixHQUFLM04sRUFBSXVMLEVBQ2R2UCxLQUFLNFIsR0FBSzVOLEVBQUlpRCxFQUNkakgsS0FBSzZSLFFBQVU3QyxFQUFVLElBQU9oUCxLQUFLNFIsSUFBTSxJQUMzQzVSLEtBQUs4UixRQUFVL1QsRUFBS3VKLFFBQVV0RCxFQUFJc0QsT0FDbEN0SCxLQUFLK1IsY0FBZ0JoVSxFQUFLb0ssYUFNdEJuSSxLQUFLeVIsR0FBSyxJQUFLelIsS0FBS3lSLEdBQUt6QyxFQUFVaFAsS0FBS3lSLEtBQ3hDelIsS0FBSzBSLEdBQUssSUFBSzFSLEtBQUswUixHQUFLMUMsRUFBVWhQLEtBQUswUixLQUN4QzFSLEtBQUsyUixHQUFLLElBQUszUixLQUFLMlIsR0FBSzNDLEVBQVVoUCxLQUFLMlIsS0FFNUMzUixLQUFLZ1MsSUFBTWhPLEVBQUl3TCxHQUNmeFAsS0FBS2lTLE9BQVNuRCxHQUNsQixFQXFUQSxTQUFTb0QsRUFBUzdDLEVBQUdDLEVBQUdDLEdBRXBCRixFQUFJc0IsRUFBUXRCLEVBQUcsS0FDZkMsRUFBSXFCLEVBQVFyQixFQUFHLEtBQ2ZDLEVBQUlvQixFQUFRcEIsRUFBRyxLQUVmLElBQ0l6SSxFQUFHQyxFQURIdUIsRUFBTTRHLEVBQVFHLEVBQUdDLEVBQUdDLEdBQUloSCxFQUFNMEcsRUFBUUksRUFBR0MsRUFBR0MsR0FDdENoUixHQUFLK0osRUFBTUMsR0FBTyxFQUU1QixHQUFHRCxHQUFPQyxFQUNOekIsRUFBSUMsRUFBSSxNQUVQLENBQ0QsSUFBSW9MLEVBQUk3SixFQUFNQyxFQUVkLE9BREF4QixFQUFJeEksRUFBSSxHQUFNNFQsR0FBSyxFQUFJN0osRUFBTUMsR0FBTzRKLEdBQUs3SixFQUFNQyxHQUN4Q0QsR0FDSCxLQUFLK0csRUFBR3ZJLEdBQUt3SSxFQUFJQyxHQUFLNEMsR0FBSzdDLEVBQUlDLEVBQUksRUFBSSxHQUFJLE1BQzNDLEtBQUtELEVBQUd4SSxHQUFLeUksRUFBSUYsR0FBSzhDLEVBQUksRUFBRyxNQUM3QixLQUFLNUMsRUFBR3pJLEdBQUt1SSxFQUFJQyxHQUFLNkMsRUFBSSxFQUc5QnJMLEdBQUssQ0FDVCxDQUVBLE1BQU8sQ0FBRUEsRUFBR0EsRUFBR0MsRUFBR0EsRUFBR3hJLEVBQUdBLEVBQzVCLENBd0NBLFNBQVM2VCxFQUFTL0MsRUFBR0MsRUFBR0MsR0FFcEJGLEVBQUlzQixFQUFRdEIsRUFBRyxLQUNmQyxFQUFJcUIsRUFBUXJCLEVBQUcsS0FDZkMsRUFBSW9CLEVBQVFwQixFQUFHLEtBRWYsSUFDSXpJLEVBQUdDLEVBREh1QixFQUFNNEcsRUFBUUcsRUFBR0MsRUFBR0MsR0FBSWhILEVBQU0wRyxFQUFRSSxFQUFHQyxFQUFHQyxHQUN0Q3ZJLEVBQUlzQixFQUVWNkosRUFBSTdKLEVBQU1DLEVBR2QsR0FGQXhCLEVBQVksSUFBUnVCLEVBQVksRUFBSTZKLEVBQUk3SixFQUVyQkEsR0FBT0MsRUFDTnpCLEVBQUksTUFFSCxDQUNELE9BQU93QixHQUNILEtBQUsrRyxFQUFHdkksR0FBS3dJLEVBQUlDLEdBQUs0QyxHQUFLN0MsRUFBSUMsRUFBSSxFQUFJLEdBQUksTUFDM0MsS0FBS0QsRUFBR3hJLEdBQUt5SSxFQUFJRixHQUFLOEMsRUFBSSxFQUFHLE1BQzdCLEtBQUs1QyxFQUFHekksR0FBS3VJLEVBQUlDLEdBQUs2QyxFQUFJLEVBRTlCckwsR0FBSyxDQUNULENBQ0EsTUFBTyxDQUFFQSxFQUFHQSxFQUFHQyxFQUFHQSxFQUFHQyxFQUFHQSxFQUM1QixDQTZCQSxTQUFTcUwsRUFBU2hELEVBQUdDLEVBQUdDLEVBQUcrQyxHQUV2QixJQUFJQyxFQUFNLENBQ05DLEVBQUt4RCxFQUFVSyxHQUFHM1EsU0FBUyxLQUMzQjhULEVBQUt4RCxFQUFVTSxHQUFHNVEsU0FBUyxLQUMzQjhULEVBQUt4RCxFQUFVTyxHQUFHN1EsU0FBUyxNQUkvQixPQUFJNFQsR0FBY0MsRUFBSSxHQUFHRSxPQUFPLElBQU1GLEVBQUksR0FBR0UsT0FBTyxJQUFNRixFQUFJLEdBQUdFLE9BQU8sSUFBTUYsRUFBSSxHQUFHRSxPQUFPLElBQU1GLEVBQUksR0FBR0UsT0FBTyxJQUFNRixFQUFJLEdBQUdFLE9BQU8sR0FDekhGLEVBQUksR0FBR0UsT0FBTyxHQUFLRixFQUFJLEdBQUdFLE9BQU8sR0FBS0YsRUFBSSxHQUFHRSxPQUFPLEdBR3hERixFQUFJOVUsS0FBSyxHQUNwQixDQUtJLFNBQVNpVixFQUFVckQsRUFBR0MsRUFBR0MsRUFBR3RJLEdBU3hCLE1BUFUsQ0FDTnVMLEdBbWZpQkwsRUFuZlFsTCxFQW9mMUJHLEtBQUtDLE1BQXNCLElBQWhCZ0UsV0FBVzhHLElBQVV6VCxTQUFTLE1BbmZ4QzhULEVBQUt4RCxFQUFVSyxHQUFHM1EsU0FBUyxLQUMzQjhULEVBQUt4RCxFQUFVTSxHQUFHNVEsU0FBUyxLQUMzQjhULEVBQUt4RCxFQUFVTyxHQUFHN1EsU0FBUyxNQUdwQmpCLEtBQUssSUE2ZXhCLElBQTZCMFUsQ0E1ZXpCLENBc0JKLFNBQVNRLEVBQVdsWSxFQUFPbVksR0FDdkJBLEVBQXFCLElBQVhBLEVBQWdCLEVBQUtBLEdBQVUsR0FDekMsSUFBSTVDLEVBQU01UixFQUFVM0QsR0FBTzZELFFBRzNCLE9BRkEwUixFQUFJakosR0FBSzZMLEVBQVMsSUFDbEI1QyxFQUFJakosRUFBSThMLEVBQVE3QyxFQUFJakosR0FDYjNJLEVBQVU0UixFQUNyQixDQUVBLFNBQVM4QyxFQUFTclksRUFBT21ZLEdBQ3JCQSxFQUFxQixJQUFYQSxFQUFnQixFQUFLQSxHQUFVLEdBQ3pDLElBQUk1QyxFQUFNNVIsRUFBVTNELEdBQU82RCxRQUczQixPQUZBMFIsRUFBSWpKLEdBQUs2TCxFQUFTLElBQ2xCNUMsRUFBSWpKLEVBQUk4TCxFQUFRN0MsRUFBSWpKLEdBQ2IzSSxFQUFVNFIsRUFDckIsQ0FFQSxTQUFTK0MsRUFBVXRZLEdBQ2YsT0FBTzJELEVBQVUzRCxHQUFPa1ksV0FBVyxJQUN2QyxDQUVBLFNBQVNLLEVBQVN2WSxFQUFPbVksR0FDckJBLEVBQXFCLElBQVhBLEVBQWdCLEVBQUtBLEdBQVUsR0FDekMsSUFBSTVDLEVBQU01UixFQUFVM0QsR0FBTzZELFFBRzNCLE9BRkEwUixFQUFJelIsR0FBS3FVLEVBQVMsSUFDbEI1QyxFQUFJelIsRUFBSXNVLEVBQVE3QyxFQUFJelIsR0FDYkgsRUFBVTRSLEVBQ3JCLENBRUEsU0FBU2lELEVBQVN4WSxFQUFPbVksR0FDckJBLEVBQXFCLElBQVhBLEVBQWdCLEVBQUtBLEdBQVUsR0FDekMsSUFBSTVPLEVBQU01RixFQUFVM0QsR0FBT3VOLFFBSTNCLE9BSEFoRSxFQUFJcUwsRUFBSUgsRUFBUSxFQUFHRCxFQUFRLElBQUtqTCxFQUFJcUwsRUFBSUwsR0FBbUI0RCxFQUFTLElBQWxCLE9BQ2xENU8sRUFBSXNMLEVBQUlKLEVBQVEsRUFBR0QsRUFBUSxJQUFLakwsRUFBSXNMLEVBQUlOLEdBQW1CNEQsRUFBUyxJQUFsQixPQUNsRDVPLEVBQUl1TCxFQUFJTCxFQUFRLEVBQUdELEVBQVEsSUFBS2pMLEVBQUl1TCxFQUFJUCxHQUFtQjRELEVBQVMsSUFBbEIsT0FDM0N4VSxFQUFVNEYsRUFDckIsQ0FFQSxTQUFTa1AsRUFBUXpZLEVBQU9tWSxHQUNwQkEsRUFBcUIsSUFBWEEsRUFBZ0IsRUFBS0EsR0FBVSxHQUN6QyxJQUFJNUMsRUFBTTVSLEVBQVUzRCxHQUFPNkQsUUFHM0IsT0FGQTBSLEVBQUl6UixHQUFLcVUsRUFBUyxJQUNsQjVDLEVBQUl6UixFQUFJc1UsRUFBUTdDLEVBQUl6UixHQUNiSCxFQUFVNFIsRUFDckIsQ0FJQSxTQUFTbUQsRUFBSzFZLEVBQU9tWSxHQUNqQixJQUFJNUMsRUFBTTVSLEVBQVUzRCxHQUFPNkQsUUFDdkI4VSxHQUFPcEUsRUFBVWdCLEVBQUlsSixHQUFLOEwsR0FBVSxJQUV4QyxPQURBNUMsRUFBSWxKLEVBQUlzTSxFQUFNLEVBQUksSUFBTUEsRUFBTUEsRUFDdkJoVixFQUFVNFIsRUFDckIsQ0FPQSxTQUFTcUQsRUFBVzVZLEdBQ2hCLElBQUl1VixFQUFNNVIsRUFBVTNELEdBQU82RCxRQUUzQixPQURBMFIsRUFBSWxKLEdBQUtrSixFQUFJbEosRUFBSSxLQUFPLElBQ2pCMUksRUFBVTRSLEVBQ3JCLENBRUEsU0FBU3NELEVBQU03WSxHQUNYLElBQUl1VixFQUFNNVIsRUFBVTNELEdBQU82RCxRQUN2QndJLEVBQUlrSixFQUFJbEosRUFDWixNQUFPLENBQ0gxSSxFQUFVM0QsR0FDVjJELEVBQVUsQ0FBRTBJLEdBQUlBLEVBQUksS0FBTyxJQUFLQyxFQUFHaUosRUFBSWpKLEVBQUd4SSxFQUFHeVIsRUFBSXpSLElBQ2pESCxFQUFVLENBQUUwSSxHQUFJQSxFQUFJLEtBQU8sSUFBS0MsRUFBR2lKLEVBQUlqSixFQUFHeEksRUFBR3lSLEVBQUl6UixJQUV6RCxDQUVBLFNBQVNnVixFQUFPOVksR0FDWixJQUFJdVYsRUFBTTVSLEVBQVUzRCxHQUFPNkQsUUFDdkJ3SSxFQUFJa0osRUFBSWxKLEVBQ1osTUFBTyxDQUNIMUksRUFBVTNELEdBQ1YyRCxFQUFVLENBQUUwSSxHQUFJQSxFQUFJLElBQU0sSUFBS0MsRUFBR2lKLEVBQUlqSixFQUFHeEksRUFBR3lSLEVBQUl6UixJQUNoREgsRUFBVSxDQUFFMEksR0FBSUEsRUFBSSxLQUFPLElBQUtDLEVBQUdpSixFQUFJakosRUFBR3hJLEVBQUd5UixFQUFJelIsSUFDakRILEVBQVUsQ0FBRTBJLEdBQUlBLEVBQUksS0FBTyxJQUFLQyxFQUFHaUosRUFBSWpKLEVBQUd4SSxFQUFHeVIsRUFBSXpSLElBRXpELENBRUEsU0FBU2lWLEVBQWdCL1ksR0FDckIsSUFBSXVWLEVBQU01UixFQUFVM0QsR0FBTzZELFFBQ3ZCd0ksRUFBSWtKLEVBQUlsSixFQUNaLE1BQU8sQ0FDSDFJLEVBQVUzRCxHQUNWMkQsRUFBVSxDQUFFMEksR0FBSUEsRUFBSSxJQUFNLElBQUtDLEVBQUdpSixFQUFJakosRUFBR3hJLEVBQUd5UixFQUFJelIsSUFDaERILEVBQVUsQ0FBRTBJLEdBQUlBLEVBQUksS0FBTyxJQUFLQyxFQUFHaUosRUFBSWpKLEVBQUd4SSxFQUFHeVIsRUFBSXpSLElBRXpELENBRUEsU0FBU2tWLEVBQVVoWixFQUFPaVosRUFBU0MsR0FDL0JELEVBQVVBLEdBQVcsRUFDckJDLEVBQVNBLEdBQVUsR0FFbkIsSUFBSTNELEVBQU01UixFQUFVM0QsR0FBTzZELFFBQ3ZCc1YsRUFBTyxJQUFNRCxFQUNiRSxFQUFNLENBQUN6VixFQUFVM0QsSUFFckIsSUFBS3VWLEVBQUlsSixHQUFNa0osRUFBSWxKLEdBQUs4TSxFQUFPRixHQUFXLEdBQU0sS0FBTyxNQUFPQSxHQUMxRDFELEVBQUlsSixHQUFLa0osRUFBSWxKLEVBQUk4TSxHQUFRLElBQ3pCQyxFQUFJL1UsS0FBS1YsRUFBVTRSLElBRXZCLE9BQU82RCxDQUNYLENBRUEsU0FBU0MsRUFBY3JaLEVBQU9pWixHQUMxQkEsRUFBVUEsR0FBVyxFQU1yQixJQUxBLElBQUl4RCxFQUFNOVIsRUFBVTNELEdBQU9vTSxRQUN2QkMsRUFBSW9KLEVBQUlwSixFQUFHQyxFQUFJbUosRUFBSW5KLEVBQUdDLEVBQUlrSixFQUFJbEosRUFDOUI2TSxFQUFNLEdBQ05FLEVBQWUsRUFBSUwsRUFFaEJBLEtBQ0hHLEVBQUkvVSxLQUFLVixFQUFVLENBQUUwSSxFQUFHQSxFQUFHQyxFQUFHQSxFQUFHQyxFQUFHQSxLQUNwQ0EsR0FBS0EsRUFBSStNLEdBQWdCLEVBRzdCLE9BQU9GLENBQ1gsQ0F4bEJBelYsRUFBVW1PLFVBQVksQ0FDbEJ5SCxPQUFRLFdBQ0osT0FBT2hVLEtBQUtpVSxnQkFBa0IsR0FDbEMsRUFDQUMsUUFBUyxXQUNMLE9BQVFsVSxLQUFLZ1UsUUFDakIsRUFDQXRPLFFBQVMsV0FDTCxPQUFPMUYsS0FBS2dTLEdBQ2hCLEVBQ0FtQyxpQkFBa0IsV0FDaEIsT0FBT25VLEtBQUt3UixjQUNkLEVBQ0F0SyxVQUFXLFdBQ1AsT0FBT2xILEtBQUs4UixPQUNoQixFQUNBc0MsU0FBVSxXQUNOLE9BQU9wVSxLQUFLNFIsRUFDaEIsRUFDQXFDLGNBQWUsV0FDWCxJQUFJalEsRUFBTWhFLEtBQUtnSSxRQUNmLE9BQWdCLElBQVJoRSxFQUFJcUwsRUFBa0IsSUFBUnJMLEVBQUlzTCxFQUFrQixJQUFSdEwsRUFBSXVMLEdBQVcsR0FDdkQsRUFDQThFLFNBQVUsU0FBUzVPLEdBR2YsT0FGQXpGLEtBQUs0UixHQUFLTixFQUFXN0wsR0FDckJ6RixLQUFLNlIsUUFBVTdDLEVBQVUsSUFBT2hQLEtBQUs0UixJQUFNLElBQ3BDNVIsSUFDWCxFQUNBNkcsTUFBTyxXQUNILElBQUlxSixFQUFNa0MsRUFBU3BTLEtBQUt5UixHQUFJelIsS0FBSzBSLEdBQUkxUixLQUFLMlIsSUFDMUMsTUFBTyxDQUFFN0ssRUFBVyxJQUFSb0osRUFBSXBKLEVBQVNDLEVBQUdtSixFQUFJbkosRUFBR0MsRUFBR2tKLEVBQUlsSixFQUFHQyxFQUFHakgsS0FBSzRSLEdBQ3pELEVBQ0EwQyxZQUFhLFdBQ1QsSUFBSXBFLEVBQU1rQyxFQUFTcFMsS0FBS3lSLEdBQUl6UixLQUFLMFIsR0FBSTFSLEtBQUsyUixJQUN0QzdLLEVBQUlrSSxFQUFrQixJQUFSa0IsRUFBSXBKLEdBQVVDLEVBQUlpSSxFQUFrQixJQUFSa0IsRUFBSW5KLEdBQVVDLEVBQUlnSSxFQUFrQixJQUFSa0IsRUFBSWxKLEdBQzlFLE9BQW1CLEdBQVhoSCxLQUFLNFIsR0FDWCxPQUFVOUssRUFBSSxLQUFPQyxFQUFJLE1BQVFDLEVBQUksS0FDckMsUUFBVUYsRUFBSSxLQUFPQyxFQUFJLE1BQVFDLEVBQUksTUFBT2hILEtBQUs2UixRQUFVLEdBQ2pFLEVBQ0F2VCxNQUFPLFdBQ0gsSUFBSTBSLEVBQU1rQyxFQUFTbFMsS0FBS3lSLEdBQUl6UixLQUFLMFIsR0FBSTFSLEtBQUsyUixJQUMxQyxNQUFPLENBQUU3SyxFQUFXLElBQVJrSixFQUFJbEosRUFBU0MsRUFBR2lKLEVBQUlqSixFQUFHeEksRUFBR3lSLEVBQUl6UixFQUFHMEksRUFBR2pILEtBQUs0UixHQUN6RCxFQUNBMkMsWUFBYSxXQUNULElBQUl2RSxFQUFNa0MsRUFBU2xTLEtBQUt5UixHQUFJelIsS0FBSzBSLEdBQUkxUixLQUFLMlIsSUFDdEM3SyxFQUFJa0ksRUFBa0IsSUFBUmdCLEVBQUlsSixHQUFVQyxFQUFJaUksRUFBa0IsSUFBUmdCLEVBQUlqSixHQUFVeEksRUFBSXlRLEVBQWtCLElBQVJnQixFQUFJelIsR0FDOUUsT0FBbUIsR0FBWHlCLEtBQUs0UixHQUNYLE9BQVU5SyxFQUFJLEtBQU9DLEVBQUksTUFBUXhJLEVBQUksS0FDckMsUUFBVXVJLEVBQUksS0FBT0MsRUFBSSxNQUFReEksRUFBSSxNQUFPeUIsS0FBSzZSLFFBQVUsR0FDakUsRUFDQTJDLE1BQU8sU0FBU2xDLEdBQ1osT0FBT0QsRUFBU3JTLEtBQUt5UixHQUFJelIsS0FBSzBSLEdBQUkxUixLQUFLMlIsR0FBSVcsRUFDL0MsRUFDQTVLLFlBQWEsU0FBUzRLLEdBQ2xCLE1BQU8sSUFBTXRTLEtBQUt3VSxNQUFNbEMsRUFDNUIsRUFDQW1DLE9BQVEsV0FDSixPQUFPL0IsRUFBVTFTLEtBQUt5UixHQUFJelIsS0FBSzBSLEdBQUkxUixLQUFLMlIsR0FBSTNSLEtBQUs0UixHQUNyRCxFQUNBOEMsYUFBYyxXQUNWLE1BQU8sSUFBTTFVLEtBQUt5VSxRQUN0QixFQUNBek0sTUFBTyxXQUNILE1BQU8sQ0FBRXFILEVBQUdMLEVBQVVoUCxLQUFLeVIsSUFBS25DLEVBQUdOLEVBQVVoUCxLQUFLMFIsSUFBS25DLEVBQUdQLEVBQVVoUCxLQUFLMlIsSUFBSzFLLEVBQUdqSCxLQUFLNFIsR0FDMUYsRUFDQWhULFlBQWEsV0FDVCxPQUFtQixHQUFYb0IsS0FBSzRSLEdBQ1gsT0FBVTVDLEVBQVVoUCxLQUFLeVIsSUFBTSxLQUFPekMsRUFBVWhQLEtBQUswUixJQUFNLEtBQU8xQyxFQUFVaFAsS0FBSzJSLElBQU0sSUFDdkYsUUFBVTNDLEVBQVVoUCxLQUFLeVIsSUFBTSxLQUFPekMsRUFBVWhQLEtBQUswUixJQUFNLEtBQU8xQyxFQUFVaFAsS0FBSzJSLElBQU0sS0FBTzNSLEtBQUs2UixRQUFVLEdBQ25ILEVBQ0E4QyxnQkFBaUIsV0FDYixNQUFPLENBQUV0RixFQUFHTCxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLeVIsR0FBSSxNQUFjLElBQUtuQyxFQUFHTixFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLMFIsR0FBSSxNQUFjLElBQUtuQyxFQUFHUCxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLMlIsR0FBSSxNQUFjLElBQUsxSyxFQUFHakgsS0FBSzRSLEdBQ3hLLEVBQ0FnRCxzQkFBdUIsV0FDbkIsT0FBbUIsR0FBWDVVLEtBQUs0UixHQUNYLE9BQVU1QyxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLeVIsR0FBSSxNQUFjLE1BQVF6QyxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLMFIsR0FBSSxNQUFjLE1BQVExQyxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLMlIsR0FBSSxNQUFjLEtBQ3JKLFFBQVUzQyxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLeVIsR0FBSSxNQUFjLE1BQVF6QyxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLMFIsR0FBSSxNQUFjLE1BQVExQyxFQUFrQyxJQUF4QjJCLEVBQVEzUSxLQUFLMlIsR0FBSSxNQUFjLE1BQVEzUixLQUFLNlIsUUFBVSxHQUNsTCxFQUNBZ0QsT0FBUSxXQUNKLE9BQWdCLElBQVo3VSxLQUFLNFIsR0FDRSxnQkFHUDVSLEtBQUs0UixHQUFLLEtBSVBrRCxFQUFTekMsRUFBU3JTLEtBQUt5UixHQUFJelIsS0FBSzBSLEdBQUkxUixLQUFLMlIsSUFBSSxNQUFVLEVBQ2xFLEVBQ0E5UyxTQUFVLFNBQVNrVyxHQUNmLElBQUlDLEVBQWEsSUFBTXRDLEVBQVUxUyxLQUFLeVIsR0FBSXpSLEtBQUswUixHQUFJMVIsS0FBSzJSLEdBQUkzUixLQUFLNFIsSUFDN0RxRCxFQUFtQkQsRUFDbkI3TSxFQUFlbkksS0FBSytSLGNBQWdCLHFCQUF1QixHQU8vRCxPQUxJZ0QsSUFFQUUsRUFEUTdXLEVBQVUyVyxHQUNHTCxnQkFHbEIsOENBQThDdk0sRUFBYSxpQkFBaUI2TSxFQUFXLGdCQUFnQkMsRUFBaUIsR0FDbkksRUFDQXZXLFNBQVUsU0FBUzRJLEdBQ2YsSUFBSTROLElBQWM1TixFQUNsQkEsRUFBU0EsR0FBVXRILEtBQUs4UixRQUV4QixJQUFJclQsR0FBa0IsRUFDbEIwVyxFQUFXblYsS0FBSzRSLEdBQUssR0FBSzVSLEtBQUs0UixJQUFNLEVBR3pDLE9BRndCc0QsSUFBYUMsR0FBd0IsUUFBWDdOLEdBQStCLFNBQVhBLEdBQWdDLFNBQVhBLEdBQWdDLFNBQVhBLEdBVWpHLFFBQVhBLElBQ0E3SSxFQUFrQnVCLEtBQUtwQixlQUVaLFNBQVgwSSxJQUNBN0ksRUFBa0J1QixLQUFLNFUseUJBRVosUUFBWHROLEdBQStCLFNBQVhBLElBQ3BCN0ksRUFBa0J1QixLQUFLMEgsZUFFWixTQUFYSixJQUNBN0ksRUFBa0J1QixLQUFLMEgsYUFBWSxJQUV4QixTQUFYSixJQUNBN0ksRUFBa0J1QixLQUFLMFUsZ0JBRVosU0FBWHBOLElBQ0E3SSxFQUFrQnVCLEtBQUs2VSxVQUVaLFFBQVh2TixJQUNBN0ksRUFBa0J1QixLQUFLdVUsZUFFWixRQUFYak4sSUFDQTdJLEVBQWtCdUIsS0FBS3NVLGVBR3BCN1YsR0FBbUJ1QixLQUFLMEgsZUE5QlosU0FBWEosR0FBaUMsSUFBWnRILEtBQUs0UixHQUNuQjVSLEtBQUs2VSxTQUVUN1UsS0FBS3BCLGFBNEJwQixFQUVBd1csbUJBQW9CLFNBQVN4SCxFQUFJM04sR0FDN0IsSUFBSXhGLEVBQVFtVCxFQUFHeE4sTUFBTSxLQUFNLENBQUNKLE1BQU15TSxPQUFPLEdBQUduTCxNQUFNa0wsS0FBS3ZNLEtBS3ZELE9BSkFELEtBQUt5UixHQUFLaFgsRUFBTWdYLEdBQ2hCelIsS0FBSzBSLEdBQUtqWCxFQUFNaVgsR0FDaEIxUixLQUFLMlIsR0FBS2xYLEVBQU1rWCxHQUNoQjNSLEtBQUtxVSxTQUFTNVosRUFBTW1YLElBQ2I1UixJQUNYLEVBQ0FnVCxRQUFTLFdBQ0wsT0FBT2hULEtBQUtvVixtQkFBbUJwQyxFQUFTOVMsVUFDNUMsRUFDQStTLFNBQVUsV0FDTixPQUFPalQsS0FBS29WLG1CQUFtQm5DLEVBQVUvUyxVQUM3QyxFQUNBZ1QsT0FBUSxXQUNKLE9BQU9sVCxLQUFLb1YsbUJBQW1CbEMsRUFBUWhULFVBQzNDLEVBQ0F5UyxXQUFZLFdBQ1IsT0FBTzNTLEtBQUtvVixtQkFBbUJ6QyxFQUFZelMsVUFDL0MsRUFDQTRTLFNBQVUsV0FDTixPQUFPOVMsS0FBS29WLG1CQUFtQnRDLEVBQVU1UyxVQUM3QyxFQUNBNlMsVUFBVyxXQUNQLE9BQU8vUyxLQUFLb1YsbUJBQW1CckMsRUFBVzdTLFVBQzlDLEVBQ0FpVCxLQUFNLFdBQ0YsT0FBT25ULEtBQUtvVixtQkFBbUJqQyxFQUFNalQsVUFDekMsRUFFQW1WLGtCQUFtQixTQUFTekgsRUFBSTNOLEdBQzVCLE9BQU8yTixFQUFHeE4sTUFBTSxLQUFNLENBQUNKLE1BQU15TSxPQUFPLEdBQUduTCxNQUFNa0wsS0FBS3ZNLElBQ3RELEVBQ0F3VCxVQUFXLFdBQ1AsT0FBT3pULEtBQUtxVixrQkFBa0I1QixFQUFXdlQsVUFDN0MsRUFDQW1ULFdBQVksV0FDUixPQUFPclQsS0FBS3FWLGtCQUFrQmhDLEVBQVluVCxVQUM5QyxFQUNBNFQsY0FBZSxXQUNYLE9BQU85VCxLQUFLcVYsa0JBQWtCdkIsRUFBZTVULFVBQ2pELEVBQ0FzVCxnQkFBaUIsV0FDYixPQUFPeFQsS0FBS3FWLGtCQUFrQjdCLEVBQWlCdFQsVUFDbkQsRUFDQW9ULE1BQU8sV0FDSCxPQUFPdFQsS0FBS3FWLGtCQUFrQi9CLEVBQU9wVCxVQUN6QyxFQUNBcVQsT0FBUSxXQUNKLE9BQU92VCxLQUFLcVYsa0JBQWtCOUIsRUFBUXJULFVBQzFDLEdBS0o5QixFQUFVK0ksVUFBWSxTQUFTMU0sRUFBT3NELEdBQ2xDLEdBQW9CLGlCQUFUdEQsRUFBbUIsQ0FDMUIsSUFBSWtNLEVBQVcsQ0FBQyxFQUNoQixJQUFLLElBQUkvSSxLQUFLbkQsRUFDTkEsRUFBTWlXLGVBQWU5UyxLQUVqQitJLEVBQVMvSSxHQURILE1BQU5BLEVBQ2NuRCxFQUFNbUQsR0FHTmlULEVBQW9CcFcsRUFBTW1ELEtBSXBEbkQsRUFBUWtNLENBQ1osQ0FFQSxPQUFPdkksRUFBVTNELEVBQU9zRCxFQUM1QixFQWlQQUssRUFBVUksT0FBUyxTQUFVOFcsRUFBUUMsR0FDakMsU0FBS0QsSUFBV0MsSUFDVG5YLEVBQVVrWCxHQUFRMVcsZUFBaUJSLEVBQVVtWCxHQUFRM1csYUFDaEUsRUFDQVIsRUFBVWdSLE9BQVMsV0FDZixPQUFPaFIsRUFBVStJLFVBQVUsQ0FDdkJrSSxFQUFHRixJQUNIRyxFQUFHSCxJQUNISSxFQUFHSixLQUVYLEVBeUlBL1EsRUFBVW9YLElBQU0sU0FBU0YsRUFBUUMsRUFBUTNDLEdBQ3JDQSxFQUFxQixJQUFYQSxFQUFnQixFQUFLQSxHQUFVLEdBRXpDLElBT0k2QyxFQVBBQyxFQUFPdFgsRUFBVWtYLEdBQVF0TixRQUN6QjJOLEVBQU92WCxFQUFVbVgsR0FBUXZOLFFBRXpCbEssRUFBSThVLEVBQVMsSUFDYmdELEVBQVEsRUFBSjlYLEVBQVEsRUFDWm1KLEVBQUkwTyxFQUFLMU8sRUFBSXlPLEVBQUt6TyxFQVlsQjRPLEVBQUssR0FGVEosSUFMSUEsRUFEQUcsRUFBSTNPLElBQU0sRUFDTDJPLEdBRUNBLEVBQUkzTyxJQUFNLEVBQUkyTyxFQUFJM08sSUFHakIsR0FBSyxHQUlaOEksRUFBTyxDQUNQVixFQUFHc0csRUFBS3RHLEVBQUlvRyxFQUFLQyxFQUFLckcsRUFBSXdHLEVBQzFCdkcsRUFBR3FHLEVBQUtyRyxFQUFJbUcsRUFBS0MsRUFBS3BHLEVBQUl1RyxFQUMxQnRHLEVBQUdvRyxFQUFLcEcsRUFBSWtHLEVBQUtDLEVBQUtuRyxFQUFJc0csRUFDMUI1TyxFQUFHME8sRUFBSzFPLEVBQUluSixFQUFLNFgsRUFBS3pPLEdBQUssRUFBSW5KLElBR25DLE9BQU9NLEVBQVUyUixFQUNyQixFQVdBM1IsRUFBVTBYLFlBQWMsU0FBU1IsRUFBUUMsR0FDckMsSUFBSVEsRUFBSzNYLEVBQVVrWCxHQUNmVSxFQUFLNVgsRUFBVW1YLEdBQ2ZHLEVBQU9LLEVBQUcvTixRQUNWMk4sRUFBT0ssRUFBR2hPLFFBQ1ZpTyxFQUFjRixFQUFHOUIsZ0JBQ2pCaUMsRUFBY0YsRUFBRy9CLGdCQUNqQmtDLEVBQ0EvTyxLQUFLa0IsSUFBSW9OLEVBQUtyRyxFQUFHc0csRUFBS3RHLEdBQUtqSSxLQUFLbUIsSUFBSW1OLEVBQUtyRyxFQUFHc0csRUFBS3RHLEdBQ2pEakksS0FBS2tCLElBQUlvTixFQUFLcEcsRUFBR3FHLEVBQUtyRyxHQUFLbEksS0FBS21CLElBQUltTixFQUFLcEcsRUFBR3FHLEVBQUtyRyxHQUNqRGxJLEtBQUtrQixJQUFJb04sRUFBS25HLEVBQUdvRyxFQUFLcEcsR0FBS25JLEtBQUttQixJQUFJbU4sRUFBS25HLEVBQUdvRyxFQUFLcEcsR0FHckQsTUFBTyxDQUNINkcsV0FBWWhQLEtBQUs4QyxJQUFJK0wsRUFBY0MsR0FDbkN6YixNQUFPMGIsRUFFZixFQU9BL1gsRUFBVWlZLFdBQWEsU0FBU2YsRUFBUUMsR0FDcEMsSUFBSU8sRUFBYzFYLEVBQVUwWCxZQUFZUixFQUFRQyxHQUNoRCxPQUFPTyxFQUFZTSxXQUFhLEtBQU9OLEVBQVlyYixNQUFRLEdBQy9ELEVBT0EyRCxFQUFVa1ksYUFBZSxTQUFTQyxFQUFXQyxHQUl6QyxJQUhBLElBQUlDLEVBQVksS0FDWkMsRUFBWSxFQUNaQyxHQUFpQixFQUNaL1ksRUFBRSxFQUFHQSxFQUFJNFksRUFBVXZZLE9BQVFMLElBQUssQ0FLckMsSUFBSWtZLEVBQWMxWCxFQUFVMFgsWUFBWVMsRUFBV0MsRUFBVTVZLElBQ3pEZ1osRUFBV2QsRUFBWU0sV0FBYSxLQUFPTixFQUFZcmIsTUFBUSxJQUMvRG9jLEVBQWFmLEVBQVlNLFdBQWEsSUFBOUIsRUFBc0NOLEVBQVlyYixNQUFRLEtBRWpFbWMsSUFBY0QsR0FDZEMsR0FBWUQsR0FBa0JFLEVBQVFILElBQ25DRSxJQUFnQkQsR0FBbUJFLEVBQVFILEtBQy9DQyxFQUFpQkMsRUFDakJGLEVBQVlHLEVBQ1pKLEVBQVlyWSxFQUFVb1ksRUFBVTVZLElBRXhDLENBQ0EsT0FBTzZZLENBQ1gsRUFNQSxJQUFJNUcsRUFBUXpSLEVBQVV5UixNQUFRLENBQzFCaUgsVUFBVyxTQUNYQyxhQUFjLFNBQ2RDLEtBQU0sTUFDTkMsV0FBWSxTQUNaQyxNQUFPLFNBQ1BDLE1BQU8sU0FDUEMsT0FBUSxTQUNSQyxNQUFPLE1BQ1BDLGVBQWdCLFNBQ2hCQyxLQUFNLE1BQ05DLFdBQVksU0FDWkMsTUFBTyxTQUNQQyxVQUFXLFNBQ1hDLFlBQWEsU0FDYkMsVUFBVyxTQUNYQyxXQUFZLFNBQ1pDLFVBQVcsU0FDWEMsTUFBTyxTQUNQQyxlQUFnQixTQUNoQkMsU0FBVSxTQUNWQyxRQUFTLFNBQ1RDLEtBQU0sTUFDTkMsU0FBVSxTQUNWQyxTQUFVLFNBQ1ZDLGNBQWUsU0FDZkMsU0FBVSxTQUNWQyxVQUFXLFNBQ1hDLFNBQVUsU0FDVkMsVUFBVyxTQUNYQyxZQUFhLFNBQ2JDLGVBQWdCLFNBQ2hCQyxXQUFZLFNBQ1pDLFdBQVksU0FDWkMsUUFBUyxTQUNUQyxXQUFZLFNBQ1pDLGFBQWMsU0FDZEMsY0FBZSxTQUNmQyxjQUFlLFNBQ2ZDLGNBQWUsU0FDZkMsY0FBZSxTQUNmQyxXQUFZLFNBQ1pDLFNBQVUsU0FDVkMsWUFBYSxTQUNiQyxRQUFTLFNBQ1RDLFFBQVMsU0FDVEMsV0FBWSxTQUNaQyxVQUFXLFNBQ1hDLFlBQWEsU0FDYkMsWUFBYSxTQUNiQyxRQUFTLE1BQ1RDLFVBQVcsU0FDWEMsV0FBWSxTQUNaQyxLQUFNLFNBQ05DLFVBQVcsU0FDWEMsS0FBTSxTQUNOQyxNQUFPLFNBQ1BDLFlBQWEsU0FDYkMsS0FBTSxTQUNOQyxTQUFVLFNBQ1ZDLFFBQVMsU0FDVEMsVUFBVyxTQUNYQyxPQUFRLFNBQ1JDLE1BQU8sU0FDUEMsTUFBTyxTQUNQQyxTQUFVLFNBQ1ZDLGNBQWUsU0FDZkMsVUFBVyxTQUNYQyxhQUFjLFNBQ2RDLFVBQVcsU0FDWEMsV0FBWSxTQUNaQyxVQUFXLFNBQ1hDLHFCQUFzQixTQUN0QkMsVUFBVyxTQUNYQyxXQUFZLFNBQ1pDLFVBQVcsU0FDWEMsVUFBVyxTQUNYQyxZQUFhLFNBQ2JDLGNBQWUsU0FDZkMsYUFBYyxTQUNkQyxlQUFnQixNQUNoQkMsZUFBZ0IsTUFDaEJDLGVBQWdCLFNBQ2hCQyxZQUFhLFNBQ2JDLEtBQU0sTUFDTkMsVUFBVyxTQUNYQyxNQUFPLFNBQ1BDLFFBQVMsTUFDVEMsT0FBUSxTQUNSQyxpQkFBa0IsU0FDbEJDLFdBQVksU0FDWkMsYUFBYyxTQUNkQyxhQUFjLFNBQ2RDLGVBQWdCLFNBQ2hCQyxnQkFBaUIsU0FDakJDLGtCQUFtQixTQUNuQkMsZ0JBQWlCLFNBQ2pCQyxnQkFBaUIsU0FDakJDLGFBQWMsU0FDZEMsVUFBVyxTQUNYQyxVQUFXLFNBQ1hDLFNBQVUsU0FDVkMsWUFBYSxTQUNiQyxLQUFNLFNBQ05DLFFBQVMsU0FDVEMsTUFBTyxTQUNQQyxVQUFXLFNBQ1hDLE9BQVEsU0FDUkMsVUFBVyxTQUNYQyxPQUFRLFNBQ1JDLGNBQWUsU0FDZkMsVUFBVyxTQUNYQyxjQUFlLFNBQ2ZDLGNBQWUsU0FDZkMsV0FBWSxTQUNaQyxVQUFXLFNBQ1hDLEtBQU0sU0FDTkMsS0FBTSxTQUNOQyxLQUFNLFNBQ05DLFdBQVksU0FDWkMsT0FBUSxTQUNSQyxjQUFlLFNBQ2ZDLElBQUssTUFDTEMsVUFBVyxTQUNYQyxVQUFXLFNBQ1hDLFlBQWEsU0FDYkMsT0FBUSxTQUNSQyxXQUFZLFNBQ1pDLFNBQVUsU0FDVkMsU0FBVSxTQUNWQyxPQUFRLFNBQ1JDLE9BQVEsU0FDUkMsUUFBUyxTQUNUQyxVQUFXLFNBQ1hDLFVBQVcsU0FDWEMsVUFBVyxTQUNYQyxLQUFNLFNBQ05DLFlBQWEsU0FDYkMsVUFBVyxTQUNYQyxJQUFLLFNBQ0xDLEtBQU0sU0FDTkMsUUFBUyxTQUNUQyxPQUFRLFNBQ1JDLFVBQVcsU0FDWEMsT0FBUSxTQUNSQyxNQUFPLFNBQ1BDLE1BQU8sTUFDUEMsV0FBWSxTQUNaQyxPQUFRLE1BQ1JDLFlBQWEsVUFJYnBMLEVBQVcxVyxFQUFVMFcsU0FPekIsU0FBYzNWLEdBQ1YsSUFBSWdoQixFQUFVLENBQUUsRUFDaEIsSUFBSyxJQUFJdmlCLEtBQUt1QixFQUNOQSxFQUFFdVIsZUFBZTlTLEtBQ2pCdWlCLEVBQVFoaEIsRUFBRXZCLElBQU1BLEdBR3hCLE9BQU91aUIsQ0FDWCxDQWZvQ0MsQ0FBS3ZRLEdBa0J6QyxTQUFTeUIsRUFBV3JLLEdBT2hCLE9BTkFBLEVBQUlvRSxXQUFXcEUsSUFFWG9aLE1BQU1wWixJQUFNQSxFQUFJLEdBQUtBLEVBQUksS0FDekJBLEVBQUksR0FHREEsQ0FDWCxDQUdBLFNBQVMwSixFQUFRMlAsRUFBR2hZLElBZ0NwQixTQUF3QmdZLEdBQ3BCLE1BQW1CLGlCQUFMQSxJQUFvQyxHQUFuQkEsRUFBRXBqQixRQUFRLE1BQWdDLElBQWxCbU8sV0FBV2lWLEVBQ3RFLEVBakNRQyxDQUFlRCxLQUFNQSxFQUFJLFFBRTdCLElBQUlFLEVBa0NSLFNBQXNCRixHQUNsQixNQUFvQixpQkFBTkEsSUFBcUMsR0FBbkJBLEVBQUVwakIsUUFBUSxJQUM5QyxDQXBDeUJ1akIsQ0FBYUgsR0FTbEMsT0FSQUEsRUFBSXJSLEVBQVEzRyxFQUFLNEcsRUFBUSxFQUFHN0QsV0FBV2lWLEtBR25DRSxJQUNBRixFQUFJSSxTQUFTSixFQUFJaFksRUFBSyxJQUFNLEtBSTNCeUcsRUFBSzdFLElBQUlvVyxFQUFJaFksR0FBTyxLQUNkLEVBSUhnWSxFQUFJaFksRUFBTytDLFdBQVcvQyxFQUNsQyxDQUdBLFNBQVN1SyxFQUFRclAsR0FDYixPQUFPeUwsRUFBUSxFQUFHQyxFQUFRLEVBQUcxTCxHQUNqQyxDQUdBLFNBQVM4TSxFQUFnQjlNLEdBQ3JCLE9BQU9rZCxTQUFTbGQsRUFBSyxHQUN6QixDQWNBLFNBQVNnUCxFQUFLblUsR0FDVixPQUFtQixHQUFaQSxFQUFFSixPQUFjLElBQU1JLEVBQUksR0FBS0EsQ0FDMUMsQ0FHQSxTQUFTd1MsRUFBb0J5UCxHQUt6QixPQUpJQSxHQUFLLElBQ0xBLEVBQVMsSUFBSkEsRUFBVyxLQUdiQSxDQUNYLENBT0EsU0FBU2pRLEVBQW9CdkosR0FDekIsT0FBUXdKLEVBQWdCeEosR0FBSyxHQUNqQyxDQUVBLElBU1E2WixFQUtBQyxFQUNBQyxFQWZKL1EsR0FjSThRLEVBQW9CLGVBTHBCRCxFQUFXLDhDQUtvQyxhQUFlQSxFQUFXLGFBQWVBLEVBQVcsWUFDbkdFLEVBQW9CLGNBQWdCRixFQUFXLGFBQWVBLEVBQVcsYUFBZUEsRUFBVyxhQUFlQSxFQUFXLFlBRTFILENBQ0gzYyxJQUFLLElBQUk4YyxPQUFPLE1BQVFGLEdBQ3hCN1EsS0FBTSxJQUFJK1EsT0FBTyxPQUFTRCxHQUMxQjdRLElBQUssSUFBSThRLE9BQU8sTUFBUUYsR0FDeEIzUSxLQUFNLElBQUk2USxPQUFPLE9BQVNELEdBQzFCM1EsSUFBSyxJQUFJNFEsT0FBTyxNQUFRRixHQUN4QnpRLEtBQU0sSUFBSTJRLE9BQU8sT0FBU0QsR0FDMUJyUSxLQUFNLHFEQUNORCxLQUFNLHFEQUNOSCxLQUFNLHVFQXVFZHpULE9BQU95QixVQUFZQSxDQUNsQixDQTNrQ0QsR0E2a0NBcEUsR0FBRSxXQUNNQSxFQUFFNFQsR0FBRzNPLFNBQVNpUCxNQUNkbFUsRUFBRTRULEdBQUczTyxTQUFTeVAsMEJBRXRCLEdBRUosT0EzeEVrQyxtQ0FRakMsQ0FaRCxFLG9DQ0pBLElBQUlxUyxFQUFhL2dCLE1BQVFBLEtBQUsrZ0IsV0FBYyxTQUFVQyxFQUFTQyxFQUFZQyxFQUFHQyxHQUUxRSxPQUFPLElBQUtELElBQU1BLEVBQUlFLFdBQVUsU0FBVUMsRUFBU0MsR0FDL0MsU0FBU0MsRUFBVTliLEdBQVMsSUFBTStiLEVBQUtMLEVBQVVNLEtBQUtoYyxHQUFTLENBQUUsTUFBT2pCLEdBQUs4YyxFQUFPOWMsRUFBSSxDQUFFLENBQzFGLFNBQVNrZCxFQUFTamMsR0FBUyxJQUFNK2IsRUFBS0wsRUFBaUIsTUFBRTFiLEdBQVMsQ0FBRSxNQUFPakIsR0FBSzhjLEVBQU85YyxFQUFJLENBQUUsQ0FDN0YsU0FBU2dkLEVBQUtHLEdBSmxCLElBQWVsYyxFQUlha2MsRUFBT0MsS0FBT1AsRUFBUU0sRUFBT2xjLFFBSjFDQSxFQUl5RGtjLEVBQU9sYyxNQUpoREEsYUFBaUJ5YixFQUFJemIsRUFBUSxJQUFJeWIsR0FBRSxTQUFVRyxHQUFXQSxFQUFRNWIsRUFBUSxLQUlqQm9jLEtBQUtOLEVBQVdHLEVBQVcsQ0FDN0dGLEdBQU1MLEVBQVlBLEVBQVUvZ0IsTUFBTTRnQixFQUFTQyxHQUFjLEtBQUtRLE9BQ2xFLEdBQ0osRUFDSUssRUFBbUI5aEIsTUFBUUEsS0FBSzhoQixpQkFBb0IsU0FBVTVRLEdBQzlELE9BQVFBLEdBQU9BLEVBQUk2USxXQUFjN1EsRUFBTSxDQUFFLFFBQVdBLEVBQ3hELEVBQ0E4USxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRXpjLE9BQU8sSUFDdEQsTUFBTTBjLEVBQVdMLEVBQWdCLEVBQVEsT0FDbkNNLEVBQW9CTixFQUFnQixFQUFRLE9BQ2xELEVBQVEsTUFDUixNQUFNTyxFQUFjLEVBQVEsTUFDdEJDLEVBQWMsRUFBUSxNQUN0QkMsRUFBa0IsRUFBUSxNQUMxQkMsRUFBbUIsRUFBUSxNQUMzQkMsRUFBUSxFQUFRLEtBQ2hCQyxFQUFXLEVBQVEsTUFDbkJDLEVBQWdCLEVBQVEsTUFDeEJDLEVBQTRCQyxPQUFPQyxRQUFRQyxPQUFPLGlDQUNsREMsRUFBd0IscUhBQ3hCQyxFQUFzQkosT0FBT0MsUUFBUUMsT0FBTywwQkFDNUNHLEVBQW9CTCxPQUFPQyxRQUFRQyxPQUFPLHdCQUMxQ0ksRUFBb0JOLE9BQU9DLFFBQVFDLE9BQU8sd0JBQzFDSyxFQUFrQlQsRUFBY1UsZUFBZUQsZ0JBQy9DRSxFQUFpQixzREFDdkIsSUFBSUMsRUFBZ0Isb0JBQ2hCQyxFQUFZLENBQUMsRUE4TGpCLFNBQVNDLElBQ0wsTUFBeUIsa0JBQWxCRixDQUNYLEVBL0xBLFdBQ1d4QyxFQUFVL2dCLFVBQU0sT0FBUSxHQUFRLFlBQ25DLElBQUk0UixFQUFJRCxFQUFJK1IsRUFBSUMsRUFDaEJILFFBQWtCWCxPQUFPZSxRQUFRQyxLQUFLaGYsSUFBSSxZQUNwQyxFQUFJd2QsRUFBWXlCLHFCQUFxQixDQUN2Q0MsaUJBQWlCLEVBQ2pCQyxtQkFBZ0QsYUFBNUIsRUFBSXZCLEVBQU13QixlQUF1RCxhQUF4QlQsRUFBVVUsVUFDdkVDLGNBQTBDLFFBQTFCdlMsRUFBSzRSLEVBQVVybkIsYUFBMEIsSUFBUHlWLEVBQWdCQSxFQUFLLFVBQ3ZFd1MsYUFBd0MsUUFBekJ6UyxFQUFLNlIsRUFBVWEsWUFBeUIsSUFBUDFTLEVBQWdCQSxFQUFLLFVBQ3JFMlMsZUFBZ0J6QixPQUFPQyxRQUFReUIsY0FBY0MsUUFDN0NDLFdBQTRDLFFBQS9CZixFQUFLRixFQUFVaUIsa0JBQStCLElBQVBmLEVBQWdCQSxFQUFLLFVBQ3pFZ0IsbUJBQW9CLEVBQUlyQyxFQUFZc0Msc0JBQ3BDQyxjQUEwRSxRQUExRGpCLEVBQUt2bUIsU0FBU21NLGdCQUFnQnNiLGFBQWEsaUJBQThCLElBQVBsQixFQUFnQkEsRUFBSyxVQUUzR0osRUFBZ0JDLEVBQVVELGVBQWlCLG9CQUN2Q0UsTUFDQSxFQUFJaEIsRUFBTXFDLGdCQUFnQixnQkFBaUIsVUFDM0MsRUFBSXJDLEVBQU1xQyxnQkFBZ0IsZUFBZ0IsV0FHMUMsRUFBSXJDLEVBQU1xQyxnQkFBZ0IsZ0JBQWlCLFNBQzNDLEVBQUlyQyxFQUFNcUMsZ0JBQWdCLGVBQWdCLFVBRTlDM0MsRUFBUzRDLFFBQVFuWCxHQUFHb1gsWUFBWXpZLFVBQVUwWSxjQUFlLEdBQ3pELEVBQUk5QyxFQUFTNEMsU0FBUyxjQUFjNWlCLE9BQU8sQ0FDdkNvRyxJQUFLLEVBQ0xELElBQUssSUFDTDRjLE1BQU9DLEdBQ1A5WCxLQUFNOFgsR0FDTjdxQixPQUFRNnFCLE1BRVosRUFBSWhELEVBQVM0QyxTQUFTSyxHQUFzQmpqQixPQUFPLENBQy9Db0csSUFBSyxFQUNMRCxJQUFLLElBQ0w0YyxNQUFPQyxHQUNQOVgsS0FBTThYLEdBQ043cUIsT0FBUTZxQixNQUVaLEVBQUloRCxFQUFTNEMsU0FBUyw0QkFBNEJDLFlBQVksQ0FDMURLLFdBQVksUUFDWkMsWUFBYSxRQUNiMWMsTUFBTyxHQUNQMmMsT0FBUSxHQUNSOWYsTUFBTyxRQUNQNkMsSUFBSyxJQUNMa2QsV0FBWSxHQUNaQyxLQUFNQyxHQUNOclksS0FBTXFZLEdBQ05wckIsT0FBUW9yQixLQUVadG9CLFNBQVN1b0IsY0FBYyxlQUFleG9CLE1BQU15b0IsT0FBUywwQkFDckQsRUFBSXpELEVBQVM0QyxTQUFTLG1DQUFtQzVpQixPQUFPLENBQzVEb0csSUFBSyxFQUNMRCxJQUFLLElBQ0x1ZCxPQUFPLEVBQ1BYLE1BQU9ZLEdBQ1B6WSxLQUFNeVksR0FDTnhyQixPQUFRd3JCLEdBQ1JDLE9BQVEsQ0FBQyxFQUFHLFFBRWhCLEVBQUk1RCxFQUFTNEMsU0FBUyxrQ0FBa0M1aUIsT0FBTyxDQUMzRG9HLElBQUssRUFDTEQsSUFBSyxJQUNMdWQsT0FBTyxFQUNQWCxNQUFPWSxHQUNQelksS0FBTXlZLEdBQ054ckIsT0FBUXdyQixHQUNSQyxPQUFRLENBQUMsRUFBRyxPQUVoQkMsR0FBc0JDLEVBQWEsS0FBTSxTQUN6Q0QsR0FBc0JFLEVBQVcsS0FBTSxTQUN2Q0QsRUFBWUUsaUJBQWlCLFFBQVNDLElBQ3RDRixFQUFVQyxpQkFBaUIsUUFBU0MsSUFDcEMsSUFBSUMsRUFBVzdoQixHQUFPcEgsU0FBU2twQixlQUFlOWhCLEVBQUVvRyxPQUFPMmIsUUFBUUMsT0FBT0MsWUFBY2ppQixFQUFFb0csT0FBT25GLE1BQzdGLElBQUssSUFBSXNELEtBQVMzTCxTQUFTc3BCLGlCQUFpQixpQ0FDeEMzZCxFQUFNb2QsaUJBQWlCLFFBQVNFLEdBQ2hDanBCLFNBQVNrcEIsZUFBZXZkLEVBQU13ZCxRQUFRQyxPQUFPQyxZQUFjMWQsRUFBTXRELE1BRXJFLElBQUssSUFBSXdMLEtBQUt1UixFQUFpQm1FLGVBQzNCQyxFQUFjOW5CLEtBQUttUyxFQUFFNFYsT0FDaEJwRCxLQUFhakIsRUFBaUJzRSxhQUFhQyxTQUFTOVYsRUFBRTRWLFFBRzNERyxFQUFVL1YsRUFBRTRWLE1BQVE1VixHQUV4QjRSLE9BQU9lLFFBQVFDLEtBQUtoZixJQUFJLENBQUMsUUFBUyxXQUFXa0MsSUFFekNBLEVBQUU1SyxNQUFRNEssRUFBRTVLLE9BQVNtbUIsRUFBWTJFLG1CQUNqQyxJQUFLLElBQUloVyxLQUFLbEssRUFBRW1nQixRQUFVLEdBQ3RCRixFQUFVL1YsRUFBRTRWLE1BQVE1VixFQUV4QixJQUFLLElBQUlBLEtBQUsrVixFQUFXLENBQ3JCLElBQUlHLEdBQVksRUFBSTFFLEVBQU1wbEIsZUFBZSxJQUFLLENBQUMsa0JBQW1CLGNBQWUsQ0FDN0VrcEIsUUFBUyxDQUNMcHFCLE1BQU84VSxHQUVYbVcsUUFBUzVpQixJQUNMLElBQUlvTixFQUFJRCxFQUNSMFYsR0FBV3BXLEdBQ1gsSUFBSyxJQUFJcVcsS0FBbUcsUUFBMUYzVixFQUF3QyxRQUFsQ0MsRUFBS3VWLEVBQVVJLHFCQUFrQyxJQUFQM1YsT0FBZ0IsRUFBU0EsRUFBRzRWLGdCQUE2QixJQUFQN1YsRUFBZ0JBLEVBQUssR0FDckkyVixFQUFLRyxVQUFVdGIsT0FBTyxVQUUxQmdiLEVBQVVNLFVBQVVDLElBQUksU0FBUyxHQUV0QyxFQUNDLEVBQUlqRixFQUFNcGxCLGVBQWUsT0FBUSxDQUFDLGNBQWUsQ0FDN0NvcEIsWUFBYXhWLEdBQUt1UixFQUFpQm1GLGVBQWVaLFNBQVM5VixHQUFLLGFBQWUsSUFDL0VzVixRQUFTLENBQ0xxQixRQUFTM1csR0FBS3VSLEVBQWlCbUYsZUFBZVosU0FBUzlWLEdBQUssYUFBZSxTQUluRjRXLEVBQVEsQ0FDUnBCLFlBQWEsUUFDYkYsUUFBUyxDQUNMcUIsUUFBUyxlQUViUixRQUFVNWlCLElBQ05BLEVBQUVzRyxrQkFDRmdkLEdBQWFDLEtBQUssZUFBZ0IsNENBQTRDOVcsS0FBTSxDQUFDLFFBQVMsV0FBVzFCLElBQzNGLFVBQU5BLEtBQ0EsRUFBSThTLEVBQVkyRixZQUFZLGVBQWdCLENBQ3hDNWIsR0FBSSxjQUNKck0sUUFBUyxhQUNUMEYsTUFBT3dMLEVBQ1BnWCxhQUFjLFVBQVVoWCxJQUN4QmlYLGFBQWMsUUFDZEMsWUFBYSxlQUVqQnRGLE9BQU9lLFFBQVFDLEtBQUtsZSxJQUFJLENBQUV4SixNQUFPOFUsSUFBSyxJQUFPbVgsU0FBU0MsS0FBTyxXQUFXOUUsTUFDNUUsR0FDRixHQUdOK0UsRUFBZSxDQUNmN0IsWUFBYSxPQUNiRixRQUFTLENBQ0xxQixRQUFTLGlCQUViUixRQUFTLElBQU9nQixTQUFTQyxLQUFPLFdBQVc5RSxLQUUvQyxTQUFTZ0YsRUFBbUJDLEdBQ3hCLE9BQU8sRUFBSS9GLEVBQU1wbEIsZUFBZSxJQUFLLENBQUMsaUJBQWtCLFFBQVMsY0FBZW1yQixFQUNwRixDQUNBLElBQUlDLEdBQWEsRUFBSWhHLEVBQU1wbEIsZUFBZSxNQUFPLENBQUMsVUFDbERvckIsRUFBV3RyQixNQUFNeUwsTUFBUSxRQUN6QnVlLEVBQVV1QixZQUFZRCxHQUN0QkEsRUFBV0MsWUFBWUgsRUFBbUJ0WCxHQUFLbEssRUFBRTVLLE1BQVFtc0IsRUFBZVQsSUFDeEUsSUFBSWMsRUFBY0osRUFBbUIsQ0FDakM5QixZQUFhLGVBQ2JGLFFBQVMsQ0FDTHFCLFFBQVMsNkJBR2pCZSxFQUFZeEMsaUJBQWlCLFNBQVMzaEIsSUFDbENva0IsR0FBcUIzWCxFQUFFLElBRTNCd1gsRUFBV0MsWUFBWUMsR0FDbEIvQixFQUFjRyxTQUFTOVYsS0FDeEJ3WCxFQUFXQyxZQUFZSCxFQUFtQixDQUN0QzlCLFlBQWEsU0FDYkYsUUFBUyxDQUFFcUIsUUFBUyxnQkFDcEJSLFFBQVM1aUIsSUFDTHFrQixHQUFZNVgsR0FDWnpNLEVBQUVzRyxpQkFBaUIsS0FHM0IyZCxFQUFXQyxZQUFZSCxFQUFtQixDQUN0QzlCLFlBQWEsT0FDYkYsUUFBUyxDQUFFcUIsUUFBUyxjQUNwQlIsUUFBUyxJQUFNMEIsR0FBVTdYLE9BR2pDOFgsR0FBV0wsWUFBWXZCLEVBQzNCLEVBQ2U3YSxNQUFNMGMsS0FBS0QsR0FBV3ZCLFVBQVV4bEIsTUFBS2luQixHQUFLQSxFQUFFMUMsUUFBUXBxQixPQUFTNEssRUFBRTVLLFNBQ2pFNHNCLEdBQVdHLG1CQUFtQmxlLFFBQzNDb1gsRUFBa0IyQyxRQUFRb0UsUUFBUUMsS0FBS2hzQixTQUFTc3BCLGlCQUFpQixlQUFnQixDQUM3RTJDLFlBQWEsRUFDYkMsV0FBWSxJQUNaQyxXQUFZLEVBQ1pDLFVBQVcsS0FFZixJQUFJQyxFQUFRcnNCLFNBQVNzcEIsaUJBQWlCLHFCQUN0Q3RFLEVBQWtCMkMsUUFBUTJFLHFCQUFxQk4sS0FBS0ssRUFBTyxDQUFFRSxVQUFXLE9BQVFDLGNBQWMsR0FBUSxHQUU5RyxHQUNKLENBQ0ExYixHQUlBLElBQUk4WSxFQUFZLENBQUMsRUFDYkosRUFBZ0IsR0FDaEJpRCxPQUFrQjV2QixFQUNsQjZ2QixFQUFZMXNCLFNBQVNrcEIsZUFBZSxjQUNwQ3lELEVBQVczc0IsU0FBU2twQixlQUFlLGFBTW5DMEQsR0FMb0I1c0IsU0FBU2twQixlQUFlLHVCQUN0QmxwQixTQUFTa3BCLGVBQWUseUJBQ3ZCbHBCLFNBQVNrcEIsZUFBZSwwQkFDNUJscEIsU0FBU2twQixlQUFlLHNCQUMxQmxwQixTQUFTa3BCLGVBQWUsb0JBQ2hCbHBCLFNBQVNrcEIsZUFBZSw4QkFDakQyRCxFQUFxQjdzQixTQUFTa3BCLGVBQWUsd0JBQzdDNEQsRUFBcUI5c0IsU0FBU2twQixlQUFlLHlCQUM3QzZELEVBQW9CL3NCLFNBQVNrcEIsZUFBZSx3QkFDNUM4RCxFQUFpQmh0QixTQUFTa3BCLGVBQWUsb0JBQ3pDK0QsRUFBbUJqdEIsU0FBU2twQixlQUFlLHNCQUMzQ2dFLEVBQWtCbHRCLFNBQVNrcEIsZUFBZSxxQkFDMUNKLEVBQVk5b0IsU0FBU2twQixlQUFlLGNBQ3BDTCxFQUFjN29CLFNBQVNrcEIsZUFBZSxnQkFDdENpRSxFQUFnQm50QixTQUFTa3BCLGVBQWUsbUJBQ3hDa0UsRUFBbUJwdEIsU0FBU2twQixlQUFlLHNCQUMzQ21FLEVBQW9CcnRCLFNBQVNrcEIsZUFBZSx1QkFDNUNvRSxFQUEwQnR0QixTQUFTa3BCLGVBQWUsOEJBQ2xEcUUsRUFBMkJ2dEIsU0FBU2twQixlQUFlLCtCQUNuRHNFLEVBQXlCeHRCLFNBQVNrcEIsZUFBZSw2QkFDakR1RSxFQUFnQ3p0QixTQUFTa3BCLGVBQWUsb0NBQ3hEd0UsRUFBK0IxdEIsU0FBU2twQixlQUFlLG1DQUN2RHlFLEVBQWdDM3RCLFNBQVNrcEIsZUFBZSxxQ0FDeEQwRSxFQUF1QzV0QixTQUFTa3BCLGVBQWUsNENBQy9EMkUsRUFBc0M3dEIsU0FBU2twQixlQUFlLDJDQUM5RDRFLEVBQXVCOXRCLFNBQVNrcEIsZUFBZSwyQkFDL0NsQixFQUF1QmhvQixTQUFTa3BCLGVBQWUsMkJBQy9DNkUsRUFBeUIvdEIsU0FBU2twQixlQUFlLDZCQUNqRDhFLEVBQThCaHVCLFNBQVNrcEIsZUFBZSxrQ0FDdEQrRSxFQUE4Qmp1QixTQUFTa3BCLGVBQWUsa0NBQ3REZ0YsR0FBNkJsdUIsU0FBU2twQixlQUFlLGlDQUNyRGlGLEdBQTZCbnVCLFNBQVNrcEIsZUFBZSxpQ0FDckRrRixHQUEyQnB1QixTQUFTa3BCLGVBQWUsK0JBQ25EbUYsR0FBa0NydUIsU0FBU2twQixlQUFlLHNDQUMxRG9GLEdBQWlDdHVCLFNBQVNrcEIsZUFBZSxxQ0FDekRxRixHQUF1QnZ1QixTQUFTa3BCLGVBQWUsMkJBQy9Dc0YsR0FBOEJ4dUIsU0FBU2twQixlQUFlLGtDQUN0RHVGLEdBQTZCenVCLFNBQVNrcEIsZUFBZSxpQ0FDckR3RixHQUFrQjF1QixTQUFTa3BCLGVBQWUscUJBQzFDeUYsR0FBbUIzdUIsU0FBU2twQixlQUFlLHNCQUMzQzBGLEdBQWlCNXVCLFNBQVNrcEIsZUFBZSxtQkFDekN5QyxHQUFhM3JCLFNBQVNrcEIsZUFBZSxlQUNyQzJGLEdBQW9CN3VCLFNBQVNrcEIsZUFBZSx1QkFDNUM0RixHQUFxQjl1QixTQUFTa3BCLGVBQWUsd0JBQzdDNkYsR0FBVy91QixTQUFTa3BCLGVBQWUsYUFDbkM4RixHQUFXaHZCLFNBQVNrcEIsZUFBZSxhQUduQytGLElBRldqdkIsU0FBU2twQixlQUFlLGFBRW5CbHBCLFNBQVNrcEIsZUFBZSxvQkFDOUJscEIsU0FBU2twQixlQUFlLFlBQzlCSCxpQkFBaUIsUUFBU21HLElBQ2xDLElBQUlDLEdBQWVudkIsU0FBU2twQixlQUFlLGtCQUMzQ2lHLEdBQWFwRyxpQkFBaUIsUUFBU3FHLElBQ3RCcHZCLFNBQVNrcEIsZUFBZSxlQUM5QkgsaUJBQWlCLFNBQVMzaEIsR0FBS2lvQixPQUNwQnJ2QixTQUFTa3BCLGVBQWUscUJBQzlCSCxpQkFBaUIsU0FBUzNoQixHQUFLaW9CLElBQWEsS0FDeENydkIsU0FBU2twQixlQUFlLGtCQUM5QkgsaUJBQWlCLFNBQVMzaEIsR0FBS3NqQixHQUFhQyxLQUFLLG1CQUFvQix3RkFBeUYsQ0FBQyxVQUFXLFdBQVd4WSxHQUFXLFlBQU5BLEdBQW1CNlksU0FBU3NFLGFBQ2xOdHZCLFNBQVNrcEIsZUFBZSxnQkFDOUJILGlCQUFpQixTQUFTM2hCLElBQU9tb0IsT0FBaUJ2RSxTQUFTQyxLQUFPLFdBQVc5RSxNQUNyRnVFLEdBQWFDLEtBQUssbUJBQW9CLDZGQUE4RixDQUFDLFVBQVcsV0FBV3hZLEdBQVcsWUFBTkEsSUFBb0I2WSxTQUFTQyxLQUFPLFdBQVc5RSxTQUM5TG5tQixTQUFTa3BCLGVBQWUsbUJBQzlCSCxpQkFBaUIsU0FBUzNoQixHQUFLb29CLEdBQWM3RSxTQUN6QzNxQixTQUFTa3BCLGVBQWUsaUJBQzlCSCxpQkFBaUIsU0FBUzNoQixJQWdrQ25DcW9CLEdBQVk5RSxLQUFLLGVBQWdCLHdCQUF5QixDQUFDLFNBQVUsV0FBVyxDQUFDeGhCLEVBQVExQyxLQUNyRixHQUFlLFdBQVgwQyxFQUNBLElBRUl1bUIsR0FEUUMsS0FBS0MsTUFBTW5wQixJQUVuQm9wQixJQUFVLEdBQU8sRUFDckIsQ0FDQSxNQUFPcmIsR0FDSGtXLEdBQWFDLEtBQUssd0JBQXlCbUYsR0FBT2p2QixPQUFTLEVBQUlpdkIsR0FBT3p2QixPQUFTLHFDQUFzQyxDQUFDLE1BQzFILENBQ0osR0FDRCxlQTNrQ2tELElBQ3pELElBQUkwdkIsR0FBd0IvdkIsU0FBU2twQixlQUFlLDRCQUNwRDZHLFVBQThFQSxHQUFzQmhILGlCQUFpQixTQUFTM2hCLEdBQUtza0IsR0FBVSw2QkFBOEIsbUJBQzNLLElBQUlzRSxHQUF5Qmh3QixTQUFTa3BCLGVBQWUsNkJBQ3JEOEcsVUFBZ0ZBLEdBQXVCakgsaUJBQWlCLFNBQVMzaEIsR0FBS3NrQixHQUFVLDhCQUErQixvQkFDL0ssSUFBSXVFLEdBQTJCandCLFNBQVNrcEIsZUFBZSwrQkFDdkQrRyxVQUFvRkEsR0FBeUJsSCxpQkFBaUIsU0FBUzNoQixHQUFLc2tCLEdBQVUsaUJBQWtCLHNCQUN6STFyQixTQUFTa3BCLGVBQWUsK0JBQzlCSCxpQkFBaUIsU0FBUzNoQixHQUFLc2tCLEdBQVUsaUJBQWtCLHNCQUNoRTFyQixTQUFTa3BCLGVBQWUsa0JBQzFCbHBCLFNBQVNrcEIsZUFBZSxnQkFEMUMsSUFFSWdILEdBQWNsd0IsU0FBU2twQixlQUFlLGdCQUN0Q2lILEdBQXVCLEtBQ3ZCQyxHQUFlcHdCLFNBQVNrcEIsZUFBZSxpQkFDM0NrSCxHQUFhckgsaUJBQWlCLFNBQVMzaEIsSUFBSyxFQUFJNmQsRUFBWTJGLFlBQVksaUJBQWtCLENBQ3RGNWIsR0FBSSxnQkFDSnJNLFFBQVMsZUFDVDBGLE1BQU8rbkIsR0FBYUMsUUFBUS91QixXQUM1QnVwQixhQUFjLGdCQUNkQyxhQUFjc0YsR0FBYUMsUUFBUS91QixXQUNuQ3lwQixZQUFhLG1CQUVqQixJQUFJdUYsR0FBZ0J0d0IsU0FBU2twQixlQUFlLGtCQUN4Q3FILEdBQTBCdndCLFNBQVNrcEIsZUFBZSw4QkFDbERzSCxHQUF3Qnh3QixTQUFTa3BCLGVBQWUsNEJBQ2hEdUgsR0FBcUJ6d0IsU0FBU2twQixlQUFlLHdCQUM3Q3dILEdBQWUxd0IsU0FBU2twQixlQUFlLGlCQUNyQmxwQixTQUFTa3BCLGVBQWUscUJBQzlCSCxpQkFBaUIsU0FBUzNoQixJQUN0Q0EsRUFBRXNHLGtCQUNGZ2pCLEdBQWFyRyxVQUFVQyxJQUFJLFVBQzNCNEYsR0FBWTdGLFVBQVV0YixPQUFPLFdBQzdCLEVBQUlrVyxFQUFZMkYsWUFBWSxlQUFnQixDQUN4QzViLEdBQUksc0JBQ0pyTSxRQUFTLGVBQ1Rrb0IsYUFBYyxvQkFDZEMsYUFBYyxRQUNkQyxZQUFhLGdCQUNmLElBRW1CL3FCLFNBQVNrcEIsZUFBZSx3QkFDOUJILGlCQUFpQixTQUFTM2hCLElBQ3pDQSxFQUFFc0csa0JBQ0ZnakIsR0FBYXJHLFVBQVU1aEIsT0FBTyxVQUM5QnluQixHQUFZN0YsVUFBVTVoQixPQUFPLFdBQzdCLEVBQUl3YyxFQUFZMkYsWUFBWSxlQUFnQixDQUN4QzViLEdBQUksdUJBQ0pyTSxRQUFTLGVBQ1Rrb0IsYUFBYyx1QkFDZEMsYUFBYyxRQUNkQyxZQUFhLGdCQUNmLElBRU4sTUFBTTRGLEdBQ0Ysa0JBQVdDLEdBQ1AsT0FBTzV3QixTQUFTa3BCLGVBQWUsUUFDbkMsQ0FDQSw0QkFBVzJILEdBQ1AsT0FBTzd3QixTQUFTa3BCLGVBQWUsZ0JBQ25DLENBQ0EsNEJBQVc0SCxHQUNQLE9BQU85d0IsU0FBU2twQixlQUFlLGdCQUNuQyxDQU9BLFdBQU95QixDQUFLb0csRUFBU0MsRUFBVSxDQUFDLE1BQU9DLEdBQ25DTixHQUFpQkUsa0JBQWtCSyxVQUFZLEdBQy9DUCxHQUFpQkcsa0JBQWtCSSxVQUFZLEdBQy9DLElBQUlDLEVBQVcsS0FDZlIsR0FBaUJFLGtCQUFrQnZGLFlBQVl5RixHQUMvQyxJQUFLLElBQUk1ZSxLQUFLNmUsRUFDVkwsR0FBaUJHLGtCQUFrQnhGLGFBQVksRUFBSWpHLEVBQU1wbEIsZUFBZSxJQUFLLENBQUMsY0FBZSxlQUFnQixhQUFjLFlBQWEsQ0FDcElvcEIsWUFBYWxYLEVBQ2I2WCxRQUFTNWlCLEtBQ0wsRUFBSTZkLEVBQVkyRixZQUFZLGVBQWdCLENBQ3hDNWIsR0FBSSxlQUNKck0sUUFBUyxlQUNUMEYsTUFBTzhKLEVBQ1AwWSxhQUFjLGVBQ2RDLGFBQWMzWSxFQUNkNFksWUFBYSxpQkFFakJvRyxFQUFXaGYsQ0FBQyxLQUlQNlMsRUFBa0IyQyxRQUFReUosTUFBTXBGLEtBQUsyRSxHQUFpQkMsUUFBUyxDQUM1RVMsV0FBWSxJQUFNSixHQUFZQSxFQUFTRSxLQUVoQ3hHLE1BQ2YsRUFFSixNQUFNOEUsR0FRRixXQUFPOUUsQ0FBSzJHLEVBQU9DLEVBQWFQLEVBQVNDLEVBQVV0eUIsR0FDL0MsSUFBSW95QixFQUFVUyxHQUFjLG9DQUVsQkYsbUlBRWlFM3lCLHNFQUM5QjR5QiwyREFJN0NaLEdBQWlCaEcsS0FBS29HLEVBQVNDLEdBQVM3bkIsR0FBVThuQixFQUFTOW5CLEVBQVFuSixTQUFTa3BCLGVBQWUseUJBQXlCN2dCLFFBQ3hILEVBRUosTUFBTXFpQixHQVFGLFdBQU9DLENBQUsyRyxFQUFPN3FCLEVBQU11cUIsRUFBU0MsR0FDOUIsSUFBSUYsRUFBVVMsR0FBYyxvQ0FFbEJGLDBCQUNEN3FCLG1DQUdUa3FCLEdBQWlCaEcsS0FBS29HLEVBQVNDLEVBQVNDLEVBQzVDLEVBRUosTUFBTXpCLEdBSUYsV0FBTzdFLEdBQ0gsSUFBSW9HLEVBQVVTLEdBQWMsbU1BUTVCYixHQUFpQmhHLEtBQUtvRyxFQUFTLENBQUMsU0FBVSxTQUFTNW5CLElBTy9DLEdBRVIsRUFFSixJQUFJc29CLFFBQWdCNTBCLEVBQ3BCLElBQUk2MEIsR0FBVyxHQUNYNUIsR0FBUyxHQUNUL3dCLEdBQVEsS0FDWixJQUFJNHlCLEdBQVMzeEIsU0FBU2twQixlQUFlLGVBQ3JDeUksR0FBTzVJLGlCQUFpQixRQUFTNkksSUFDakNELEdBQU81SSxpQkFBaUIsU0FBUzNoQixJQUM3QixHQUFJbW9CLEtBQWMsQ0FDZG5vQixFQUFFdUcsaUJBQ0Z2RyxFQUFFc0csa0JBQ0YsSUFBSW1HLEVBQUl6TSxFQUFFeXFCLGNBQWNDLFFBQVEsUUFDaENILEdBQU90cEIsTUFBUXdMLEVBQ2YrZCxJQUNKLEtBRUosSUFBSyxJQUFJeHFCLEtBQUtwSCxTQUFTc3BCLGlCQUFpQiwrQkFDcENsaUIsRUFBRTJoQixpQkFBaUIsU0FBUyxTQUFVcmdCLEdBQ2xDcXBCLElBQ0osSUFFUS9NLEVBQWtCMkMsUUFBUXFLLEtBQUtoRyxLQUFLaHNCLFNBQVN1b0IsY0FBYyxTQUFVLENBQzdFMEosT0FBUSxTQUFVQyxHQUNHLGVBQWJBLEVBQU9sakIsR0FDUDRmLEdBQWV2RSxVQUFVQyxJQUFJLHlCQUc3QnNFLEdBQWV2RSxVQUFVdGIsT0FBTyx3QkFFeEMsSUFSSixJQVVJc2QsR0FBUXJzQixTQUFTc3BCLGlCQUFpQixxQkFxQnRDLFNBQVNzSSxLQUNMbEMsR0FneUJKLFNBQXlCOXZCLEdBRXJCLElBQ0ksSUFBSW1DLEVBQUk0dEIsS0FBS0MsTUFBTWh3QixHQUNuQixTQUFnQm1DLGFBSG9CNmlCLFNBR2Y3aUIsQ0FDekIsQ0FDQSxNQUFPcUYsR0FDSCxPQUFPLENBQ1gsQ0FDSixDQXp5Qm9CK3FCLENBQWdCUixHQUFPdHBCLE9BQzNDLENBS0EsU0FBU3FuQixHQUFnQjBDLEdBQ3JCdEMsR0FBUyxHQUNUNEIsR0FBVyxHQXVDZixTQUFxQjdkLEdBQ2pCLElBQUlXLEVBQUlELEVBQUkrUixFQUFJQyxFQUFJOEwsRUFBSUMsRUFBSWhlLEVBQUlpZSxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJQyxFQUFJemUsRUFBSTBlLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQUlDLEVBQ3hHLEdBQUszZixFQUFMLENBS0EsT0FGQTZZLEVBQVVya0IsTUFBUXdMLEVBQUU0VixLQUNwQlgsRUFBVXpnQixNQUFRLEdBQ1EsUUFBakJtTSxFQUFLWCxFQUFFNGYsWUFBeUIsSUFBUGpmLE9BQWdCLEVBQVNBLEVBQUdrZixRQUMxRCxJQUFLLGlCQUNEOUcsRUFBdUJoZixRQUN2QixNQUNKLElBQUssaUJBQ0RpZixFQUFtQmpmLFFBQ25CLE1BQ0osSUFBSyxlQUNEb2YsRUFBZXBmLFFBQ2YsTUFDSixJQUFLLGFBQ0RtZixFQUFrQm5mLFFBQ2xCLE1BQ0osSUFBSyxhQUNEa2YsRUFBbUJsZixRQUNuQixNQUNKLElBQUssVUFDRHFmLEVBQWlCcmYsUUFDakIsTUFDSixRQUNJa2IsRUFBVXpnQixNQUE2RSxRQUFwRWllLEVBQXVCLFFBQWpCL1IsRUFBS1YsRUFBRTRmLFlBQXlCLElBQVBsZixPQUFnQixFQUFTQSxFQUFHb2YsV0FBd0IsSUFBUHJOLEVBQWdCQSxFQUFLLEdBQ3BINEcsRUFBZ0J0ZixRQW1CeEIsSUFoQkEsRUFBSW1YLEVBQVM0QyxTQUFTZ0YsR0FBVTVuQixPQUFPLFFBQVM4TyxFQUFFeFcsTUFBTTJZLEtBQU8sS0FDL0R3WCxFQUF1QjZDLFNBQVUsRUFDakN2QyxFQUFxQnpsQixNQUFRLE1BQzdCLEVBQUkwYyxFQUFTNEMsU0FBUzRHLElBQXNCM0csWUFBWSxXQUFZLFNBQ3BFd0csR0FBeUJpQyxTQUFVLEdBQ25DLEVBQUl0TCxFQUFTNEMsU0FBU0ssR0FBc0JqakIsT0FBTyxRQUFTLEtBQzVEMG9CLEVBQThCNEMsU0FBVSxFQUN4Q3JDLEVBQTRCM2xCLE1BQVEsTUFDcEMsRUFBSTBjLEVBQVM0QyxTQUFTNkcsSUFBNkJ6cEIsT0FBTyxTQUFVLENBQUMsRUFBRyxNQUN4RXNwQixHQUFnQ2dDLFNBQVUsRUFDMUNwQyxFQUE0QjVsQixNQUFRLEtBQ3BDcWxCLEVBQTZCMkMsU0FBVSxFQUN2Q25DLEdBQTJCN2xCLE1BQVEsTUFDbkMsRUFBSTBjLEVBQVM0QyxTQUFTOEcsSUFBNEIxcEIsT0FBTyxTQUFVLENBQUMsRUFBRyxNQUN2RXVwQixHQUErQitCLFNBQVUsRUFDekNsQyxHQUEyQjlsQixNQUFRLEtBQy9Cd0wsRUFBRXhXLE1BQU0yWSxLQUF1QixJQUFoQm5DLEVBQUV4VyxNQUFNMlksSUFDdkJtWCxFQUFjdmYsYUFFYixHQUFJaUcsRUFBRXhXLE1BQU11MkIsT0FBUSxDQUNyQixJQUFJbHNCLEVBQU0sQ0FDTix1QkFBd0IsVUFDeEIsMEJBQTJCLGFBQzNCLHlCQUEwQixRQUMxQixzQkFBdUIsU0FDdkIsb0JBQXFCLFFBRXpCa2QsT0FBT2lQLEtBQUtuc0IsR0FBS0EsS0FBSW1rQixJQUFLLEVBQUk5RyxFQUFTNEMsU0FBU2tFLEdBQUdocUIsU0FBUyxNQUFPZ1MsRUFBRXhXLE1BQU11MkIsT0FBT2xzQixFQUFJbWtCLE9BQ3RGdUIsRUFBaUJ4ZixPQUNyQixNQUNLLEdBQUlpRyxFQUFFeFcsTUFBTXkyQixRQUFTLENBS3RCLEdBSkF6RyxFQUFrQnpmLFdBQ29CLFFBQTlCMlksRUFBSzFTLEVBQUV4VyxNQUFNeTJCLFFBQVE5ZCxXQUF3QixJQUFQdVEsT0FBZ0IsRUFBU0EsRUFBR3dOLFdBQWF2RyxFQUF1QjZDLFNBQzFHN0MsRUFBdUI1ZixRQUVRLFFBQTlCeWtCLEVBQUt4ZSxFQUFFeFcsTUFBTXkyQixRQUFROWQsV0FBd0IsSUFBUHFjLE9BQWdCLEVBQVNBLEVBQUcwQixRQUFTLENBQzVFakcsRUFBcUJ6bEIsTUFBUXdMLEVBQUV4VyxNQUFNeTJCLFFBQVE5ZCxJQUFJK2QsUUFBUUMsTUFBTTF5QixZQUMvRCxFQUFJeWpCLEVBQVM0QyxTQUFTSyxHQUFzQmpqQixPQUFPLFFBQVM4TyxFQUFFeFcsTUFBTXkyQixRQUFROWQsSUFBSStkLFFBQVE1MEIsVUFDbEYwVSxFQUFFeFcsTUFBTXkyQixRQUFROWQsSUFBSStkLFFBQVFFLFlBQWM3RixHQUF5QmlDLFNBQ3JFakMsR0FBeUJ4Z0IsUUFFN0IsSUFBSXpNLEVBQUkwUyxFQUFFeFcsTUFBTXkyQixRQUFROWQsSUFBSStkLFFBQVE1b0IsSUFJOUIwSSxFQUFFeFcsTUFBTXkyQixRQUFROWQsSUFBSStkLFFBQVE1b0IsSUFDNUIsRUFDRitvQixFQUFJcmdCLEVBQUV4VyxNQUFNeTJCLFFBQVE5ZCxJQUFJK2QsUUFBUTdvQixLQUNoQzJJLEVBQUV4VyxNQUFNeTJCLFFBQVE5ZCxJQUFJK2QsUUFBUTdvQixLQUFPLEdBQ25DMkksRUFBRXhXLE1BQU15MkIsUUFBUTlkLElBQUkrZCxRQUFRN29CLEtBQU8sSUFDakMySSxFQUFFeFcsTUFBTXkyQixRQUFROWQsSUFBSStkLFFBQVE3b0IsSUFDNUIsS0FDTixFQUFJNlosRUFBUzRDLFNBQVM0RyxJQUFzQjNHLFlBQVksV0FBWSxHQUFHem1CLEtBQUsreUIsSUFDaEYsTUFFSSxFQUFJblAsRUFBUzRDLFNBQVNLLEdBQXNCampCLE9BQU8sUUFBNkYsUUFBbkZ1UCxFQUFvQyxRQUE5QmdlLEVBQUt6ZSxFQUFFeFcsTUFBTXkyQixRQUFROWQsV0FBd0IsSUFBUHNjLE9BQWdCLEVBQVNBLEVBQUdqcUIsYUFBMEIsSUFBUGlNLEVBQWdCQSxFQUFLLE1BRXBJLFFBQXJDaWUsRUFBSzFlLEVBQUV4VyxNQUFNeTJCLFFBQVFLLGtCQUErQixJQUFQNUIsT0FBZ0IsRUFBU0EsRUFBR3dCLFdBQWF0RyxFQUE4QjRDLFNBQ3hINUMsRUFBOEI3ZixTQUVRLFFBQXJDNGtCLEVBQUszZSxFQUFFeFcsTUFBTXkyQixRQUFRSyxrQkFBK0IsSUFBUDNCLE9BQWdCLEVBQVNBLEVBQUd1QixVQUMxRS9GLEVBQTRCM2xCLE1BQVF3TCxFQUFFeFcsTUFBTXkyQixRQUFRSyxXQUFXSixRQUFRQyxNQUFNMXlCLFdBQzdFMnNCLEVBQTRCNWxCLE1BQ3hCd0wsRUFBRXhXLE1BQU15MkIsUUFBUUssV0FBV0osUUFBUTUwQixPQUFPbUMsYUFDeEN1UyxFQUFFeFcsTUFBTXkyQixRQUFRSyxXQUFXSixRQUFRRSxZQUNyQzVGLEdBQWdDZ0MsU0FDaENoQyxHQUFnQ3pnQixTQUVwQyxFQUFJbVgsRUFBUzRDLFNBQVM2RyxJQUE2QnpwQixPQUFPLFNBQVUsQ0FDaEU4TyxFQUFFeFcsTUFBTXkyQixRQUFRSyxXQUFXSixRQUFRNW9CLEtBQy9CMEksRUFBRXhXLE1BQU15MkIsUUFBUUssV0FBV0osUUFBUTVvQixJQUFNMEksRUFBRXhXLE1BQU15MkIsUUFBUUssV0FBV0osUUFBUTdvQixLQUM1RTJJLEVBQUV4VyxNQUFNeTJCLFFBQVFLLFdBQVdKLFFBQVE1b0IsS0FBTyxHQUMxQzBJLEVBQUV4VyxNQUFNeTJCLFFBQVFLLFdBQVdKLFFBQVE1b0IsS0FBTyxJQUN4QzBJLEVBQUV4VyxNQUFNeTJCLFFBQVFLLFdBQVdKLFFBQVE1b0IsSUFDbkMsRUFDTjBJLEVBQUV4VyxNQUFNeTJCLFFBQVFLLFdBQVdKLFFBQVE3b0IsS0FDL0IySSxFQUFFeFcsTUFBTXkyQixRQUFRSyxXQUFXSixRQUFRN29CLElBQU0ySSxFQUFFeFcsTUFBTXkyQixRQUFRSyxXQUFXSixRQUFRNW9CLEtBQzVFMEksRUFBRXhXLE1BQU15MkIsUUFBUUssV0FBV0osUUFBUTdvQixLQUFPLEdBQzFDMkksRUFBRXhXLE1BQU15MkIsUUFBUUssV0FBV0osUUFBUTdvQixLQUFPLElBQ3hDMkksRUFBRXhXLE1BQU15MkIsUUFBUUssV0FBV0osUUFBUTdvQixJQUNuQyxPQUlWK2lCLEVBQTRCNWxCLE1BQzZILFFBQXBKc3FCLEVBQWdHLFFBQTFGRCxFQUEyQyxRQUFyQ0QsRUFBSzVlLEVBQUV4VyxNQUFNeTJCLFFBQVFLLGtCQUErQixJQUFQMUIsT0FBZ0IsRUFBU0EsRUFBR3BxQixhQUEwQixJQUFQcXFCLE9BQWdCLEVBQVNBLEVBQUdweEIsa0JBQStCLElBQVBxeEIsRUFBZ0JBLEVBQUssT0FFOUksUUFBcENDLEVBQUsvZSxFQUFFeFcsTUFBTXkyQixRQUFRTSxpQkFBOEIsSUFBUHhCLE9BQWdCLEVBQVNBLEVBQUdtQixXQUFhckcsRUFBNkIyQyxTQUN0SDNDLEVBQTZCOWYsU0FFUSxRQUFwQ2lsQixFQUFLaGYsRUFBRXhXLE1BQU15MkIsUUFBUU0saUJBQThCLElBQVB2QixPQUFnQixFQUFTQSxFQUFHa0IsVUFDekU3RixHQUEyQjdsQixNQUFRd0wsRUFBRXhXLE1BQU15MkIsUUFBUU0sVUFBVUwsUUFBUUMsTUFBTTF5QixXQUMzRTZzQixHQUEyQjlsQixNQUFRd0wsRUFBRXhXLE1BQU15MkIsUUFBUU0sVUFBVUwsUUFBUTUwQixPQUFPbUMsYUFDdEV1UyxFQUFFeFcsTUFBTXkyQixRQUFRTSxVQUFVTCxRQUFRRSxZQUNwQzNGLEdBQStCK0IsU0FDL0IvQixHQUErQjFnQixTQUVuQyxFQUFJbVgsRUFBUzRDLFNBQVM4RyxJQUE0QjFwQixPQUFPLFNBQVUsQ0FDL0Q4TyxFQUFFeFcsTUFBTXkyQixRQUFRTSxVQUFVTCxRQUFRNW9CLEtBQzlCMEksRUFBRXhXLE1BQU15MkIsUUFBUU0sVUFBVUwsUUFBUTVvQixJQUFNMEksRUFBRXhXLE1BQU15MkIsUUFBUU0sVUFBVUwsUUFBUTdvQixLQUMxRTJJLEVBQUV4VyxNQUFNeTJCLFFBQVFNLFVBQVVMLFFBQVE1b0IsS0FBTyxHQUN6QzBJLEVBQUV4VyxNQUFNeTJCLFFBQVFNLFVBQVVMLFFBQVE1b0IsS0FBTyxJQUN2QzBJLEVBQUV4VyxNQUFNeTJCLFFBQVFNLFVBQVVMLFFBQVE1b0IsSUFDbEMsRUFDTjBJLEVBQUV4VyxNQUFNeTJCLFFBQVFNLFVBQVVMLFFBQVE3b0IsS0FDOUIySSxFQUFFeFcsTUFBTXkyQixRQUFRTSxVQUFVTCxRQUFRN29CLElBQU0ySSxFQUFFeFcsTUFBTXkyQixRQUFRTSxVQUFVTCxRQUFRNW9CLEtBQzFFMEksRUFBRXhXLE1BQU15MkIsUUFBUU0sVUFBVUwsUUFBUTdvQixLQUFPLEdBQ3pDMkksRUFBRXhXLE1BQU15MkIsUUFBUU0sVUFBVUwsUUFBUTdvQixLQUFPLElBQ3ZDMkksRUFBRXhXLE1BQU15MkIsUUFBUU0sVUFBVUwsUUFBUTdvQixJQUNsQyxPQUlWaWpCLEdBQTJCOWxCLE1BQTRKLFFBQW5KMHFCLEVBQStGLFFBQXpGMWUsRUFBMEMsUUFBcEN5ZSxFQUFLamYsRUFBRXhXLE1BQU15MkIsUUFBUU0saUJBQThCLElBQVB0QixPQUFnQixFQUFTQSxFQUFHenFCLGFBQTBCLElBQVBnTSxPQUFnQixFQUFTQSxFQUFHL1Msa0JBQStCLElBQVB5eEIsRUFBZ0JBLEVBQUssR0FFNU4sQ0FDSWxmLEVBQUV4VyxNQUFNZzNCLFFBQ1JqRSxHQUFhQyxTQUFVLEVBQ3ZCekwsT0FBT2lQLEtBQUtTLElBQWdCNXNCLEtBQUlta0IsSUFDNUIsSUFBSXJYLEVBQ0osSUFBSStmLEVBQWUxZ0IsRUFBRXhXLE1BQU1nM0IsT0FBT0MsR0FBZXpJLEdBQUcsS0FDcEQsRUFBSTlHLEVBQVM0QyxTQUFTa0UsR0FBR2hxQixTQUFTLE1BQWlILFFBQXpHMlMsRUFBSytmLGFBQW1ELEVBQVNBLEVBQWFELEdBQWV6SSxHQUFHLFdBQXdCLElBQVByWCxFQUFnQkEsRUFBSyxVQUFVLElBRTlMK2IsR0FBd0Jsb0IsTUFBZ0ssUUFBdko2cUIsRUFBbUcsUUFBN0ZELEVBQXVDLFFBQWpDRCxFQUFLbmYsRUFBRXhXLE1BQU1nM0IsT0FBT0csZUFBNEIsSUFBUHhCLE9BQWdCLEVBQVNBLEVBQUd5QixvQkFBaUMsSUFBUHhCLE9BQWdCLEVBQVNBLEVBQUczeEIsa0JBQStCLElBQVA0eEIsRUFBZ0JBLEVBQUssSUFDck4xQyxHQUFzQm5vQixNQUE4SixRQUFySmdyQixFQUFpRyxRQUEzRkQsRUFBdUMsUUFBakNELEVBQUt0ZixFQUFFeFcsTUFBTWczQixPQUFPRyxlQUE0QixJQUFQckIsT0FBZ0IsRUFBU0EsRUFBR3VCLGtCQUErQixJQUFQdEIsT0FBZ0IsRUFBU0EsRUFBRzl4QixrQkFBK0IsSUFBUCt4QixFQUFnQkEsRUFBSyxJQUNqTjVDLEdBQW1CcG9CLE1BQTJKLFFBQWxKbXJCLEVBQThGLFFBQXhGRCxFQUF1QyxRQUFqQ0QsRUFBS3pmLEVBQUV4VyxNQUFNZzNCLE9BQU9HLGVBQTRCLElBQVBsQixPQUFnQixFQUFTQSxFQUFHcUIsZUFBNEIsSUFBUHBCLE9BQWdCLEVBQVNBLEVBQUdqeUIsa0JBQStCLElBQVBreUIsRUFBZ0JBLEVBQUssS0FHM01wRCxHQUFhQyxTQUFVLEVBRTNCLElBQUssSUFBSXVFLEtBQU01MEIsU0FBU3NwQixpQkFBaUIsaUNBQ3JDdHBCLFNBQVNrcEIsZUFBZTBMLEVBQUd6TCxRQUFRQyxPQUFPQyxZQUFjdUwsRUFBR3ZzQixNQUUvRCxJQUFLLElBQUl1c0IsSUFBTSxDQUFDcEcsR0FBNkJDLElBQ3pDenVCLFNBQVNrcEIsZUFBZTBMLEVBQUc1bEIsR0FBSyxZQUFZcWEsWUFBYyxJQUFHLEVBQUl0RSxFQUFTNEMsU0FBU2lOLEdBQUk3dkIsT0FBTyxVQUFVLFNBQVEsRUFBSWdnQixFQUFTNEMsU0FBU2lOLEdBQUk3dkIsT0FBTyxVQUFVLEtBRy9KLEdBREFpcUIsR0FBU2tDLFVBQVksR0FDakJyZCxFQUFFZ2hCLE1BQ0YsSUFBSyxJQUFJcjBCLEtBQUtxVCxFQUFFZ2hCLE1BQU8sQ0FDbkIsSUFBSUMsRUFBTTVGLEtBQ1Y0RixFQUFJdk0sY0FBYyxlQUFlYyxZQUFjN29CLEVBQUV1MEIsTUFBTXp6QixXQUN2RHd6QixFQUFJdk0sY0FBYyxhQUFhYyxZQUFjN29CLEVBQUVtekIsSUFDL0NtQixFQUFJdk0sY0FBYyx1QkFBdUJ5TSxJQUFNeDBCLEVBQUVtekIsR0FDckQsQ0FFSjlLLEVBQVl4Z0IsTUFBUSxHQUNoQndMLEVBQUVvaEIsUUFBVXBoQixFQUFFb2hCLE9BQU9DLFVBQ3JCck0sRUFBWXhnQixNQUFRd0wsRUFBRW9oQixPQUFPQyxTQUVqQ2xRLEVBQWtCMkMsUUFBUXdOLG1CQUMxQnBELElBakxBLENBa0xKLENBNU5JcUQsQ0FvQkosU0FBK0J6dUIsR0FDM0IsSUFBS0EsRUFHRCxPQUZBbXBCLEdBQU9wdUIsS0FBSywrQ0FDWjJ6QixJQUFjLEdBSWxCLEdBREF2RixHQW5ESixTQUF3Qm5wQixHQUNwQixJQUFJNlIsRUFBSSxHQVNSLE9BUFMsSUFERDdSLEVBQUV5Z0IsVUFFR3pnQixFQUFFOGlCLE1BQ0hqUixFQUFFOVcsS0FBSywwQkFDTmlGLEVBQUV0SixPQUNIbWIsRUFBRTlXLEtBQUssbUNBR1o4VyxDQUNYLENBd0NhOGMsQ0FBZTN1QixHQUNwQm1wQixHQUFPanZCLE9BQVMsRUFFaEIsWUFEQXcwQixJQUFjLEdBR2xCLElBQUlFLEVBQWdCQyxHQUFhN3VCLEdBQ2pDLE9BQU80ZSxFQUFjVSxlQUFld1AsZUFBZUYsRUFDdkQsQ0FqQ2dCRyxDQUFzQnRELEdBQ3RDLENBS0EsU0FBU29ELEdBQWEzaEIsR0FDbEIsR0FDUyxJQUREQSxFQUFFdVQsUUFLRixNQURBMEksR0FBT3B1QixLQUFLLHNDQUNOLElBQUlrUCxNQUFNLHNDQUV4QixPQUFPaUQsRUFBRXVULFNBQVdwQixFQUFrQm5TLEVBQUkyaEIsR0FBYTNoQixFQUMzRCxDQTdDZ0JtUixFQUFrQjJDLFFBQVFnTyxTQUFTM0osS0FBS0ssR0FBTyxDQUFFdUosZ0JBQWdCLElBMlBqRixJQUFJNUosR0FBTyxFQU1YLFNBQVM2SixHQUFXN21CLEVBQUkzUixFQUFPeTRCLEVBQVcvRCxHQUFjanpCLEdBQVksSUFDaEUsRUFBSWltQixFQUFTNEMsU0FBUyxJQUFJM1ksS0FBTW5OLFNBQVMsQ0FDckN0RSxXQUFXLEVBQ1hxQixtQkFBb0IsZ0JBQ3BCakIsYUFBYSxFQUNiQyxhQUFhLEVBQ2JJLHNCQUFzQixFQUN0QiszQixlQUFnQixHQUNoQnIzQixnQkFBaUIsTUFDakJJLFVBQVdBLEVBQ1h6QixNQUFPQSxHQUFTLENBQUMsTUFBTyxPQUFRLFNBQVUsUUFBUyxXQUFXMnVCLEtBQVMsR0FDdkUvdUIsS0FBTSxTQUFVSSxHQUNaeTRCLEVBQVN6NEIsRUFDYixFQUNBRCxLQUFNLFNBQVVDLEdBQ1p5NEIsRUFBU3o0QixFQUNiLEVBQ0EyQixRQUFTLENBQ0wsQ0FDSSxlQUNBLGtCQUNBLHFCQUNBLHFCQUNBLHFCQUNnRCxzQkFFcEQsQ0FDSSxpQkFDQSxpQkFDQSxtQkFDQSxtQkFDQSxpQkFDQSxtQkFDQSxvQkFDQSxpQkFDQSxtQkFDQSxvQkFFSixDQUNJLHFCQUNBLHFCQUNBLHFCQUNBLHFCQUNBLHFCQUNBLHFCQUNBLHFCQUNBLHFCQUNBLHFCQUNBLHNCQUVKLENBQ0kscUJBQ0EscUJBQ0EscUJBQ0EscUJBQ0EscUJBQ0EscUJBQ0EscUJBQ0EscUJBQ0EscUJBQ0Esc0JBRUosQ0FDSSxtQkFDQSxxQkFDQSxxQkFDQSxxQkFDQSxxQkFDQSxxQkFDQSxxQkFDQSxxQkFDQSxxQkFDQSxzQkFFSixDQUNJLGtCQUNBLGlCQUNBLG9CQUNBLG9CQUNBLG9CQUNBLG9CQUNBLG9CQUNBLG9CQUNBLG9CQUNBLHFCQUVKLENBQ0ksbUJBQ0EsaUJBQ0Esa0JBQ0EsbUJBQ0EsbUJBQ0Esa0JBQ0EsbUJBQ0EsbUJBQ0EsbUJBQ0Esb0JBRUosQ0FDSSxpQkFDQSxpQkFDQSxrQkFDQSxrQkFDQSxrQkFDQSxrQkFDQSxtQkFDQSxpQkFDQSxrQkFDQSxxQkFJaEIsQ0FDQTYyQixHQUFXLHVCQUNYQSxHQUFXLHlCQUNYQSxHQUFXLDBCQUNYQSxHQUFXLHNCQUNYQSxHQUFXLG9CQUNYQSxHQUFXLHVCQUF3QixXQUNuQ0EsR0FBVyxzQkFBdUIsV0FDbENBLEdBQVcseUJBQTBCLFFBQ3JDQSxHQUFXLHFCQUFzQixXQUNqQ0EsR0FBVyxzQkFBdUIsV0FDbENBLEdBQVcseUJBQTBCLHlCQUEwQjlELElBQWMsR0FDN0U4RCxHQUFXLHNCQUF1QixVQUFXOUQsSUFBYyxHQUMzRDhELEdBQVcsc0JBQXVCLFdBQ2xDQSxHQUFXLHFCQUFzQixXQUNqQ0EsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxlQUFnQixXQUMzQkEsR0FBVyxnQkFBaUIsV0FDNUJBLEdBQVcsZ0JBQWlCLFdBQzVCQSxHQUFXLGdCQUFpQixXQUM1QkEsR0FBVyxnQkFBaUIsV0FDNUJBLEdBQVcsZ0JBQWlCLFdBQzVCQSxHQUFXLGdCQUFpQixXQUM1QkEsR0FBVyxnQkFBaUIsV0FDNUJBLEdBQVcsZ0JBQWlCLFdBQzVCQSxHQUFXLGdCQUFpQixXQUM1QkEsR0FBVyxnQkFBaUIsV0FDNUJBLEdBQVcsZ0JBQWlCLFdBQzVCQSxHQUFXLGdCQUFpQixXQUM1QkEsR0FBVyxnQkFBaUIsV0FDNUJBLEdBQVcsZ0JBQWlCLFdBQzVCQSxHQUFXLGdCQUFpQixXQUM1QkEsR0FBVyxnQkFBaUIsV0FDNUJBLEdBQVcsZ0JBQWlCLFdBQzVCQSxHQUFXLGdCQUFpQixXQUM1QkEsR0FBVyxnQkFBaUIsV0FDNUJBLEdBQVcsZ0JBQWlCLFdBQzVCQSxHQUFXLGdCQUFpQixXQUM1QkEsR0FBVyw0QkFBNkIsV0FDeENBLEdBQVcsMEJBQTJCLFdBQ3RDQSxHQUFXLDZCQUE4QixTQUN6QyxJQUFJdkIsR0FBaUIsQ0FDakIsd0JBQXlCLENBQUMsWUFBYSxVQUFXLGtCQUNsRCx1QkFBd0IsQ0FBQyxZQUFhLFNBQVUsaUJBQ2hELDBCQUEyQixDQUFDLFlBQWEsWUFBYSxvQkFDdEQsc0JBQXVCLENBQUMsWUFBYSxRQUFTLGdCQUM5Qyx1QkFBd0IsQ0FBQyxZQUFhLFNBQVUsMEJBQ2hELDBCQUEyQixDQUFDLFlBQWEsWUFBYSxvQkFDdEQsdUJBQXdCLENBQUMsWUFBYSxTQUFVLGlCQUNoRCx1QkFBd0IsQ0FBQyxZQUFhLFNBQVUsaUJBQ2hELHNCQUF1QixDQUFDLFlBQWEsUUFBUyxnQkFDOUMsNkJBQThCLENBQUMsT0FBUSxVQUFXLGVBQ2xELDJCQUE0QixDQUFDLE9BQVEsUUFBUyxxQkFDOUMsOEJBQStCLENBQUMsT0FBUSxXQUFZLHdCQUNwRCxnQkFBaUIsQ0FBQyxXQUFZLEVBQUcsUUFDakMsZ0JBQWlCLENBQUMsV0FBWSxFQUFHLFFBQ2pDLGdCQUFpQixDQUFDLFdBQVksRUFBRyxRQUNqQyxnQkFBaUIsQ0FBQyxXQUFZLEVBQUcsUUFDakMsZ0JBQWlCLENBQUMsV0FBWSxFQUFHLFFBQ2pDLGdCQUFpQixDQUFDLFdBQVksRUFBRyxRQUNqQyxnQkFBaUIsQ0FBQyxXQUFZLEVBQUcsUUFDakMsZ0JBQWlCLENBQUMsV0FBWSxFQUFHLFFBQ2pDLGdCQUFpQixDQUFDLFdBQVksRUFBRyxRQUNqQyxpQkFBa0IsQ0FBQyxXQUFZLEVBQUcsU0FDbEMsaUJBQWtCLENBQUMsV0FBWSxHQUFJLFNBQ25DLGlCQUFrQixDQUFDLFdBQVksR0FBSSxTQUNuQyxpQkFBa0IsQ0FBQyxXQUFZLEdBQUksU0FDbkMsaUJBQWtCLENBQUMsV0FBWSxHQUFJLFNBQ25DLGlCQUFrQixDQUFDLFdBQVksR0FBSSxTQUNuQyxpQkFBa0IsQ0FBQyxXQUFZLEdBQUksU0FDbkMsaUJBQWtCLENBQUMsV0FBWSxHQUFJLFNBQ25DLGlCQUFrQixDQUFDLFdBQVksR0FBSSxTQUNuQyxpQkFBa0IsQ0FBQyxXQUFZLEdBQUksU0FDbkMsaUJBQWtCLENBQUMsV0FBWSxHQUFJLFNBQ25DLGlCQUFrQixDQUFDLFdBQVksR0FBSSxTQUNuQyxpQkFBa0IsQ0FBQyxXQUFZLEdBQUksU0FDbkMsaUJBQWtCLENBQUMsV0FBWSxHQUFJLFNBQ25DLGlCQUFrQixDQUFDLFdBQVksR0FBSSxTQUNuQyxpQkFBa0IsQ0FBQyxXQUFZLEdBQUksU0FDbkMsaUJBQWtCLENBQUMsV0FBWSxHQUFJLFNBQ25DLGlCQUFrQixDQUFDLFdBQVksR0FBSSxTQUNuQyxpQkFBa0IsQ0FBQyxXQUFZLEdBQUksU0FDbkMsaUJBQWtCLENBQUMsV0FBWSxHQUFJLFNBQ25DLGlCQUFrQixDQUFDLFdBQVksR0FBSSxVQUV2QyxTQUFTdkMsS0FpQkwsR0FoQkFpRSxjQUFjdkosR0FDZGlGLEdBQVcsR0FDWDVCLEdBQVMsR0FDVC93QixHQUFRLElBQUl3bUIsRUFBY1UsZUFBZXlHLEVBQVVya0IsT0FBUyxpQkFBa0JrZCxFQUFjVSxlQUFlRCxnQkFBaUIsQ0FBRWhRLElBQUssTUFFOUhqWCxHQUFNMHFCLEtBR0ZELEVBQWNHLFNBQVM1cUIsR0FBTTBxQixNQUNsQ3FHLEdBQU9wdUIsS0FBSyxxRkFFUDNDLEdBQU0wcUIsTUFBUWdJLElBQWlCN0gsRUFBVTdxQixHQUFNMHFCLE9BQ3BEcUcsR0FBT3B1QixLQUFLLDBCQUEwQjNDLEdBQU0wcUIscUZBTjVDcUcsR0FBT3B1QixLQUFLLDBCQVNoQjNDLEdBQU0xQixNQUFRLElBQUlrb0IsRUFBYzBRLFdBQzVCOUksRUFBY2tELFFBQ2QvQyxFQUF3QmpELFVBQVVDLElBQUksVUFDdENvRSxHQUFnQnJFLFVBQVV0YixPQUFPLFVBQ2pDd2UsRUFBeUJsRCxVQUFVQyxJQUFJLFVBQ3ZDdnJCLEdBQU0xQixNQUFNMlksS0FBTSxFQUFJK08sRUFBUzRDLFNBQVNnRixHQUFVNW5CLE9BQU8sVUFDekQsRUFBSXNnQixFQUFNcUMsZ0JBQWdCLFlBQWEzb0IsR0FBTTFCLE1BQU0yWSxJQUFJMVUsYUFDdkQsRUFBSStqQixFQUFNcUMsZ0JBQWdCLGdCQUFpQixvQ0FDM0MsRUFBSXJDLEVBQU1xQyxnQkFBZ0IsbUJBQW9CLG9DQUM5QyxFQUFJckMsRUFBTXFDLGdCQUFnQixjQUFlLG9DQUN6QyxFQUFJckMsRUFBTXFDLGdCQUFnQixlQUFnQixvQ0FDMUMsRUFBSXJDLEVBQU1xQyxnQkFBZ0IsYUFBYyx3Q0FFdkMsR0FBSTBGLEVBQWlCaUQsUUFDdEIvQyxFQUF3QmpELFVBQVV0YixPQUFPLFVBQ3pDMmYsR0FBZ0JyRSxVQUFVQyxJQUFJLFVBQzlCaUQsRUFBeUJsRCxVQUFVQyxJQUFJLFVBQ3ZDdnJCLEdBQU0xQixNQUFNdTJCLE9BQVMsSUFBSXJPLEVBQWMyUSx1QkFBc0IsRUFBSW5SLEVBQVM0QyxTQUFTLHdCQUF3QjlsQixTQUFTLE9BQU95SSxlQUFlLEVBQUl5YSxFQUFTNEMsU0FBUywwQkFBMEI5bEIsU0FBUyxPQUFPeUksZUFBZSxFQUFJeWEsRUFBUzRDLFNBQVMsMkJBQTJCOWxCLFNBQVMsT0FBT3lJLGVBQWUsRUFBSXlhLEVBQVM0QyxTQUFTLHVCQUF1QjlsQixTQUFTLE9BQU95SSxlQUFlLEVBQUl5YSxFQUFTNEMsU0FBUyxxQkFBcUI5bEIsU0FBUyxPQUFPeUksZ0JBQ2hiLEVBQUkrYSxFQUFNcUMsZ0JBQWdCLGdCQUFpQjNvQixHQUFNMUIsTUFBTXUyQixPQUFPc0IsVUFDOUQsRUFBSTdQLEVBQU1xQyxnQkFBZ0IsbUJBQW9CM29CLEdBQU0xQixNQUFNdTJCLE9BQU91QyxhQUNqRSxFQUFJOVEsRUFBTXFDLGdCQUFnQixjQUFlM29CLEdBQU0xQixNQUFNdTJCLE9BQU93QyxRQUM1RCxFQUFJL1EsRUFBTXFDLGdCQUFnQixlQUFnQjNvQixHQUFNMUIsTUFBTXUyQixPQUFPeUMsU0FDN0QsRUFBSWhSLEVBQU1xQyxnQkFBZ0IsYUFBYzNvQixHQUFNMUIsTUFBTXUyQixPQUFPMEMsV0FFMUQsR0FBSWpKLEVBQWtCZ0QsUUFBUyxDQUtoQyxHQUpBL0MsRUFBd0JqRCxVQUFVQyxJQUFJLFVBQ3RDb0UsR0FBZ0JyRSxVQUFVQyxJQUFJLFVBQzlCaUQsRUFBeUJsRCxVQUFVdGIsT0FBTyxVQUMxQ2hRLEdBQU0xQixNQUFNeTJCLFFBQVUsSUFBSXZPLEVBQWNnUix1QkFBdUIsSUFBSWhSLEVBQWNpUixnQ0FBbUMsSUFBSWpSLEVBQWNpUixnQ0FBbUMsSUFBSWpSLEVBQWNpUixpQ0FDdkx6M0IsR0FBTTFCLE1BQU15MkIsUUFBUTlkLEtBQU93WCxFQUF1QjZDLFFBQVMsQ0FDM0QxQyxFQUE4QnRELFVBQVV0YixPQUFPLFVBQy9DL08sU0FBU3VvQixjQUFjLHNDQUFzQ3VELGtCQUFrQnpDLFlBQWMsYUFDN0ZyQixFQUFxQnFDLFVBQVV0YixPQUFPLGNBQ3RDaFEsR0FBTTFCLE1BQU15MkIsUUFBUTlkLElBQUkrZCxRQUFVLElBQUl4TyxFQUFja1IsZ0NBQWdDM0ksRUFBcUJ6bEIsUUFBUSxFQUFJMGMsRUFBUzRDLFNBQVNLLEdBQXNCampCLE9BQU8sV0FBVyxFQUFJZ2dCLEVBQVM0QyxTQUFTNEcsSUFBc0IzRyxZQUFZLFlBQVkzZ0IsTUFBTSxLQUFLLEtBQUssRUFBSThkLEVBQVM0QyxTQUFTNEcsSUFBc0IzRyxZQUFZLFlBQVkzZ0IsTUFBTSxLQUFLLEdBQUltbkIsR0FBeUJpQyxTQUMvVyxJQUFJcUcsRUFBUSxHQUNSeHJCLEVBQU1uTSxHQUFNMUIsTUFBTXkyQixRQUFROWQsSUFBSStkLFFBQVE1b0IsSUFBTXBNLEdBQU0xQixNQUFNeTJCLFFBQVE5ZCxJQUFJK2QsUUFBUTdvQixJQUMxRW5NLEdBQU0xQixNQUFNeTJCLFFBQVE5ZCxJQUFJK2QsUUFBUTdvQixJQUFNLElBQ3RDbk0sR0FBTTFCLE1BQU15MkIsUUFBUTlkLElBQUkrZCxRQUFRN29CLElBQ3RDLElBQUssSUFBSTFLLEVBQUksRUFBR0EsR0FBSyxFQUFHQSxHQUFLLElBQ3pCazJCLEVBQU1oMUIsS0FBSyxPQUFPM0MsR0FBTTFCLE1BQU15MkIsUUFBUTlkLElBQUkrZCxRQUFRNW9CLEtBQU8sRUFBSTNLLEdBQUswSyxFQUFNMUssZ0JBRXhFekIsR0FBTTFCLE1BQU15MkIsUUFBUTlkLElBQUkrZCxRQUFRRSxXQUNoQ3lDLEVBQU1oMUIsUUFBUWcxQixFQUFNeHlCLE1BQU0sRUFBR3d5QixFQUFNNzFCLE9BQVMsR0FBRytHLFdBRW5EbW1CLEVBQXVCaHVCLE1BQU1vMkIsV0FBYSw2QkFBNkJPLEVBQU1yMkIsU0FDakYsTUFFSXN0QixFQUE4QnRELFVBQVVDLElBQUksVUFDNUN0cUIsU0FBU3VvQixjQUFjLHNDQUFzQ3VELGtCQUFrQnpDLFlBQWMsWUFDN0ZyQixFQUFxQnFDLFVBQVVDLElBQUksY0FDbkN2ckIsR0FBTTFCLE1BQU15MkIsUUFBUTlkLElBQUkzTixPQUFRLEVBQUkwYyxFQUFTNEMsU0FBU0ssR0FBc0JqakIsT0FBTyxTQUVuRmhHLEdBQU0xQixNQUFNeTJCLFFBQVFLLFlBQWMxRyxFQUE4QjRDLFNBQ2hFekMsRUFBcUN2RCxVQUFVdGIsT0FBTyxVQUN0RC9PLFNBQVN1b0IsY0FBYyw2Q0FBNkN1RCxrQkFBa0J6QyxZQUFjLG9CQUNwR3RxQixHQUFNMUIsTUFBTXkyQixRQUFRSyxXQUFXSixRQUFVLElBQUl4TyxFQUFja1IsZ0NBQWdDekksRUFBNEIzbEIsT0FBUTRsQixFQUE0QjVsQixPQUFPLEVBQUkwYyxFQUFTNEMsU0FBUzZHLElBQTZCenBCLE9BQU8sVUFBVSxJQUFJLEVBQUlnZ0IsRUFBUzRDLFNBQVM2RyxJQUE2QnpwQixPQUFPLFVBQVUsR0FBSXNwQixHQUFnQ2dDLFdBR2xWekMsRUFBcUN2RCxVQUFVQyxJQUFJLFVBQ25EdHFCLFNBQVN1b0IsY0FBYyw2Q0FBNkN1RCxrQkFBa0J6QyxZQUFjLG1CQUNwR3RxQixHQUFNMUIsTUFBTXkyQixRQUFRSyxXQUFXOXJCLE1BQVFzdUIsT0FBTzFvQixXQUFXZ2dCLEVBQTRCNWxCLFFBRXJGcWxCLEVBQTZCMkMsU0FDN0J4QyxFQUFvQ3hELFVBQVV0YixPQUFPLFVBQ3JEL08sU0FBU3VvQixjQUFjLDRDQUE0Q3VELGtCQUFrQnpDLFlBQWMsbUJBQ25HdHFCLEdBQU0xQixNQUFNeTJCLFFBQVFNLFVBQVVMLFFBQVUsSUFBSXhPLEVBQWNrUixnQ0FBZ0N2SSxHQUEyQjdsQixPQUFROGxCLEdBQTJCOWxCLE9BQU8sRUFBSTBjLEVBQVM0QyxTQUFTOEcsSUFBNEIxcEIsT0FBTyxVQUFVLElBQUksRUFBSWdnQixFQUFTNEMsU0FBUzhHLElBQTRCMXBCLE9BQU8sVUFBVSxHQUFJdXBCLEdBQStCK0IsV0FHNVV4QyxFQUFvQ3hELFVBQVVDLElBQUksVUFDbER0cUIsU0FBU3VvQixjQUFjLDRDQUE0Q3VELGtCQUFrQnpDLFlBQWMsa0JBQ25HdHFCLEdBQU0xQixNQUFNeTJCLFFBQVFNLFVBQVUvckIsTUFBUXN1QixPQUFPMW9CLFdBQVdrZ0IsR0FBMkI5bEIsUUFFdkYsSUFBSXNMLEVBNldaLFNBQWlDNVUsR0FDN0IsT0FBSUEsRUFBTTFCLE1BQU15MkIsUUFDTCxLQUNILElBQUl0ZixFQUFJRCxFQUFJK1IsRUFBSUMsRUFBSThMLEVBQUlDLEVBQUloZSxFQUFJaWUsRUFBSUMsRUFBSUMsRUFBSUMsRUFBSUMsRUFBSUMsRUFBSUMsRUFBSUMsRUFDNUQsSUFBSTljLEVBQU0sRUFDTm1lLEVBQWEsRUFDYkMsRUFBWSxFQUNad0MsR0FBTyxJQUFJQyxNQUFPQyxVQUl0QixHQUFzRixRQUFqRnZpQixFQUFvQyxRQUE5QkMsRUFBS3pWLEVBQU0xQixNQUFNeTJCLGVBQTRCLElBQVB0ZixPQUFnQixFQUFTQSxFQUFHd0IsV0FBd0IsSUFBUHpCLE9BQWdCLEVBQVNBLEVBQUd3ZixRQUFTLENBQy9ILElBQUloeUIsRUFBSWhELEVBQU0xQixNQUFNeTJCLFFBQVE5ZCxJQUFJK2QsUUFDNUJoeUIsRUFBRW1KLElBQU1uSixFQUFFb0osTUFDVnBKLEVBQUVtSixLQUFPLEtBRWI4SyxFQUFNK2dCLEVBQWtCaDFCLEVBQUc2MEIsRUFDL0IsTUFFSTVnQixFQUE2SSxRQUF0SXFjLEVBQXVGLFFBQWpGOUwsRUFBb0MsUUFBOUJELEVBQUt2bkIsRUFBTTFCLE1BQU15MkIsZUFBNEIsSUFBUHhOLE9BQWdCLEVBQVNBLEVBQUd0USxXQUF3QixJQUFQdVEsT0FBZ0IsRUFBU0EsRUFBR2xlLGFBQTBCLElBQVBncUIsRUFBZ0JBLEVBQUssSUFHMUs4QixHQUR5RixRQUF4RjdmLEVBQW9DLFFBQTlCZ2UsRUFBS3Z6QixFQUFNMUIsTUFBTXkyQixlQUE0QixJQUFQeEIsT0FBZ0IsRUFBU0EsRUFBRzZCLGtCQUErQixJQUFQN2YsT0FBZ0IsRUFBU0EsRUFBR3lmLFNBQ2hIZ0QsRUFBa0JoNEIsRUFBTTFCLE1BQU15MkIsUUFBUUssV0FBV0osUUFBUzZDLEdBR29GLFFBQTdJbkUsRUFBOEYsUUFBeEZELEVBQW9DLFFBQTlCRCxFQUFLeHpCLEVBQU0xQixNQUFNeTJCLGVBQTRCLElBQVB2QixPQUFnQixFQUFTQSxFQUFHNEIsa0JBQStCLElBQVAzQixPQUFnQixFQUFTQSxFQUFHbnFCLGFBQTBCLElBQVBvcUIsRUFBZ0JBLEVBQUssSUFHeEwyQixHQUR3RixRQUF2RnpCLEVBQW9DLFFBQTlCRCxFQUFLM3pCLEVBQU0xQixNQUFNeTJCLGVBQTRCLElBQVBwQixPQUFnQixFQUFTQSxFQUFHMEIsaUJBQThCLElBQVB6QixPQUFnQixFQUFTQSxFQUFHb0IsU0FDaEhnRCxFQUFrQmg0QixFQUFNMUIsTUFBTXkyQixRQUFRTSxVQUFVTCxRQUFTNkMsR0FHb0YsUUFBNUk5RCxFQUE2RixRQUF2RkQsRUFBb0MsUUFBOUJELEVBQUs3ekIsRUFBTTFCLE1BQU15MkIsZUFBNEIsSUFBUGxCLE9BQWdCLEVBQVNBLEVBQUd3QixpQkFBOEIsSUFBUHZCLE9BQWdCLEVBQVNBLEVBQUd4cUIsYUFBMEIsSUFBUHlxQixFQUFnQkEsRUFBSyxJQUUxTDl5QixTQUFTbU0sZ0JBQWdCcE0sTUFBTWkzQixZQUFZLGNBQWVoaEIsRUFBSTFVLGFBQzlELEVBQUkrakIsRUFBTXFDLGdCQUFnQixnQkFBaUIseUJBQXlCeU0sT0FBZ0JDLFFBQ3BGLEVBQUkvTyxFQUFNcUMsZ0JBQWdCLG1CQUFvQixvQ0FDOUMsRUFBSXJDLEVBQU1xQyxnQkFBZ0IsY0FBZSxvQ0FDekMsRUFBSXJDLEVBQU1xQyxnQkFBZ0IsZUFBZ0Isb0NBQzFDLEVBQUlyQyxFQUFNcUMsZ0JBQWdCLGFBQWMsa0NBQWtDLE9BR2xGLEVBQ0EsU0FBU3FQLEVBQWtCRSxFQUFlTCxHQUN0QyxJQUFJLE1BQUU1QyxFQUFLLE9BQUU3MEIsRUFBTSxVQUFFODBCLEVBQVMsSUFBRTlvQixFQUFHLElBQUVELEdBQVErckIsRUFDekN4TyxFQUFRdmQsRUFBTUMsRUFDZHZCLEdBQU1ndEIsR0FBUSxJQUFNNUMsS0FBVTcwQixJQUFXODBCLEVBQW9CLEVBQVJ4TCxFQUFZQSxHQUFVdGQsRUFJL0UsT0FISThvQixHQUFhcnFCLEVBQUlzQixJQUNqQnRCLEVBQUlzQixHQUFPdEIsRUFBSXNCLElBRVp0QixDQUNYLENBQ0osQ0FoYWdCc3RCLENBQXdCbjRCLElBQzVCNFUsSUFDQUEsSUFDQThZLEVBQWtCMEssWUFBWXhqQixFQUFHLEtBRXpDLENBQ0EsR0FBSXljLEdBQWFDLFFBQVMsQ0FDdEJyd0IsU0FBU21NLGdCQUFnQmlyQixhQUFhLFNBQVUsUUFDaEQ5RyxHQUFjakcsVUFBVXRiLE9BQU8sVUFDL0JoUSxHQUFNMUIsTUFBTWczQixPQUFTLElBQUk5TyxFQUFjOFIsc0JBQ3ZDdDRCLEdBQU0xQixNQUFNZzNCLE9BQU9pRCxTQUFXLEdBQzlCdjRCLEdBQU0xQixNQUFNZzNCLE9BQU9rRCxVQUFZLElBQUloUyxFQUFjaVMsK0JBQStCLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxVQUFXLFVBQVcsVUFBVyxXQUN4S3o0QixHQUFNMUIsTUFBTWczQixPQUFPNXRCLEtBQU8sSUFBSThlLEVBQWNrUywwQkFBMEIsVUFBVyxVQUFXLFdBQzVGMTRCLEdBQU0xQixNQUFNZzNCLE9BQU9HLFFBQVUsSUFBSWpQLEVBQWNtUyx3QkFBd0IsRUFBRyxFQUFHLEdBQzdFMzRCLEdBQU0xQixNQUFNZzNCLE9BQU9zRCxNQUFPLEVBQUk1UyxFQUFTNEMsU0FBUyx5QkFBeUI5bEIsU0FBUyxPQUFPK1UsU0FDekY1VyxTQUFTbU0sZ0JBQWdCaXJCLGFBQWEsT0FBUXI0QixHQUFNMUIsTUFBTWczQixPQUFPc0QsS0FBS3IyQixZQUN0RSxJQUFLLElBQUkwTixLQUFNc2xCLEdBQWdCLENBQzNCLElBQUlzRCxFQUFNdEQsR0FBZXRsQixHQUVUalEsR0FBTTFCLE1BQU1nM0IsT0FBT3VELEVBQUksSUFDN0JBLEVBQUksS0FBTSxFQUFJN1MsRUFBUzRDLFNBQVMzWSxHQUNyQ25OLFNBQVMsT0FDVFAsWUFDTCxFQUFJK2pCLEVBQU1xQyxnQkFBZ0JrUSxFQUFJLElBQUksRUFBSTdTLEVBQVM0QyxTQUFTM1ksR0FBSW5OLFNBQVMsT0FBT1AsV0FDaEYsQ0FDQXZDLEdBQU0xQixNQUFNZzNCLE9BQU9HLFFBQVFFLFlBQWNsRSxHQUFzQm5vQixNQUMvRHRKLEdBQU0xQixNQUFNZzNCLE9BQU9HLFFBQVFDLGNBQWdCbEUsR0FBd0Jsb0IsTUFDbkV0SixHQUFNMUIsTUFBTWczQixPQUFPRyxRQUFRRyxTQUFXbEUsR0FBbUJwb0IsT0FDekQsRUFBSWdkLEVBQU1xQyxnQkFBZ0IscUJBQXNCLEdBQUc4SSxHQUFzQm5vQixZQUN6RSxFQUFJZ2QsRUFBTXFDLGdCQUFnQix1QkFBd0IsR0FBRzZJLEdBQXdCbG9CLFlBQzdFLEVBQUlnZCxFQUFNcUMsZ0JBQWdCLGlCQUFrQixHQUFHK0ksR0FBbUJwb0IsVUFDdEUsTUFFSXJJLFNBQVNtTSxnQkFBZ0JpckIsYUFBYSxTQUFVLFNBQ2hEOUcsR0FBY2pHLFVBQVVDLElBQUksVUEyRGhDLEdBeERBcUUsR0FBaUJ0RSxVQUFVQyxJQUFJLFVBQzNCc0MsRUFBdUJ5RCxTQUN2QnR4QixHQUFNMDBCLEtBQU8sSUFBSWxPLEVBQWNzUyxlQUFVaDdCLEVBQVcsbUJBQ3BELEVBQUl3b0IsRUFBTXFDLGdCQUFnQixpQkFBa0IsT0FBT2xDLE9BRTlDcUgsRUFBbUJ3RCxTQUN4QnR4QixHQUFNMDBCLEtBQU8sSUFBSWxPLEVBQWNzUyxlQUFVaDdCLEVBQVcsbUJBQ3BELEVBQUl3b0IsRUFBTXFDLGdCQUFnQixpQkFBa0IsT0FBTzlCLE9BRTlDa0gsRUFBbUJ1RCxTQUN4QnR4QixHQUFNMDBCLEtBQU8sSUFBSWxPLEVBQWNzUyxlQUFVaDdCLEVBQVcsZUFDcEQsRUFBSXdvQixFQUFNcUMsZ0JBQWdCLGlCQUFrQixPQUFPM0IsT0FFOUNnSCxFQUFrQnNELFNBQ3ZCdHhCLEdBQU0wMEIsS0FBTyxJQUFJbE8sRUFBY3NTLGVBQVVoN0IsRUFBVyxlQUNwRCxFQUFJd29CLEVBQU1xQyxnQkFBZ0IsaUJBQWtCLE9BQU81QixPQUU5Q2tILEVBQWVxRCxTQUNwQnR4QixHQUFNMDBCLEtBQU8sSUFBSWxPLEVBQWNzUyxlQUFVaDdCLEVBQVcsaUJBQ3BELEVBQUl3b0IsRUFBTXFDLGdCQUFnQixpQkFBa0IsT0FBTzdCLE9BRTlDb0gsRUFBaUJvRCxTQUN0QnR4QixHQUFNMDBCLEtBQU8sSUFBSWxPLEVBQWNzUyxlQUFVaDdCLEVBQVcsWUFDcEQsRUFBSXdvQixFQUFNcUMsZ0JBQWdCLGlCQUFrQixPQUFPeEIsT0FFOUNnSCxFQUFnQm1ELFVBQ3JCMUIsR0FBaUJ0RSxVQUFVdGIsT0FBTyxVQUM5QitaLEVBQVV6Z0IsT0FDVnRKLEdBQU0wMEIsS0FBTyxJQUFJbE8sRUFBY3NTLFVBQVUvTyxFQUFVemdCLE9BQ25EeXZCLEdBQVdoUCxFQUFVemdCLE9BQU93akIsSUFDeEIsSUFBSWtNLEVBQU1sTSxFQUFFcmUsUUFDSyxLQUFidXFCLEVBQUl2c0IsT0FBZ0J1c0IsRUFBSXRzQixPQUFTLElBQU1zc0IsRUFBSXRzQixPQUFTLEtBQ3BEaW1CLEdBQVNod0IsS0FBSyx5RUFFbEIsRUFBSTJqQixFQUFNcUMsZ0JBQWdCLGlCQUFrQixPQUFPb0IsRUFBVXpnQixTQUFTLElBQ3ZFLElBQU15bkIsR0FBT3B1QixLQUFLLCtDQUdyQm91QixHQUFPcHVCLEtBQUssNkJBSWhCbW5CLEVBQVl4Z0IsT0FDWnRKLEdBQU1rMkIsT0FBUyxJQUFJMVAsRUFBY3lTLFlBQVluUCxFQUFZeGdCLE9BQ3pEeXZCLEdBQVdqUCxFQUFZeGdCLE9BQU93akIsSUFDMUIsSUFBSWtNLEVBQU1sTSxFQUFFcmUsUUFDUnVxQixFQUFJdnNCLE1BQVEsS0FBT3VzQixFQUFJdHNCLE9BQVMsTUFDaENxa0IsR0FBT3B1QixLQUFLLHlEQUVoQixFQUFJMmpCLEVBQU1xQyxnQkFBZ0IsU0FBVSxPQUFPbUIsRUFBWXhnQixlQUFlLElBQ3ZFLElBQU15bkIsR0FBT3B1QixLQUFLLGtEQUdyQixFQUFJMmpCLEVBQU1xQyxnQkFBZ0IsU0FBVSxRQUdwQ3VILEdBQWNnSixLQUFLcDNCLE9BQVMsRUFBRyxDQUMvQixJQUFJcTNCLEVBQWMsR0FDZEMsR0FBUSxFQUNaLElBQUssSUFBSXJELEtBQU83RixHQUFjZ0osS0FBTSxDQUNoQyxHQUFJRSxJQUFVckQsRUFBSXNELE1BQU0sR0FBRy9PLGNBQWdCeUwsRUFBSXNELE1BQU0sR0FBRy9PLFlBQWEsQ0FDakU4TyxHQUFRLEVBQ1IsUUFDSixDQUNBLElBQUlFLEVBQVV2RCxFQUFJc0QsTUFBTSxHQUFHL08sWUFDdkJzSyxFQUFNbUIsRUFBSXNELE1BQU0sR0FBRy9PLFlBQ3ZCeU8sR0FBV25FLE9BQUs5MkIsR0FBVyxJQUFNaXpCLEdBQU9wdUIsS0FBS2l5QixFQUFNLDhDQUNuRCxJQUNJalEsT0FBTzJVLEVBQ1gsQ0FDQSxNQUFPN2pCLEdBQ0hzYixHQUFPcHVCLEtBQUsyMkIsRUFBVSxvREFDMUIsQ0FDQUgsRUFBWXgyQixLQUFLLElBQUk2akIsRUFBYytTLFVBQVVELEVBQVMxRSxHQUMxRCxDQUNBNTBCLEdBQU04MUIsTUFBUXFELENBQ2xCLENBQ0E3QyxJQUNKLENBS0EsU0FBU0EsR0FBY2tELEdBQWEsR0FDNUJBLElBQ0E1RyxHQUFPdHBCLE1BQVFzbkIsS0FBSzZJLFVBQVV6NUIsR0FBTyxLQUFNLElBQy9DLElBQUkwNUIsRUFBY3o0QixTQUFTa3BCLGVBQWUsZ0JBQ3RDd0ksR0FBUzd3QixPQUFTLEdBQ2xCNDNCLEVBQVkxNEIsTUFBTTI0QixRQUFVLFFBQzVCMTRCLFNBQVNrcEIsZUFBZSxtQkFBbUJnSSxVQUFZUSxHQUFTcnhCLEtBQUssVUFHckVvNEIsRUFBWTE0QixNQUFNMjRCLFFBQVUsT0FFaEMsSUFBSUMsRUFBWTM0QixTQUFTa3BCLGVBQWUsY0FDcEM0RyxHQUFPanZCLE9BQVMsR0FBSzB1QixNQUNyQm9KLEVBQVU1NEIsTUFBTTI0QixRQUFVLFFBQzFCMTRCLFNBQVNrcEIsZUFBZSxpQkFBaUJnSSxVQUFZcEIsR0FBT3p2QixLQUFLLFVBR2pFczRCLEVBQVU1NEIsTUFBTTI0QixRQUFVLE9BRTlCMVQsRUFBa0IyQyxRQUFRd04sbUJBQzFCblEsRUFBa0IyQyxRQUFRaVIsbUJBQW1CakgsSUFDN0N2QyxJQUNKLENBQ0EsU0FBU0MsR0FBYXJzQixHQUFRLEdBQzFCLElBQ0k2c0IsR0FBVTdzQixFQUNkLENBQ0EsTUFBTzYxQixHQUNIQyxNQUFNRCxFQUNWLENBQ0osQ0FNQSxTQUFTaEosR0FBVTdzQixHQUFRLEVBQU8rMUIsR0FBVyxFQUFPQyxHQUNoRCxJQUFJeGtCLEVBQUlELEVBQ1IsR0FBSXViLEdBQU9qdkIsT0FBUyxFQUNoQixNQUFNLElBQUkrUCxNQUFNLG1EQUFxRGtmLEdBQU96dkIsS0FBSyxPQUNyRixJQUFJd1QsRUFBSW1sQixRQUEyQ0EsRUFBV3JKLEtBQUtDLE1BQU0rQixHQUFPdHBCLE9BK0NoRixTQUFTNHdCLEVBQU9wbEIsR0FDWixPQUFPOFAsRUFBVS9nQixVQUFNLE9BQVEsR0FBUSxZQUNuQyxJQUNJLElBQ0lrbkIsU0FEVXJFLE9BQU9lLFFBQVFDLEtBQUtoZixJQUFJLENBQUVxaUIsT0FBUSxNQUNqQ0EsT0FBT29QLFFBQVFyTixHQUFNQSxFQUFFcEMsT0FBU2dJLElBQWlCNWQsRUFBRTRWLFFBQ2xFSyxFQUFPcG9CLEtBQUttUyxTQUNONFIsT0FBT2UsUUFBUUMsS0FBS2xlLElBQUksQ0FBRXVoQixPQUFRQSxJQUN4Q3FQLElBQ0F6TyxHQUFhQyxLQUFLLDJCQUE0QixHQUFJLENBQUMsT0FBTyxLQUN0RDhHLEdBQWdCNWQsRUFBRTRWLEtBQ2R6bUIsRUFDQXlpQixPQUFPZSxRQUFRQyxLQUFLbGUsSUFBSSxDQUFFeEosTUFBTzhVLEVBQUU0VixPQUFRLElBQU91QixTQUFTQyxLQUFPLFdBQVc5RSxNQUU3RTZFLFNBQVNzRSxRQUFRLEdBRTdCLENBQ0EsTUFBT2xvQixHQUNIK3hCLEdBQ0osQ0FDQSxTQUFTQSxJQUNMLElBQUkza0IsRUFDSixHQUFJaVIsT0FBT0MsUUFBUTBULFlBQ2lDLFFBQTNDNWtCLEVBQUtpUixPQUFPQyxRQUFRMFQsVUFBVUMsZUFBNEIsSUFBUDdrQixPQUFnQixFQUFTQSxFQUFHbVYsU0FBUyx5QkFFekYsTUFEQW1QLE1BQU0scUxBQ0EsSUFBSWxvQixNQUFNLG9MQUc1QixDQUNKLEdBQ0osQ0EzRUk2Z0IsSUFBaUI1ZCxFQUFFNFYsTUFBUWdJLEdBQzNCL0csR0FBYUMsS0FBSyxnQkFBaUIsb0NBQW9DOEcsV0FBc0I1ZCxFQUFFNFYsU0FBVSxDQUFDLFNBQVUsV0FBV3RYLEdBQVcsV0FBTkEsR0FBa0I4bUIsRUFBT3BsQixPQUc3SixFQUFJb1IsRUFBWTJGLFlBQVksaUJBQWtCLENBQzFDNWIsR0FBSSxhQUNKck0sUUFBUyxvQkFDVDBGLE1BQU91YyxPQUFPaVAsS0FBS2hnQixFQUFFeFcsT0FBT3VILE1BQUswMEIsR0FBVyxXQUFOQSxJQUN0Q3pPLGFBQWMsYUFDZEMsYUFBY2xHLE9BQU9pUCxLQUFLaGdCLEVBQUV4VyxPQUFPdUgsTUFBSzAwQixHQUFXLFdBQU5BLElBQzdDdk8sWUFBYSx1QkFFakIsRUFBSTlGLEVBQVkyRixZQUFZLGlCQUFrQixDQUMxQzViLEdBQUksWUFDSnJNLFFBQVMsb0JBQ1QwRixPQUFnRSxRQUF2RG1NLEVBQUtYLGFBQTZCLEVBQVNBLEVBQUU0ZixZQUF5QixJQUFQamYsT0FBZ0IsRUFBU0EsRUFBR2tmLFNBQVcsU0FDL0c3SSxhQUFjLFlBQ2RDLGNBQXVFLFFBQXZEdlcsRUFBS1YsYUFBNkIsRUFBU0EsRUFBRTRmLFlBQXlCLElBQVBsZixPQUFnQixFQUFTQSxFQUFHbWYsU0FBVyxTQUN0SDNJLFlBQWEsdUJBRWpCLEVBQUk5RixFQUFZMkYsWUFBWSxpQkFBa0IsQ0FDMUM1YixHQUFJLGNBQ0pyTSxRQUFTLG9CQUNUMEYsTUFBT3dMLEVBQUVvaEIsT0FBUyxVQUFZLE9BQzlCcEssYUFBYyxjQUNkQyxhQUFjalgsRUFBRW9oQixPQUFTLFVBQVksT0FDckNsSyxZQUFhLHVCQUVqQixFQUFJOUYsRUFBWTJGLFlBQVksaUJBQWtCLENBQzFDNWIsR0FBSSxpQkFDSnJNLFFBQVMsb0JBQ1QwRixNQUFPbUwsU0FBU0ssRUFBRXhXLE1BQU1nM0IsUUFDeEJ4SixhQUFjLGlCQUNkQyxhQUFjdFgsU0FBU0ssRUFBRXhXLE1BQU1nM0IsUUFDL0J0SixZQUFhLHVCQUVqQixFQUFJOUYsRUFBWTJGLFlBQVksaUJBQWtCLENBQzFDNWIsR0FBSSxTQUNKck0sUUFBUyxvQkFDVDBGLE1BQU8wd0IsRUFBVyxXQUFhNUksU0FBbUVBLFFBQXVCdHpCLEVBQ3pIZ3VCLGFBQWMsU0FDZEMsYUFBY2lPLEVBQVcsV0FBYTVJLFNBQW1FQSxRQUF1QnR6QixFQUNoSWt1QixZQUFhLHNCQUVqQmtPLEVBQU9wbEIsR0FnQ2YsQ0FpQkEsU0FBU2lrQixHQUFXeUIsRUFBVUMsRUFBZUMsR0FDekMsSUFDSSxJQUFJMUIsRUFBTSxJQUFJMkIsTUFDVkYsSUFDQXpCLEVBQUk0QixPQUFTSCxHQUNiQyxJQUNBMUIsRUFBSTZCLFFBQVVILEdBQ2xCMUIsRUFBSS9DLElBQU11RSxDQUNkLENBQ0EsTUFBTy9rQixHQUNIaWxCLFNBQWtFQSxHQUN0RSxDQUNKLENBb0JBLFNBQVN4UCxHQUFXcFcsR0FDaEI2YixHQUFnQjlGLEVBQVUvVixHQUM5QixDQUtBLFNBQVM0WCxHQUFZaEMsR0FDakJpQixHQUFhQyxLQUFLLGdCQUFpQiw4Q0FBOENsQix1REFBMkQsQ0FBQyxTQUFVLFdBQVl0WCxHQUFNd1IsRUFBVS9nQixVQUFNLE9BQVEsR0FBUSxZQUNyTSxHQUFVLFdBQU51UCxFQUFnQixFQUNoQixFQUFJOFMsRUFBWTJGLFlBQVksZUFBZ0IsQ0FDeEM1YixHQUFJLGVBQ0pyTSxRQUFTLGFBQ1QwRixNQUFPb2hCLEVBQ1BvQixhQUFjLFVBQVVwQixJQUN4QnFCLGFBQWMsU0FDZEMsWUFBYSxlQUVqQixJQUFJcGhCLFFBQVU4YixPQUFPZSxRQUFRQyxLQUFLaGYsSUFBSSxDQUFDLFFBQVMsaUJBQzFDZ2UsT0FBT2UsUUFBUUMsS0FBS2xlLElBQUksQ0FDMUJ4SixNQUFPNEssRUFBRTVLLE9BQVMwcUIsRUFBTyxLQUFPOWYsRUFBRTVLLE1BQ2xDK3FCLE9BQVFuZ0IsRUFBRW1nQixPQUFPb1AsUUFBUXJOLEdBQU1BLEVBQUVwQyxNQUFRQSxNQUU3Q2xxQixPQUFPeXJCLFNBQVNzRSxRQUNwQixDQUNKLEtBQ0osQ0FNQSxTQUFTNUQsR0FBVWpDLEVBQU1vUSxHQUNqQkEsSUFDQTFKLEdBQXVCMUcsSUFFM0IsRUFBSXhFLEVBQVkyRixZQUFZLGVBQWdCLENBQ3hDNWIsR0FBSSxhQUNKck0sUUFBUyxhQUNUMEYsTUFBT29oQixFQUNQb0IsYUFBYyxVQUFVcEIsSUFDeEJxQixhQUFjLE9BQ2RDLFlBQWEsZUFFakJpTCxjQUFjdkosR0FDZG9DLEdBQWtCeEUsVUFBVUMsSUFBSSxVQUNoQ3dFLEdBQW1CekUsVUFBVXRiLE9BQU8sVUFDcEMsSUFBSStxQixFQUFjclEsRUFBT0csRUFBVUgsR0FBUSxDQUFFQSxLQUFNLFdBQVl6VCxJQUFLLEtBQ2hFNmpCLElBQ0FDLEVBQVlyUSxLQUFPb1EsR0FFdkJuSyxHQUFnQm9LLEdBQ2hCbEwsR0FBZXZFLFVBQVVDLElBQUksd0JBQzdCcUgsR0FBT29JLGdCQUFnQixZQUN2QjdxQixNQUFNMGMsS0FBS29ELEdBQVMxRixpQkFBaUIsMkJBQTJCNWhCLEtBQUlta0IsR0FBS0EsRUFBRXVMLGFBQWEsa0JBQW1CLFVBQzNHM0YsR0FBZ0JvSSxHQUFlcFEsRUFDL0J6cEIsU0FBU3VvQixjQUFjLHdCQUF3QmMsWUFBYyxnQ0FDakUsQ0EwRUEsU0FBUzZGLEtBQ0wsSUFBSTFhLEVBQUlELEVBQUkrUixFQUFJQyxFQUFJOEwsRUFBSUMsR0FDeEIsRUFBSXJOLEVBQVkyRixZQUFZLGVBQWdCLENBQ3hDNWIsR0FBSSxpQkFDSnJNLFFBQVMsZUFDVGtvQixhQUFjLFdBQ2RDLGFBQWMsUUFDZEMsWUFBYSxpQkFFakIsSUFDSWlQLEVBQUtoNkIsU0FBU0MsY0FBYyxNQUNoQys1QixFQUFHOUksVUFGWSw0bEJBR2ZsQyxHQUFTMUQsWUFBWTBPLEdBQ3JCLElBQUlDLEVBQVVELEVBQUd6UixjQUFjLHVCQWlCL0IsR0FoQjBDLFFBQXpDL1QsRUFBS3dsQixFQUFHelIsY0FBYyxxQkFBa0MsSUFBUC9ULEdBQXlCQSxFQUFHdVUsaUJBQWlCLFFBQVNtUixJQUNoRSxRQUF2QzNsQixFQUFLeWxCLEVBQUd6UixjQUFjLG1CQUFnQyxJQUFQaFUsR0FBeUJBLEVBQUd3VSxpQkFBaUIsUUFBU29SLElBQ25ELFFBQWxEN1QsRUFBSzBULEVBQUd6UixjQUFjLDhCQUEyQyxJQUFQakMsR0FBeUJBLEVBQUd5QyxpQkFBaUIsUUFBU3FSLElBRXhFLFFBQXhDN1QsRUFBS3lULEVBQUd6UixjQUFjLG9CQUFpQyxJQUFQaEMsR0FBeUJBLEVBQUd3QyxpQkFBaUIsUUFBU0MsSUFDdkdKLEdBQXNCb1IsRUFBR3pSLGNBQWMsYUFBY3lSLEVBQUd6UixjQUFjLHVCQUF3QixlQUVuRCxRQUExQzhKLEVBQUsySCxFQUFHelIsY0FBYyxzQkFBbUMsSUFBUDhKLEdBQXlCQSxFQUFHdEosaUJBQWlCLFFBQVNzUixJQUNoRSxRQUF4Qy9ILEVBQUswSCxFQUFHelIsY0FBYyxvQkFBaUMsSUFBUCtKLEdBQXlCQSxFQUFHdkosaUJBQWlCLFNBQVMzaEIsR0FBTTZ5QixFQUFRakYsSUFBTTV0QixFQUFFb0csT0FBTzZiLGNBQ3BJbmEsTUFBTTBjLEtBQUtvTyxFQUFHMVEsaUJBQWlCLE9BQU81aEIsS0FBSW1rQixHQUFLQSxFQUFFOUMsaUJBQWlCLFFBQVEzaEIsR0FBTUEsRUFBRW9HLE9BQU9sQixXQUFhLE1BQ3RHMFksRUFBa0IyQyxRQUFRb0UsUUFBUUMsS0FBS2dPLEVBQUcxUSxpQkFBaUIsZUFBZ0IsQ0FDdkUyQyxZQUFhLEVBQ2JDLFdBQVksSUFDWkMsV0FBWSxFQUNaQyxVQUFXLEtBRVhtRCxLQUFjLENBQ2QsSUFBSStLLEVBQU1wckIsTUFBTTBjLEtBQUtvTyxFQUFHMVEsaUJBQWlCLDJCQUN6Q2dSLEVBQUk1eUIsS0FBSW1rQixHQUFLQSxFQUFFdUwsYUFBYSxrQkFBbUIsVUFDL0NrRCxFQUFJNXlCLEtBQUlta0IsR0FBS0EsRUFBRTlDLGlCQUFpQixRQUFTZ0osS0FDN0MsQ0FDQSxPQUFPaUksQ0FDWCxDQUNBLFNBQVNoUixHQUFldVIsR0FDcEIsSUFBSS9sQixFQUNKLElBQUlnbUIsRUFDNkMsUUFEcENobUIsRUFBTStsQixFQUFXMUksZUFDMUIwSSxFQUFXcHFCLGNBQWMwaEIscUJBQW1DLElBQVByZCxPQUFnQixFQUFTQSxFQUFHZ21CLE1BQ2pGQyxFQUFPLEtBQ1gsSUFBSyxJQUFJajZCLEtBQUtnNkIsUUFBcUNBLEVBQVEsR0FDdkIsSUFBNUJoNkIsRUFBRTJRLEtBQUtyUixRQUFRLFdBQ2YyNkIsRUFBT2o2QixFQUFFazZCLGFBR2pCLEdBQWEsT0FBVEQsRUFBZSxDQUNmRixFQUFXNXNCLGlCQUNYNHNCLEVBQVc3c0Isa0JBQ1gsSUFBSWl0QixFQUFlSixFQUFXL3NCLE9BQzlCLElBQUlvdEIsRUFBUyxJQUFJQyxXQUNqQkQsRUFBT2pCLE9BQVMsU0FBVXZ5QixHQUN0QixJQUFJWCxFQUFPVyxFQUFFb0csT0FBTytXLE9BQ3BCb1csRUFBYXhSLFFBQVEyUixhQUFlSCxFQUFheFIsUUFBUTFpQixLQUN6RGswQixFQUFheFIsUUFBUTFpQixLQUFPLGVBQzVCLElBQUlvTixFQUFJbVIsRUFBa0IyQyxRQUFRb1QsTUFBTSxDQUFFbjZCLEtBQU0scUJBQXNCbzZCLGNBQWVyRSxPQUFPc0UsbUJBQzVGQyxHQUFZejBCLGFBQW1DLEVBQVNBLEVBQUtuRixZQUFZaWpCLElBQ3JFMVEsRUFBRXNuQixVQUNGLElBQUk3RSxFQUFPL1IsRUFBT2pYLEtBQUtncEIsS0FDbkJ0MkIsU0FBU283QixzQkFBc0IsY0FDL0JwN0IsU0FBU3E3QixZQUFZLGNBQWMsRUFBTy9FLEdBRzFDdDJCLFNBQVNxN0IsWUFBWSxTQUFTLEVBQU8vRSxJQUV6QyxFQUFJclIsRUFBWTJGLFlBQVksaUJBQWtCLENBQzFDNWIsR0FBSSxRQUNKck0sUUFBUyxlQUNUMEYsTUFBTyxhQUNQd2lCLGFBQWMsYUFDZEMsYUFBYyxRQUNkQyxZQUFhLGlCQUdqQjRQLEVBQWF4UixRQUFRMWlCLEtBQU9rMEIsRUFBYXhSLFFBQVEyUixhQUNqREgsRUFBYXhSLFFBQVEyUixhQUFlLEdBQ3BDL0ksSUFBYyxJQUNmdUosSUFDQ3puQixFQUFFc25CLFVBQ0ZuVyxFQUFrQjJDLFFBQVFvVCxNQUFNLENBQzVCbjZCLEtBQU0sMkJBQTJCMDZCLEVBQU1qQyxTQUFXaUMsRUFBTWg2QixlQUU1RHE1QixFQUFheFIsUUFBUTFpQixLQUFPazBCLEVBQWF4UixRQUFRMlIsYUFDakRILEVBQWF4UixRQUFRMlIsYUFBZSxFQUFFLEdBRTlDLEVBQ0FGLEVBQU9XLGNBQWNkLEVBQ3pCLE1BRUlKLEdBQWVFLEVBRXZCLENBQ0EsU0FBU0YsR0FBZWp6QixHQUNwQixJQUFJb04sRUFDSnBOLEVBQUV1RyxpQkFDRixJQUFJbEgsT0FBTzVKLEdBQ1B1SyxFQUFFeXFCLGVBQ0Z6cUIsRUFBRStJLGNBQWMwaEIsaUJBQ2hCcHJCLEVBQXVELFFBQS9DK04sR0FBTXBOLEVBQUUrSSxlQUFpQi9JLEdBQUd5cUIscUJBQWtDLElBQVByZCxPQUFnQixFQUFTQSxFQUFHc2QsUUFBUSxlQUVuRzl4QixTQUFTbzdCLHNCQUFzQixjQUMvQnA3QixTQUFTcTdCLFlBQVksY0FBYyxFQUFPNTBCLEdBRzFDekcsU0FBU3E3QixZQUFZLFNBQVMsRUFBTzUwQixFQUU3QyxDQUNBLFNBQVMwekIsR0FBTy95QixHQUNaLElBQUlvTixFQUFJRCxFQUNSLElBQUkvRyxFQUFTcEcsRUFBRW9HLE9BQ2YsS0FBMkUsT0FBbkVBLGFBQXVDLEVBQVNBLEVBQU9ndUIsVUFDM0RodUIsRUFBeUYsUUFBL0VnSCxFQUFLaEgsYUFBdUMsRUFBU0EsRUFBTzJjLHFCQUFrQyxJQUFQM1YsRUFBZ0JBLEVBQUssS0FDdEhoSCxFQUFPaXVCLHlCQUNzRSxRQUE1RWxuQixFQUFLL0csYUFBdUMsRUFBU0EsRUFBT2t1QixrQkFBK0IsSUFBUG5uQixHQUF5QkEsRUFBR29uQixhQUFhbnVCLEVBQVFBLEVBQU9pdUIseUJBRWpKMUosSUFDSixDQUNBLFNBQVNtSSxHQUFTOXlCLEdBQ2QsSUFBSW9OLEVBQUlELEVBQ1IsSUFBSS9HLEVBQVNwRyxFQUFFb0csT0FDZixLQUEyRSxPQUFuRUEsYUFBdUMsRUFBU0EsRUFBT2d1QixVQUMzRGh1QixFQUF5RixRQUEvRWdILEVBQUtoSCxhQUF1QyxFQUFTQSxFQUFPMmMscUJBQWtDLElBQVAzVixFQUFnQkEsRUFBSyxLQUN0SGhILEVBQU9vdUIscUJBQ3NFLFFBQTVFcm5CLEVBQUsvRyxhQUF1QyxFQUFTQSxFQUFPa3VCLGtCQUErQixJQUFQbm5CLEdBQXlCQSxFQUFHb25CLGFBQWFudUIsRUFBT291QixtQkFBb0JwdUIsSUFFN0p1a0IsSUFDSixDQUNBLFNBQVNxSSxHQUFXaHpCLEdBQ2hCLElBQUlvTixHQUNKLEVBQUl5USxFQUFZMkYsWUFBWSxlQUFnQixDQUN4QzViLEdBQUksb0JBQ0pyTSxRQUFTLGVBQ1Rrb0IsYUFBYyxxQkFDZEMsYUFBYyxRQUNkQyxZQUFhLGlCQUVqQixJQUFJdmQsRUFBU3BHLEVBQUVvRyxPQUNmLEtBQTJFLE9BQW5FQSxhQUF1QyxFQUFTQSxFQUFPZ3VCLFVBQzNEaHVCLEVBQXlGLFFBQS9FZ0gsRUFBS2hILGFBQXVDLEVBQVNBLEVBQU8yYyxxQkFBa0MsSUFBUDNWLEVBQWdCQSxFQUFLLEtBQzFId1EsRUFBa0IyQyxRQUFRb0UsUUFBUThQLFlBQVlydUIsRUFBTythLGNBQWMsd0JBQXdCelosVUFDM0Z0QixFQUFPc3VCLFVBQVksR0FDbkIvSixJQUNKLENBQ0EsU0FBUzNDLEtBQ0xMLEdBQVNpRyxJQUFNLENBQUNyckIsSUFDWixJQUFLQSxFQUNELE9BQU84YixPQUFPQyxRQUFRQyxPQUFPLGlDQUdqQyxHQURBaGMsR0FBSyxJQUNENUssSUFBU0EsR0FBTTgxQixNQUNmLElBQUssSUFBSWtILEtBQWVoOUIsR0FBTTgxQixNQUMxQixHQUFJbHJCLEVBQUU0SSxNQUFNLElBQUltUixPQUFPcVksRUFBWWhILE1BQU8sTUFDdEMsT0FBT2dILEVBQVlwSSxJQUkvQixHQUFJdE4sS0FBNkMsWUFBaENELEVBQVU0VixrQkFDdkIsSUFBSyxJQUFJRCxLQUFlNVcsRUFBZ0I4VyxjQUNwQyxHQUFJdHlCLEVBQUU0SSxNQUFNLElBQUltUixPQUFPcVksRUFBWWhILE1BQU8sTUFDdEMsT0FBT2dILEVBQVlwSSxJQUkvQixPQUFPbE8sT0FBT0MsUUFBUUMsT0FBTyxnQ0FDaEMsRUFwQmMsQ0FvQlp3SixHQUFhOW1CLE1BQ3BCLENBQ0EsU0FBU21qQixHQUFxQmtCLElBQzFCLEVBQUl6SCxFQUFZMkYsWUFBWSxlQUFnQixDQUN4QzViLEdBQUksYUFDSnJNLFFBQVMsYUFDVDBGLE1BQU9xa0IsRUFDUDdCLGFBQWMsVUFBVTZCLElBQ3hCNUIsYUFBYyxPQUNkQyxZQUFhLGVBRWpCLElBQUl0a0IsRUFBT2twQixLQUFLNkksVUFBVTVPLEVBQVU4QyxJQUNwQyxJQUFJd1AsR0FBVyxFQUFJblgsRUFBUzRDLFNBQVMsZUFDckN1VSxFQUFTejFCLEtBQUtBLElBQ2QsRUFBSXNlLEVBQVM0QyxTQUFTLFFBQVFobUIsT0FBT3U2QixHQUNyQ0EsRUFBU0MsU0FDVG44QixTQUFTcTdCLFlBQVksUUFDckJhLEVBQVNudEIsU0FDVGlXLEVBQWtCMkMsUUFBUW9ULE1BQU0sQ0FBRW42QixLQUFNLGlCQUFpQjhyQixtQkFDN0QsQ0FDQSxTQUFTNkMsS0FDTCxRQUFTdnZCLFNBQVN1b0IsY0FBYyx3QkFDcEMsQ0FDQSxTQUFTNlQsR0FBZ0JoMUIsR0FDckJBLEVBQUV1RyxpQkFDRnZHLEVBQUVzRyxpQkFDTixDQVFBLFNBQVMydUIsR0FBWUMsR0FDYkEsRUFBT2pTLFVBQVUxcUIsU0FBUyxlQUMxQjI4QixFQUFPalMsVUFBVXRiLE9BQU8sYUFDeEJ1dEIsRUFBT25ULFFBQVExaUIsS0FBTzYxQixFQUFPblQsUUFBUTJSLGFBQ3JDd0IsRUFBT25ULFFBQVEyUixhQUFlLEdBRXRDLENBMkRBLFNBQVN0SixHQUFjNXdCLEdBQ25CLElBQUkyN0IsRUFBV3Y4QixTQUFTQyxjQUFjLFlBR3RDLE9BRkFXLEVBQU9BLEVBQUs0N0IsT0FDWkQsRUFBU3JMLFVBQVl0d0IsRUFDZDI3QixFQUFTeEwsUUFBUTBMLFVBQzVCLENBQ0EsU0FBU3ZCLEdBQVl3QixFQUFRekwsRUFBVTBMLEdBbUJuQyxTQUFTQyxJQUVMQyxNQUFNLGdDQUFpQyxDQUNuQ2xzQixPQUFRLE9BQ1Jtc0IsS0FBTSxPQUNOQyxRQUFTLENBQ0wsZUFBZ0IsbUJBQ2hCQyxjQUFlLDZCQUVuQng0QixLQUFNbXJCLEtBQUs2SSxVQUFVLENBQ2pCcm5CLEtBQU0sU0FDTjhyQixNQUFPUCxFQUFPejFCLE1BQU0sS0FBSyxPQUc1QndkLE1BQUt5WSxJQUNOLElBQUtBLEVBQVM5cUIsR0FDVixNQUFNLElBQUl4QixNQUFNc3NCLEVBQVNDLFlBRTdCLE9BQU9ELENBQVEsSUFFZHpZLE1BQUtvSCxHQUFLQSxFQUFFdVIsU0FDWjNZLEtBQUt3TSxHQUNMb00sT0FBTXhFLElBQ1B2VCxFQUFTZ1ksT0FBT0MsSUFBSTFFLEdBQ3BCOEQsRUFBYzlELEVBQUksR0FFMUIsQ0E1Q0s2RCxFQUlBMzFCLGFBQWF5MkIsUUFBUSxxQkFZdEJaLElBWEFsUyxHQUFhQyxLQUFLLHVCQUF3QixrTUFBbU0sQ0FBQyxRQUFTLFdBQVd4WSxJQUNwUCxVQUFOQSxHQUNBcEwsYUFBYTAyQixRQUFRLG9CQUFxQixRQUMxQ2IsS0FHQUQsRUFBYyxJQUFJL3JCLE1BQU0sdUNBQzVCLElBWEorckIsRUFBYyxJQUFJL3JCLE1BQU0sZUE0Q2hDLENBQ0EsU0FBU2dZLEdBQXNCMFQsRUFBUXJDLEVBQVN5RCxHQUM1QyxDQUFDLFlBQWEsV0FBWSxZQUFhLFFBQVFDLFNBQVFDLElBQ25EdEIsRUFBT3ZULGlCQUFpQjZVLEVBQVd4QixJQUFpQixFQUFNLElBRTlELENBQUMsWUFBYSxZQUFZdUIsU0FBUUMsSUFDOUJ0QixFQUFPdlQsaUJBQWlCNlUsR0FBV3gyQixHQWxJM0MsU0FBbUJrMUIsR0FDVkEsRUFBT2pTLFVBQVUxcUIsU0FBUyxlQUMzQjI4QixFQUFPalMsVUFBVUMsSUFBSSxhQUNyQmdTLEVBQU9uVCxRQUFRMlIsYUFBZXdCLEVBQU9uVCxRQUFRMWlCLEtBQzdDNjFCLEVBQU9uVCxRQUFRMWlCLEtBQU8sb0JBRTlCLENBNEhnRG8zQixDQUFVdkIsS0FBUyxFQUFNLElBRXJFQSxFQUFPdlQsaUJBQWlCLGFBQWEzaEIsR0FBS2kxQixHQUFZQyxLQUFTLEdBQy9EQSxFQUFPdlQsaUJBQWlCLFFBQVEzaEIsSUFDNUJpMUIsR0FBWUMsR0F4SHBCLFNBQW9CbDFCLEVBQUdrMUIsRUFBUXJDLEVBQVN5RCxHQUNwQyxJQUNJLEdBQUl0MkIsRUFBRTAyQixjQUFnQjEyQixFQUFFMDJCLGFBQWFDLE1BQU1sOUIsT0FBUyxFQUFHLENBQ25ELElBQUltOUIsRUFBTzUyQixFQUFFMDJCLGFBQWFDLE1BQU0sR0FDNUJuRCxFQUFTLElBQUlDLFdBQ2pCRCxFQUFPcUQsVUFBWSxLQUNmLElBQUl6cEIsRUFDSjhuQixFQUFPblQsUUFBUTJSLGFBQWV3QixFQUFPblQsUUFBUTFpQixLQUM3QzYxQixFQUFPblQsUUFBUTFpQixLQUFPLGVBQ3RCLElBQUlvTixFQUFJbVIsRUFBa0IyQyxRQUFRb1QsTUFBTSxDQUNwQ242QixLQUFNLHFCQUNObzZCLGNBQWVyRSxPQUFPc0UsbUJBRTFCQyxHQUFxQyxRQUF4QjFtQixFQUFLb21CLEVBQU9yVyxjQUEyQixJQUFQL1AsT0FBZ0IsRUFBU0EsRUFBR2xULFlBQVlpakIsSUFDakYyWixFQUFRM1osRUFBT2pYLEtBQUtncEIsS0FBTXppQixFQUFFLElBQzdCeW5CLElBQ0N6bkIsRUFBRXNuQixVQUNGblcsRUFBa0IyQyxRQUFRb1QsTUFBTSxDQUM1Qm42QixLQUFNLDJCQUEyQjA2QixFQUFNakMsU0FBV2lDLEVBQU1oNkIsZUFFNURnN0IsRUFBT25ULFFBQVExaUIsS0FBTzYxQixFQUFPblQsUUFBUTJSLGFBQ3JDd0IsRUFBT25ULFFBQVEyUixhQUFlLEVBQUUsR0FDbEMsRUFFTkYsRUFBT1csY0FBY3lDLEVBQ3pCLE1BQ1M1MkIsRUFBRTAyQixjQUFnQjEyQixFQUFFMDJCLGFBQWF0RCxNQUFNMzVCLFFBQVUsR0FDdER1RyxFQUFFMDJCLGFBQWF0RCxNQUFNLEdBQUcyRCxhQUFZeDBCLElBRWhDdTBCLEVBRFUxTSxHQUFjN25CLEdBQ1pxckIsSUFBSSxHQUc1QixDQUNBLE1BQU82RCxHQUNIN1QsRUFBa0IyQyxRQUFRb1QsTUFBTSxDQUFFbjZCLEtBQU0sOEJBQ3hDMGtCLEVBQVNnWSxPQUFPaEMsTUFBTXpDLEVBQzFCLENBQ0EsU0FBU3FGLEVBQVE1SCxFQUFNeUUsSUFDbkIsRUFBSTlWLEVBQVkyRixZQUFZLGlCQUFrQixDQUMxQzViLEdBQUksT0FDSnJNLFFBQVMsZUFDVDBGLE1BQU8sYUFDUHdpQixhQUFjLGFBQ2RDLGFBQWMsT0FDZEMsWUFBYSxpQkFFYmdRLEdBQ0FBLEVBQU1JLFVBRU5sQixJQUNBQSxFQUFRakYsSUFBTXNCLEdBRWxCZ0csRUFBT29CLEdBQVlwSCxFQUNuQmdHLEVBQU9uVCxRQUFRMWlCLEtBQU82MUIsRUFBT25ULFFBQVEyUixhQUNyQ3dCLEVBQU9uVCxRQUFRMlIsYUFBZSxHQUM5Qi9JLElBQ0osQ0FDSixDQWdFUXFNLENBQVdoM0IsRUFBR2sxQixFQUFRckMsRUFBU3lELEVBQVMsSUFDekMsRUFDUCxDQUNBLFNBQVMzVixHQUFlcmYsRUFBTzIxQixHQUMzQixJQUFJN3BCLEVBQUlELEVBQ0o3TCxFQUFNeUgsZ0JBQ040aEIsS0FDQS94QixTQUFTa3BCLGVBQWV4Z0IsRUFBTThFLE9BQU8yYixRQUFRdVAsU0FBU3JQLFlBQzRCLFFBQTdFOVUsRUFBeUIsUUFBbkJDLEVBQUs2cEIsRUFBR2gyQixhQUEwQixJQUFQbU0sT0FBZ0IsRUFBU0EsRUFBR2xULGtCQUErQixJQUFQaVQsRUFBZ0JBLEVBQUssUUFFdkgsQ0FDQSxTQUFTbVUsR0FBaUJoZ0IsRUFBTzIxQixHQUM3QixJQUFJN3BCLEVBQUlELEVBQ0o3TCxFQUFNeUgsZ0JBQ05uUSxTQUFTa3BCLGVBQWV4Z0IsRUFBTThFLE9BQU93QixHQUFLLFlBQVlxYSxZQUFjLEdBQXdCLFFBQXBCN1UsRUFBSzZwQixFQUFHMVYsY0FBMkIsSUFBUG5VLE9BQWdCLEVBQVNBLEVBQUcsUUFBNkIsUUFBcEJELEVBQUs4cEIsRUFBRzFWLGNBQTJCLElBQVBwVSxPQUFnQixFQUFTQSxFQUFHLEtBQ2pNd2QsS0FFUixDQUNBLFNBQVN6SixLQUNMeUosSUFDSixDLGtDQ3J3REEsSUFBSXBPLEVBQWEvZ0IsTUFBUUEsS0FBSytnQixXQUFjLFNBQVVDLEVBQVNDLEVBQVlDLEVBQUdDLEdBRTFFLE9BQU8sSUFBS0QsSUFBTUEsRUFBSUUsV0FBVSxTQUFVQyxFQUFTQyxHQUMvQyxTQUFTQyxFQUFVOWIsR0FBUyxJQUFNK2IsRUFBS0wsRUFBVU0sS0FBS2hjLEdBQVMsQ0FBRSxNQUFPakIsR0FBSzhjLEVBQU85YyxFQUFJLENBQUUsQ0FDMUYsU0FBU2tkLEVBQVNqYyxHQUFTLElBQU0rYixFQUFLTCxFQUFpQixNQUFFMWIsR0FBUyxDQUFFLE1BQU9qQixHQUFLOGMsRUFBTzljLEVBQUksQ0FBRSxDQUM3RixTQUFTZ2QsRUFBS0csR0FKbEIsSUFBZWxjLEVBSWFrYyxFQUFPQyxLQUFPUCxFQUFRTSxFQUFPbGMsUUFKMUNBLEVBSXlEa2MsRUFBT2xjLE1BSmhEQSxhQUFpQnliLEVBQUl6YixFQUFRLElBQUl5YixHQUFFLFNBQVVHLEdBQVdBLEVBQVE1YixFQUFRLEtBSWpCb2MsS0FBS04sRUFBV0csRUFBVyxDQUM3R0YsR0FBTUwsRUFBWUEsRUFBVS9nQixNQUFNNGdCLEVBQVNDLEdBQWMsS0FBS1EsT0FDbEUsR0FDSixFQUNJaWEsRUFBVTE3QixNQUFRQSxLQUFLMDdCLFFBQVcsU0FBVTMwQixFQUFHdkMsR0FDL0MsSUFBSXlNLEVBQUksQ0FBQyxFQUNULElBQUssSUFBSW5ULEtBQUtpSixFQUFPaWIsT0FBT3pWLFVBQVVtRSxlQUFlbEUsS0FBS3pGLEVBQUdqSixJQUFNMEcsRUFBRXRILFFBQVFZLEdBQUssSUFDOUVtVCxFQUFFblQsR0FBS2lKLEVBQUVqSixJQUNiLEdBQVMsTUFBTGlKLEdBQXFELG1CQUFqQ2liLE9BQU8yWixzQkFDdEIsS0FBSS85QixFQUFJLEVBQWIsSUFBZ0JFLEVBQUlra0IsT0FBTzJaLHNCQUFzQjUwQixHQUFJbkosRUFBSUUsRUFBRUcsT0FBUUwsSUFDM0Q0RyxFQUFFdEgsUUFBUVksRUFBRUYsSUFBTSxHQUFLb2tCLE9BQU96VixVQUFVcXZCLHFCQUFxQnB2QixLQUFLekYsRUFBR2pKLEVBQUVGLE1BQ3ZFcVQsRUFBRW5ULEVBQUVGLElBQU1tSixFQUFFakosRUFBRUYsSUFGNEIsQ0FJdEQsT0FBT3FULENBQ1gsRUFDQStRLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFemMsT0FBTyxJQUN0RHljLEVBQVE0QixvQkFBc0I1QixFQUFReUMsbUJBQXFCekMsRUFBUThGLGdCQUFhLEVBU2hGOUYsRUFBUThGLFdBSlMsU0FBVWdULEVBQVdwcEIsRUFBSyxDQUFDLEdBQ3hDLElBQUksYUFBRXFXLEVBQVksYUFBRUMsRUFBWSxZQUFFQyxFQUF1QixZQUFFMFQsRUFBdUIsR0FBRXp2QixFQUFFLFFBQUVyTSxFQUFPLE1BQUUwRixHQUFVbU0sRUFBaUI4cEIsRUFBTzlwQixFQUFJLENBQUMsZUFBZ0IsZUFBZ0IsY0FBZSxjQUFlLEtBQU0sVUFBVyxVQUN2TmtxQixRQUFRQyxNQUFNLGlDQUFrQzc3QixVQUNwRCxFQXdCQWdpQixFQUFReUMsbUJBdEJSLFdBQ0ksT0FBTzVELEVBQVUvZ0IsVUFBTSxPQUFRLEdBQVEsWUFZbkMsSUFBSXpCLFFBQVVza0IsT0FBT2UsUUFBUW9ZLE1BQU1uM0IsSUFBSSxDQUFFNmYsYUFBYyxPQUN2RCxJQUFLbm1CLEVBQUVtbUIsYUFBYyxDQUNqQixJQUFJQSxFQWJSLFdBRUksSUFBSXVYLEVBQWEsSUFBSUMsV0FBVyxJQUNoQ0MsT0FBT0MsZ0JBQWdCSCxHQUV2QixJQURBLElBQUkxcEIsRUFBTSxHQUNEM1UsRUFBSSxFQUFHQSxFQUFJcStCLEVBQVdoK0IsU0FBVUwsRUFDckMyVSxHQUFPMHBCLEVBQVdyK0IsR0FBR2MsU0FBUyxJQUdsQyxPQUFPNlQsQ0FDWCxDQUd1QjhwQixHQUVuQixhQURNeFosT0FBT2UsUUFBUW9ZLE1BQU1yMkIsSUFBSSxDQUFFK2UsaUJBQzFCQSxDQUNYLENBQ0EsT0FBT25tQixFQUFFbW1CLFlBQ2IsR0FDSixFQXdGQXhDLEVBQVE0QixvQkF0RlIsU0FBNkJsUyxHQUN6QixPQUFPbVAsRUFBVS9nQixLQUFNRSxlQUFXLEdBQVEsV0FBVyxnQkFBRTZqQixFQUFlLG1CQUFFQyxFQUFrQixjQUFFRyxFQUFhLGFBQUVDLEVBQVksZUFBRUUsRUFBYyxXQUFFRyxFQUFVLGFBQUVDLEVBQVksY0FBRUUsSUFDM0paLEdBR0osV0FHSSxTQUFTc1ksS0FBUXI4QixHQUNiLElBQUkyUixFQUM0QixRQUEvQkEsRUFBSzJxQixXQUFXQyxpQkFBOEIsSUFBUDVxQixHQUF5QkEsRUFBRzlTLEtBQUtvQixVQUM3RSxDQXlCQSxTQUFTdThCLEVBQVczMkIsR0FDaEIsSUFBS0EsRUFBTTQyQixVQUNQLE9BQ0osSUFBSTl4QixFQUFVOUUsRUFBTTYyQixlQUFpQjcyQixFQUFNOEUsUUFDM0MsRUFBSXNYLEVBQVE4RixZQUFZLHNCQUF1QixDQUMzQ0MsYUFBY3JkLEVBQU8yYixRQUFRcVcsaUJBQW1CaHlCLEVBQU93QixJQUFNLG1CQUM3RDhiLGFBQWMsUUFDZEMsWUFBYXZkLEVBQU8yYixRQUFRc1csc0JBQXdCLGdCQUNwRGhCLFlBQWFqeEIsRUFBTzJiLFFBQVF1VyxvQkFBc0JoM0IsRUFBTVMsT0FDeEQ2RixHQUFJeEIsRUFBTzJiLFFBQVFxVyxpQkFBbUJoeUIsRUFBT3dCLElBQU0sbUJBQ25Eck0sUUFBUzZLLEVBQU8yYixRQUFRc1csc0JBQXdCLGdCQUNoRHAzQixNQUFPbUYsRUFBTzJiLFFBQVF1VyxvQkFFOUIsQ0FDQSxHQTNDQVAsV0FBV0MsVUFBWUQsV0FBV0MsV0FBYSxHQUsvQ0YsRUFBSyxLQUFNLElBQUlySSxNQWVmcUksRUFBSyxTQUFVLGVBZEksQ0FDZlMsY0FBZTNVLFNBQVNDLEtBQUs1WSxRQUFRLGNBQWUsTUFDcER1dEIsVUFBVzVVLFNBQVM2VSxTQUFTeHRCLFFBQVEsY0FBZSxNQUNwRHl0QixXQUFZLEtBQ1pDLFFBQVN6WSxFQUNUMFksZ0JBQWlCLENBQ2JqaEMsTUFBT2dvQixFQUNQa1osV0FBWWpaLEVBQ1prWixtQkFBb0I3WSxFQUNwQjhZLGlCQUFrQmpaLEVBQ2xCa1osT0FBUXBWLFNBQVNxVixLQUNqQkMsWUFBYTlZLEtBSXJCMUMsRUFBUThGLFdBQWEsU0FBVWdULEVBQVdwcEIsRUFBSyxDQUFDLEdBQzVDLElBQUksYUFBRXFXLEVBQVksYUFBRUMsRUFBWSxZQUFFQyxFQUF1QixZQUFFMFQsRUFBdUIsR0FBRXp2QixFQUFFLFFBQUVyTSxFQUFPLE1BQUUwRixHQUFVbU0sRUFBSStyQixFQUFhakMsRUFBTzlwQixFQUFJLENBQUMsZUFBZ0IsZUFBZ0IsY0FBZSxjQUFlLEtBQU0sVUFBVyxVQUN2TixJQUFJZ3NCLEVBQVk1YixPQUFPNmIsT0FBTyxDQUFFenhCLEtBQzVCck0sVUFDQTBGLFNBQVNrNEIsR0FDYjdCLFFBQVFDLE1BQU0sc0JBQXVCZixFQUFXNEMsR0FDaER0QixFQUFLLFFBQVN0QixFQUFXNEMsRUFDN0IsRUFlSTdaLEVBQWlCLENBQ2pCLElBQUkrWixFQUFrQixJQUFJQyxJQUN0QkMsRUFBVyxJQUFJQyxrQkFBaUIsQ0FBQ0MsRUFBV0MsS0FDNUMsSUFBSyxJQUFJN1csS0FBUWxxQixTQUFTc3BCLGlCQUFpQiwyQ0FDbENvWCxFQUFnQk0sSUFBSTlXLEtBQ3JCQSxFQUFLbkIsaUJBQWlCLFFBQVNzVyxHQUMvQm5WLEVBQUtuQixpQkFBaUIsV0FBWXNXLEdBQ2xDblYsRUFBS0csVUFBVUMsSUFBSSxpQkFDbkJvVyxFQUFnQnBXLElBQUlKLEdBRTVCLElBRUosSUFBSStXLEVBQTBCOUosYUFBWSxXQUNWLGFBQXhCbjNCLFNBQVNraEMsYUFDVGxMLGNBQWNpTCxHQUNkalYsSUFFUixHQUFHLElBQ0gsU0FBU0EsSUFDTDRVLEVBQVNPLFFBQVFuaEMsU0FBU3dFLEtBQU0sQ0FDNUI0OEIsV0FBVyxFQUNYQyxTQUFTLElBRWIsSUFBSyxJQUFJblgsS0FBUWxxQixTQUFTc3BCLGlCQUFpQix1QkFDbENvWCxFQUFnQk0sSUFBSTlXLEtBQ3JCQSxFQUFLbkIsaUJBQWlCLFFBQVNzVyxHQUMvQm5WLEVBQUtuQixpQkFBaUIsV0FBWXNXLEdBQ2xDblYsRUFBS0csVUFBVUMsSUFBSSxpQkFDbkJvVyxFQUFnQnBXLElBQUlKLEdBR2hDLENBQ0osQ0FDSixDQWhGSW9YLEVBaUZSLEdBQ0osQyw0QkMzSUExYyxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRXpjLE9BQU8sSUFDdER5YyxFQUFRK0UsbUJBQXFCL0UsRUFBUXljLFlBQWN6YyxFQUFRMGMsa0JBQW9CMWMsRUFBUTJjLG9CQUFpQixFQUN4RzNjLEVBQVEyYyxlQUFpQixpQkFDekIzYyxFQUFRMGMsa0JBQW9CLHlCQUM1QjFjLEVBQVF5YyxZQUFjLGlDQUN0QnpjLEVBQVErRSxtQkFBcUIvRSxFQUFRMmMsYyw0QkNMckM3YyxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRXpjLE9BQU8sSUFDdER5YyxFQUFRbVgsbUJBQWdCLEVBQ3hCblgsRUFBUW1YLGNBQWdCLENBQ3BCLENBQ0lsSCxNQUFPLDhIQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsb0JBRVosQ0FDSTNNLE1BQU8sbURBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxtQkFFWixDQUNJM00sTUFBTyxTQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsZ0JBRVosQ0FDSTNNLE1BQU8sT0FDUHBCLElBQUssMERBQ0wrTixPQUFRLHFCQUVaLENBQ0kzTSxNQUFPLFFBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSw0QkFFWixDQUNJM00sTUFBTyx3Q0FDUHBCLElBQUssMERBQ0wrTixPQUFRLHVCQUVaLENBQ0kzTSxNQUFPLHlCQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEscUJBRVosQ0FDSTNNLE1BQU8saUJBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxzQkFFWixDQUNJM00sTUFBTyxNQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsaUJBRVosQ0FDSTNNLE1BQU8sZ0JBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxrQkFFWixDQUNJM00sTUFBTyxZQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsb0JBRVosQ0FDSTNNLE1BQU8sWUFDUHBCLElBQUssMERBQ0wrTixPQUFRLG9CQUVaLENBQ0kzTSxNQUFPLG9CQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEscUJBRVosQ0FDSTNNLE1BQU8sd0JBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSxzQkFFWixDQUNJM00sTUFBTyxjQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsd0JBRVosQ0FDSTNNLE1BQU8sT0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLGdCQUVaLENBQ0kzTSxNQUFPLDBCQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsb0JBRVosQ0FDSTNNLE1BQU8sMEZBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxzQkFFWixDQUNJM00sTUFBTyxpREFDUHBCLElBQUssd0RBQ0wrTixPQUFRLG1DQUVaLENBQ0kzTSxNQUFPLHNEQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsd0JBRVosQ0FDSTNNLE1BQU8sa0JBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxjQUVaLENBQ0kzTSxNQUFPLGNBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxpQkFFWixDQUNJM00sTUFBTyx1QkFDUHBCLElBQUssd0RBQ0wrTixPQUFRLGlCQUVaLENBQ0kzTSxNQUFPLCtCQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsZ0JBRVosQ0FDSTNNLE1BQU8sUUFDUHBCLElBQUssMERBQ0wrTixPQUFRLGlCQUVaLENBQ0kzTSxNQUFPLGlCQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEscUJBRVosQ0FDSTNNLE1BQU8saUJBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSxvQkFFWixDQUNJM00sTUFBTyxzQkFDUHBCLElBQUssd0RBQ0wrTixPQUFRLGtCQUVaLENBQ0kzTSxNQUFPLFFBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxzQkFFWixDQUNJM00sTUFBTyxNQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsb0JBRVosQ0FDSTNNLE1BQU8sc0JBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxpQkFFWixDQUNJM00sTUFBTyxlQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsZ0JBRVosQ0FDSTNNLE1BQU8sU0FDUHBCLElBQUssMERBQ0wrTixPQUFRLG9CQUVaLENBQ0kzTSxNQUFPLFVBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSxvQkFFWixDQUNJM00sTUFBTyxpRkFDUHBCLElBQUssd0RBQ0wrTixPQUFRLHNCQUVaLENBQ0kzTSxNQUFPLDJDQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsY0FFWixDQUNJM00sTUFBTyw2Q0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLG9CQUVaLENBQ0kzTSxNQUFPLHlDQUNQcEIsSUFBSywwREFDTCtOLE9BQVEscUJBRVosQ0FDSTNNLE1BQU8sV0FDUHBCLElBQUssMERBQ0wrTixPQUFRLGVBRVosQ0FDSTNNLE1BQU8sK0NBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxpQkFFWixDQUNJM00sTUFBTyxzQ0FDUHBCLElBQUssMERBQ0wrTixPQUFRLG9CQUVaLENBQ0kzTSxNQUFPLDJEQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsdUJBRVosQ0FDSTNNLE1BQU8sc0JBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxvQkFFWixDQUNJM00sTUFBTyxVQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsa0JBRVosQ0FDSTNNLE1BQU8sMkJBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSxtQkFFWixDQUNJM00sTUFBTyxpQ0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLHFCQUVaLENBQ0kzTSxNQUFPLE9BQ1BwQixJQUFLLHdEQUNMK04sT0FBUSwwQkFFWixDQUNJM00sTUFBTyw2QkFDUHBCLElBQUssMERBQ0wrTixPQUFRLGtCQUVaLENBQ0kzTSxNQUFPLHlHQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsZ0JBRVosQ0FDSTNNLE1BQU8sMEJBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxnQkFFWixDQUNJM00sTUFBTyx3R0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLGtCQUVaLENBQ0kzTSxNQUFPLHdCQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsNEJBRVosQ0FDSTNNLE1BQU8sMEJBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxpQkFFWixDQUNJM00sTUFBTyxVQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsZ0JBRVosQ0FDSTNNLE1BQU8sTUFDUHBCLElBQUssd0RBQ0wrTixPQUFRLGtCQUVaLENBQ0kzTSxNQUFPLHVEQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsdUJBRVosQ0FDSTNNLE1BQU8sUUFDUHBCLElBQUssMERBQ0wrTixPQUFRLHdCQUVaLENBQ0kzTSxNQUFPLFFBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSwwQkFFWixDQUNJM00sTUFBTyxpQkFDUHBCLElBQUssd0RBQ0wrTixPQUFRLGdCQUVaLENBQ0kzTSxNQUFPLGlDQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsc0JBRVosQ0FDSTNNLE1BQU8sY0FDUHBCLElBQUssMERBQ0wrTixPQUFRLHlCQUVaLENBQ0kzTSxNQUFPLG9DQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsa0JBRVosQ0FDSTNNLE1BQU8sWUFDUHBCLElBQUssd0RBQ0wrTixPQUFRLHFCQUVaLENBQ0kzTSxNQUFPLFNBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxnQkFFWixDQUNJM00sTUFBTyxPQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsZ0JBRVosQ0FDSTNNLE1BQU8sUUFDUHBCLElBQUssd0RBQ0wrTixPQUFRLGdCQUVaLENBQ0kzTSxNQUFPLE1BQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxpQkFFWixDQUNJM00sTUFBTyxTQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsaUJBRVosQ0FDSTNNLE1BQU8sNENBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxlQUVaLENBQ0kzTSxNQUFPLCtDQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsa0JBRVosQ0FDSTNNLE1BQU8sU0FDUHBCLElBQUssMERBQ0wrTixPQUFRLHNCQUVaLENBQ0kzTSxNQUFPLHdIQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsZ0JBRVosQ0FDSTNNLE1BQU8sOEJBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSxzQkFFWixDQUNJM00sTUFBTywwQ0FDUHBCLElBQUssMERBQ0wrTixPQUFRLHNCQUVaLENBQ0kzTSxNQUFPLDBCQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsb0JBRVosQ0FDSTNNLE1BQU8sYUFDUHBCLElBQUssMERBQ0wrTixPQUFRLG1CQUVaLENBQ0kzTSxNQUFPLGNBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxtQkFFWixDQUNJM00sTUFBTyx5QkFDUHBCLElBQUssd0RBQ0wrTixPQUFRLHNCQUVaLENBQ0kzTSxNQUFPLGlEQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsb0JBRVosQ0FDSTNNLE1BQU8sd0NBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxlQUVaLENBQ0kzTSxNQUFPLE9BQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxtQkFFWixDQUNJM00sTUFBTywrQkFDUHBCLElBQUssMERBQ0wrTixPQUFRLHVCQUVaLENBQ0kzTSxNQUFPLGlCQUNQcEIsSUFBSyxzREFDTCtOLE9BQVEscUJBRVosQ0FDSTNNLE1BQU8sV0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLDRCQUVaLENBQ0kzTSxNQUFPLGNBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSx5QkFFWixDQUNJM00sTUFBTyxTQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsa0JBRVosQ0FDSTNNLE1BQU8sU0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLGdCQUVaLENBQ0kzTSxNQUFPLFlBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxvQkFFWixDQUNJM00sTUFBTyw0Q0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLGlCQUVaLENBQ0kzTSxNQUFPLFdBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxnQkFFWixDQUNJM00sTUFBTyxRQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEsZUFFWixDQUNJM00sTUFBTyxZQUNQcEIsSUFBSyx3REFDTCtOLE9BQVEscUJBRVosQ0FDSTNNLE1BQU8sZ0JBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxpQkFFWixDQUNJM00sTUFBTyxTQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsbUJBRVosQ0FDSTNNLE1BQU8sU0FDUHBCLElBQUssd0RBQ0wrTixPQUFRLGtCQUVaLENBQ0kzTSxNQUFPLGlCQUNQcEIsSUFBSywwREFDTCtOLE9BQVEscUJBRVosQ0FDSTNNLE1BQU8sU0FDUHBCLElBQUssMERBQ0wrTixPQUFRLHFCQUVaLENBQ0kzTSxNQUFPLFdBQ1BwQixJQUFLLHdEQUNMK04sT0FBUSxxQkFFWixDQUNJM00sTUFBTyxrQkFDUHBCLElBQUssMERBQ0wrTixPQUFRLG9CQUVaLENBQ0kzTSxNQUFPLHNDQUNQcEIsSUFBSywwREFDTCtOLE9BQVEsaUJBRVosQ0FDSTNNLE1BQU8scUJBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSx1QkFFWixDQUNJM00sTUFBTyxxRUFDUHBCLElBQUssd0RBQ0wrTixPQUFRLGlCQUVaLENBQ0kzTSxNQUFPLFVBQ1BwQixJQUFLLDBEQUNMK04sT0FBUSxtQkFFWixDQUNJM00sTUFBTyxpQkFDUHBCLElBQUssd0RBQ0wrTixPQUFRLGNBRVosQ0FDSTNNLE1BQU8sSUFDUHBCLElBQUssd0RBQ0wrTixPQUFRLG9CLDhCQzlnQmhCOWMsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUV6YyxPQUFPLElBQ3REeWMsRUFBUXlFLGVBQWlCekUsRUFBUXlGLGVBQWlCekYsRUFBUTRFLGtCQUFlLEVBQ3pFLE1BQU14RSxFQUFjLEVBQVEsTUFDNUJKLEVBQVE0RSxhQUFlLENBQUMsZUFBZ0Isa0JBQW1CLGNBQzNENUUsRUFBUXlGLGVBQWlCLENBQUMsaUJBQWtCLFdBQzVDekYsRUFBUXlFLGVBQWlCLENBQ3JCLENBQ0lFLEtBQU0sOEJBQ05yQyxRQUFTLEVBQ1QvcEIsTUFBTyxDQUNIMlksSUFBSyxJQUNMcWUsT0FBUSxDQUNKc0QsTUFBTSxFQUNOSixVQUFXLENBQ1ByQyxRQUFTLFVBQ1R5TSxPQUFRLFVBQ1JDLFVBQVcsT0FDWGoyQixNQUFPLFVBQ1AwcUIsT0FBUSxVQUNSd0gsVUFBVyx5QkFDWGdFLE9BQVEsMkJBQ1JDLE9BQVEsVUFDUnhHLE1BQU8sV0FFWGhFLFNBQVUsQ0FDTixVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsV0FFSjd3QixLQUFNLENBQ0Z5dUIsUUFBUyxVQUNUNk0sTUFBTyxVQUNQQyxTQUFVLFNBRWR4TixRQUFTLENBQ0xDLGFBQWMsRUFDZEMsV0FBWSxFQUNaQyxRQUFTLE1BSXJCbEIsS0FBTSxDQUNGQyxPQUFRLG1CQUdoQixDQUNJakssS0FBTSw2QkFDTnJDLFFBQVMsRUFDVC9wQixNQUFPLENBQ0h1MkIsT0FBUSxDQUNKc0IsUUFBUyxVQUNUa0IsTUFBTyxVQUNQRCxXQUFZLFVBQ1pFLE9BQVEsVUFDUkMsS0FBTSxXQUVWakMsT0FBUSxDQUNKc0QsTUFBTSxFQUNOSixVQUFXLENBQ1ByQyxRQUFTLFVBQ1R5TSxPQUFRLFVBQ1JDLFVBQVcsVUFDWGoyQixNQUFPLFVBQ1AwcUIsT0FBUSxVQUNSd0gsVUFBVywwQkFDWGdFLE9BQVEseUJBQ1JDLE9BQVEsVUFDUnhHLE1BQU8sV0FFWGhFLFNBQVUsQ0FDTixVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsV0FFSjd3QixLQUFNLENBQ0Z5dUIsUUFBUyxVQUNUNk0sTUFBTyxVQUNQQyxTQUFVLFdBRWR4TixRQUFTLENBQ0xDLGFBQWMsRUFDZEMsV0FBWSxFQUNaQyxRQUFTLE1BSXJCbEIsS0FBTSxDQUNGQyxPQUFRLG1CQUdoQixDQUNJakssS0FBTSxpQkFDTnJDLFFBQVMsRUFDVC9wQixNQUFPLENBQ0h5MkIsUUFBUyxDQUNMOWQsSUFBSyxDQUNEK2QsUUFBUyxDQUNMQyxNQUFPLEdBQ1A3MEIsT0FBUSxFQUNSZ00sSUFBSyxFQUNMRCxJQUFLLElBQ0wrb0IsV0FBVyxJQUduQkUsV0FBWSxDQUNSOXJCLE1BQU8sSUFFWCtyQixVQUFXLENBQ1AvckIsTUFBTyxLQUdmZ3NCLE9BQVEsQ0FDSnNELE1BQU0sRUFDTkosVUFBVyxDQUNQckMsUUFBUyxVQUNUeU0sT0FBUSxVQUNSQyxVQUFXLE9BQ1hqMkIsTUFBTyxVQUNQMHFCLE9BQVEsVUFDUndILFVBQVcseUJBQ1hnRSxPQUFRLDJCQUNSQyxPQUFRLFVBQ1J4RyxNQUFPLFdBRVhoRSxTQUFVLENBQ04sVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFVBQ0EsVUFDQSxVQUNBLFdBRUo3d0IsS0FBTSxDQUNGeXVCLFFBQVMsVUFDVDZNLE1BQU8sVUFDUEMsU0FBVSxTQUVkeE4sUUFBUyxDQUNMQyxhQUFjLEVBQ2RDLFdBQVksRUFDWkMsUUFBUyxNQUlyQmxCLEtBQU0sQ0FDRkMsT0FBUSxtQkFHaEIsQ0FDSWpLLEtBQU12RSxFQUFZMkUsbUJBQ2xCekMsUUFBUyxFQUNUL3BCLE1BQU8sQ0FDSDJZLElBQUssS0FFVHlkLEtBQU0sQ0FDRkMsT0FBUSxtQkFHaEIsQ0FDSWpLLEtBQU0sVUFDTnJDLFFBQVMsRUFDVC9wQixNQUFPLENBQ0h5MkIsUUFBUyxDQUNMOWQsSUFBSyxDQUNEK2QsUUFBUyxDQUNMQyxNQUFPLEdBQ1A3MEIsT0FBUSxFQUNSZ00sSUFBSyxFQUNMRCxJQUFLLElBQ0wrb0IsV0FBVyxJQUduQkUsV0FBWSxDQUNSOXJCLE1BQU8sSUFFWCtyQixVQUFXLENBQ1AvckIsTUFBTyxNQUluQm9yQixLQUFNLENBQ0ZDLE9BQVEsbUJBR2hCLENBQ0lqSyxLQUFNLE1BQ05yQyxRQUFTLEVBQ1QvcEIsTUFBTyxDQUNIMlksSUFBSyxLQUVUeWQsS0FBTSxDQUNGQyxPQUFRLGtCQUVadUIsT0FBUSxDQUNKQyxRQUFTelAsT0FBT0MsUUFBUUMsT0FBTyx3QkFHdkMsQ0FDSThELEtBQU0sa0JBQ05yQyxRQUFTLEVBQ1QvcEIsTUFBTyxDQUNIdTJCLE9BQVEsQ0FDSnNCLFFBQVMsVUFDVGtCLE1BQU8sVUFDUEQsV0FBWSxVQUNaRSxPQUFRLFlBR2hCNUMsS0FBTSxDQUNGQyxPQUFRLGVBR2hCLENBQ0lqSyxLQUFNLGFBQ05yQyxRQUFTLEVBQ1QvcEIsTUFBTyxDQUNIdTJCLE9BQVEsQ0FDSnNCLFFBQVMsVUFDVGtCLE1BQU8sVUFDUEQsV0FBWSxVQUNaRSxPQUFRLFlBR2hCNUMsS0FBTSxDQUNGQyxPQUFRLGVBR2hCLENBQ0lqSyxLQUFNLGVBQ05yQyxRQUFTLEVBQ1QvcEIsTUFBTyxDQUNIdTJCLE9BQVEsQ0FDSnNCLFFBQVMsVUFDVGtCLE1BQU8sVUFDUEQsV0FBWSxVQUNaRSxPQUFRLFlBR2hCNUMsS0FBTSxDQUNGQyxPQUFRLGlCQUdoQixDQUNJakssS0FBTSxvQkFDTnJDLFFBQVMsRUFDVC9wQixNQUFPLENBQ0h1MkIsT0FBUSxDQUNKc0IsUUFBUyxVQUNUa0IsTUFBTyxVQUNQRCxXQUFZLFVBQ1pFLE9BQVEsWUFHaEI1QyxLQUFNLENBQ0ZDLE9BQVEsbUIsMkJDbFVwQixTQUFTenpCLEVBQWNnaUMsRUFBSzVYLEVBQVdlLEVBQVloQixHQUMvQyxJQUFJdG9CLEVBQVU5QixTQUFTQyxjQUFjZ2lDLEdBQ3JDLEdBQUk1WCxFQUNBLElBQUssSUFBSXBwQixLQUFLb3BCLEVBQ1Z2b0IsRUFBUXVvQixVQUFVQyxJQUFJcnBCLEdBRzlCLEdBQUltcUIsRUFDQSxJQUFLLElBQUlzUyxLQUFZdFMsRUFDakIsR0FBSUEsRUFBV3NTLGFBQXFCOVksVUFDOUJ3RyxFQUFXc1MsYUFBcUJ3RSxVQUNsQyxJQUFLLElBQUlDLEtBQWUvVyxFQUFXc1MsR0FDL0I1N0IsRUFBUTQ3QixHQUFVeUUsR0FBZS9XLEVBQVdzUyxHQUFVeUUsYUFHeEN0bEMsSUFBYjZnQyxRQUFtRDdnQyxJQUF6QnV1QixFQUFXc1MsS0FDMUM1N0IsRUFBUTQ3QixHQUFZdFMsRUFBV3NTLElBSTNDLEdBQUl0VCxFQUNBLElBQUssSUFBSWdZLEtBQVNoWSxFQUNkdG9CLEVBQVF3cEIsWUFBWThXLEdBRzVCLE9BQU90Z0MsQ0FDWCxDQVFBLFNBQVN1Z0MsRUFBYXJ6QixFQUFJdkksRUFBTXdxQixHQUM1QixPQUFPaHhCLEVBQWMsT0FBUSxDQUFDLHNCQUF1QixzQkFBdUIsQ0FBRStwQixRQUFTaUgsR0FBWSxDQUMvRmh4QixFQUFjLFFBQVMsQ0FBQyxjQUFlLHNCQUF1QixDQUMxRGtSLEtBQU0sU0FDTjlJLE1BQU81QixFQUNQdUksR0FBSUEsRUFDSm1hLFFBQVMsQ0FBRXNXLHFCQUFzQixnQkFHN0MsQ0FpR0EsU0FBUzZDLEtBQWlCQyxHQUN0QixJQUFJQyxFQUFTeGlDLFNBQVN5aUMsZ0JBQWdCLDZCQUE4QixVQUNwRUQsRUFBT3BMLGFBQWEsS0FBTSxPQUMxQm9MLEVBQU9wTCxhQUFhLEtBQU0sT0FDMUJvTCxFQUFPcEwsYUFBYSxJQUFLLE9BQ3pCb0wsRUFBT3BMLGFBQWEsUUFBUyx5REFDN0IsSUFBSXNMLEVBQVExaUMsU0FBU3lpQyxnQkFBZ0IsNkJBQThCLFFBQ25FQyxFQUFNdEwsYUFBYSxLQUFNLE9BQ3pCc0wsRUFBTXRMLGFBQWEsS0FBTSxPQUN6QnNMLEVBQU10TCxhQUFhLEtBQU0sT0FDekJzTCxFQUFNdEwsYUFBYSxLQUFNLE9BQ3pCc0wsRUFBTXRMLGFBQWEsUUFBUyxvRUFDNUIsSUFBSXVMLEVBQVEzaUMsU0FBU3lpQyxnQkFBZ0IsNkJBQThCLFFBQ25FRSxFQUFNdkwsYUFBYSxLQUFNLE9BQ3pCdUwsRUFBTXZMLGFBQWEsS0FBTSxPQUN6QnVMLEVBQU12TCxhQUFhLEtBQU0sT0FDekJ1TCxFQUFNdkwsYUFBYSxLQUFNLE9BQ3pCdUwsRUFBTXZMLGFBQWEsUUFBUyxvRUFDNUIsSUFBSXdMLEVBQU01aUMsU0FBU3lpQyxnQkFBZ0IsNkJBQThCLE9BTWpFLE9BTEFHLEVBQUl4TCxhQUFhLFVBQVcsZUFDNUJ3TCxFQUFJamhDLE9BQU82Z0MsRUFBUUUsRUFBT0MsR0FDdEJKLEdBQ0FLLEVBQUl2WSxVQUFVQyxPQUFPaVksR0FFbEJLLENBQ1gsQ0EvS0FoZSxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRXpjLE9BQU8sSUFDdER5YyxFQUFRK2QsZUFBaUIvZCxFQUFRd2QsY0FBZ0J4ZCxFQUFRNEMsZUFBaUI1QyxFQUFRZ2UsV0FBYWhlLEVBQVFpZSxVQUFZamUsRUFBUStCLFdBQWEvQixFQUFRa2UscUJBQXVCbGUsRUFBUXVkLGFBQWV2ZCxFQUFRN2tCLG1CQUFnQixFQW9DdE42a0IsRUFBUTdrQixjQUFnQkEsRUFpQnhCNmtCLEVBQVF1ZCxhQUFlQSxFQWlCdkJ2ZCxFQUFRa2UscUJBaEJSLFNBQThCaDBCLEVBQUl2SSxFQUFNd3FCLEdBQ3BDLElBQUk5bkIsRUFBU2s1QixFQUFhcnpCLEVBQUl2SSxFQUFNd3FCLEdBQ2hDOEcsRUFBTXVLLElBQ1YxZCxPQUFPNmIsT0FBTzFJLEVBQUloNEIsTUFBTyxDQUNyQmtqQyxjQUFlLFNBQ2ZDLFlBQWEsTUFDYjEzQixNQUFPLFNBRVhyQyxFQUFPZzZCLFFBQVFwTCxHQUNmNXVCLEVBQU9wSixNQUFNaTNCLFlBQVksU0FBVSxPQUFRLGFBQzNDLElBQUlvTSxFQUFjajZCLEVBQU9vZixjQUFjLFNBSXZDLE9BSEE2YSxFQUFZcmpDLE1BQU1takMsWUFBYyxNQUNoQ0UsRUFBWXJqQyxNQUFNaTNCLFlBQVksU0FBVSxPQUFRLGFBQ2hEN3RCLEVBQU9wSixNQUFNazFCLE9BQVMsVUFDZjlyQixDQUNYLEVBb0JBMmIsRUFBUStCLFdBZFIsV0FDSSxZQUFpQyxJQUF0QnNZLFdBQVcxWixZQUNnQixJQUF2QjBaLFdBQVdrRSxRQUNYLFVBSUEsU0FJSixPQUVmLEVBVUF2ZSxFQUFRaWUsVUFIUixTQUFtQjdZLEdBQ2YsU0FBVUEsRUFBS29aLGFBQWVwWixFQUFLcVosY0FBZ0JyWixFQUFLc1osaUJBQWlCM2lDLE9BQzdFLEVBMENBaWtCLEVBQVFnZSxXQWpDUixTQUFvQjVZLEVBQU11WixHQUN0QixJQUNJQyxFQURBQyxFQUFVLEdBS2QsSUFISUYsSUFDQUMsRUFBWUQsRUFBU3B1QixPQUFPLElBRXpCNlUsR0FBUUEsSUFBU2xxQixTQUFTbU0sZ0JBQWlCK2QsRUFBT0EsRUFBS3dSLFdBQ3REK0gsR0FDa0IsTUFBZEMsR0FDSXhaLEVBQUtHLFVBQVUxcUIsU0FBUzhqQyxFQUFTNWpDLE9BQU8sS0FDeEM4akMsRUFBUWppQyxLQUFLd29CLEdBR0gsTUFBZHdaLEdBQ0l4WixFQUFLbGIsS0FBT3kwQixFQUFTNWpDLE9BQU8sSUFDNUI4akMsRUFBUWppQyxLQUFLd29CLEdBR0gsTUFBZHdaLEdBQ0l4WixFQUFLMFosYUFBYUgsRUFBUzVqQyxPQUFPLEVBQUc0akMsRUFBUzVpQyxPQUFTLEtBQ3ZEOGlDLEVBQVFqaUMsS0FBS3dvQixHQUdqQkEsRUFBS3NSLFFBQVFscEIsZ0JBQWtCbXhCLEdBQy9CRSxFQUFRamlDLEtBQUt3b0IsSUFJakJ5WixFQUFRamlDLEtBQUt3b0IsR0FHckIsT0FBT3laLENBQ1gsRUFVQTdlLEVBQVE0QyxlQUhSLFNBQXdCK0IsRUFBTXJqQixHQUMxQnBHLFNBQVNtTSxnQkFBZ0JwTSxNQUFNaTNCLFlBQVksS0FBS3ZOLElBQVFyakIsUUFBaUNBLEVBQU0sS0FDbkcsRUE0QkEwZSxFQUFRd2QsY0FBZ0JBLEVBWXhCeGQsRUFBUStkLGVBWFIsU0FBd0JZLEVBQVVJLEVBQWlCLElBQy9DLE9BQU8sSUFBSTdmLFNBQVFDLElBQ2YsSUFBSTZmLEVBQVczTSxhQUFZLEtBQ3ZCLElBQUlqTixFQUFPbHFCLFNBQVN1b0IsY0FBY2tiLEdBQzlCdlosSUFDQThMLGNBQWM4TixHQUNkN2YsRUFBUWlHLEdBQ1osR0FDRDJaLEVBQWUsR0FFMUIsQyw0QkNqTEEsU0FBU0UsRUFBZ0IxbUMsR0FDckIsTUFBTyxTQUFTQSw2SEFDcEIsQ0FaQXVuQixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRXpjLE9BQU8sSUFDdER5YyxFQUFRd1ksWUFBUyxFQUNqQnhZLEVBQVF3WSxPQUFTLENBQ2JDLElBQVltQixRQUFRbkIsSUFBSWg3QixLQUFLNDhCLFdBQVdULFFBQVMsTUFBT3FGLEVBQWdCLFlBQ3hFekksTUFBY29ELFFBQVFwRCxNQUFNLzRCLEtBQUs0OEIsV0FBV1QsUUFBUyxNQUFPcUYsRUFBZ0IsWUFDNUVDLEtBQWF0RixRQUFRc0YsS0FBS3poQyxLQUFLNDhCLFdBQVdULFFBQVMsTUFBT3FGLEVBQWdCLFVBQzFFRSxLQUFhdkYsUUFBUXVGLEtBQUsxaEMsS0FBSzQ4QixXQUFXVCxRQUFTLE1BQU9xRixFQUFnQixZQUMxRUcsTUFBY3hGLFFBQVF3RixNQUFNM2hDLEtBQUs0OEIsV0FBV1QsUUFBUyxNQUFPcUYsRUFBZ0IsV0FDNUVwRixNQUFjRCxRQUFRQyxNQUFNcDhCLEtBQUs0OEIsV0FBV1QsUUFBUyxNQUFPcUYsRUFBZ0IsZSw0QkNSaEZuZixPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRXpjLE9BQU8sSUFDdER5YyxFQUFRbUIsZUFBaUJuQixFQUFRd1QsVUFBWXhULEVBQVFrVCxZQUFjbFQsRUFBUStTLFVBQVkvUyxFQUFRbVIsV0FBYW5SLEVBQVF1UyxzQkFBd0J2UyxFQUFRNFMsd0JBQTBCNVMsRUFBUTJTLDBCQUE0QjNTLEVBQVEwUywrQkFBaUMxUyxFQUFReVIsdUJBQXlCelIsRUFBUTBSLGdDQUFrQzFSLEVBQVEyUiwrQkFBaUMzUixFQUFRb1IsMkJBQXdCLEVBQy9ZLE1BQU1BLEVBU0YsV0FBQWlPLENBQVlqUCxFQUFTa0IsRUFBT0QsRUFBWUUsRUFBUUMsR0FDNUMxekIsS0FBS3N5QixRQUFVQSxFQUNmdHlCLEtBQUt3ekIsTUFBUUEsRUFDYnh6QixLQUFLdXpCLFdBQWFBLEVBQ2xCdnpCLEtBQUt5ekIsT0FBU0EsRUFDZHp6QixLQUFLMHpCLEtBQU9BLEdBQVFGLENBQ3hCLENBTUEscUJBQU9YLENBQWUxekIsR0FDbEIsT0FBT0EsRUFDRCxJQUFJbTBCLEVBQXNCbjBCLEVBQUVtekIsUUFBU256QixFQUFFcTBCLE1BQU9yMEIsRUFBRW8wQixXQUFZcDBCLEVBQUVzMEIsT0FBUXQwQixFQUFFdTBCLE1BQVF2MEIsRUFBRXEwQixZQUNsRnY1QixDQUNWLEVBRUppb0IsRUFBUW9SLHNCQUF3QkEsRUFDaEMsTUFBTU8sRUFTRixXQUFBME4sQ0FBWW5RLEVBQU83MEIsRUFBUWdNLEVBQUtELEVBQUsrb0IsR0FDakNyeEIsS0FBS294QixNQUFRQSxFQUNicHhCLEtBQUt6RCxPQUFTQSxFQUNkeUQsS0FBS3VJLElBQU1BLEVBQ1h2SSxLQUFLc0ksSUFBTUEsRUFDWHRJLEtBQUtxeEIsVUFBWUEsQ0FDckIsQ0FNQSxxQkFBT3dCLENBQWUxekIsR0FDbEIsT0FBT0EsRUFDRCxJQUFJMDBCLEVBQStCMTBCLEVBQUVpeUIsTUFBT2p5QixFQUFFNUMsT0FBUTRDLEVBQUVvSixJQUFLcEosRUFBRW1KLElBQUtuSixFQUFFa3lCLGdCQUN0RXAzQixDQUNWLEVBRUppb0IsRUFBUTJSLCtCQUFpQ0EsRUFDekMsTUFBTUQsRUFNRixXQUFBMk4sQ0FBWXBRLEVBQVMxckIsR0FDakJ6RixLQUFLbXhCLFFBQVVBLEVBQ2ZueEIsS0FBS3lGLE1BQVFBLENBQ2pCLENBTUEscUJBQU9vdEIsQ0FBZTF6QixHQUNsQixPQUFPQSxFQUNELElBQUl5MEIsRUFBZ0NDLEVBQStCaEIsZUFBZTF6QixFQUFFZ3lCLFNBQVVoeUIsRUFBRXNHLFlBQ2hHeEwsQ0FDVixFQUVKaW9CLEVBQVEwUixnQ0FBa0NBLEVBQzFDLE1BQU1ELEVBT0YsV0FBQTROLENBQVludUIsRUFBS21lLEVBQVlDLEdBQ3pCeHhCLEtBQUtvVCxJQUFNQSxFQUNYcFQsS0FBS3V4QixXQUFhQSxFQUNsQnZ4QixLQUFLd3hCLFVBQVlBLENBQ3JCLENBTUEscUJBQU9xQixDQUFlMXpCLEdBQ2xCLE9BQU9BLEVBQ0QsSUFBSXcwQixFQUF1QkMsRUFBZ0NmLGVBQWUxekIsRUFBRWlVLEtBQU13Z0IsRUFBZ0NmLGVBQWUxekIsRUFBRW95QixZQUFhcUMsRUFBZ0NmLGVBQWUxekIsRUFBRXF5QixpQkFDak12M0IsQ0FDVixFQUVKaW9CLEVBQVF5Uix1QkFBeUJBLEVBQ2pDLE1BQU1pQixFQWFGLFdBQUEyTSxDQUFZalAsRUFBU3lNLEVBQVFDLEVBQVdqMkIsRUFBTzBxQixFQUFRd0gsRUFBV2dFLEVBQVFDLEVBQVF4RyxHQUM5RTE0QixLQUFLc3lCLFFBQVVBLEVBQ2Z0eUIsS0FBSysrQixPQUFTQSxFQUNkLytCLEtBQUtnL0IsVUFBWUEsRUFDakJoL0IsS0FBSytJLE1BQVFBLEVBQ2IvSSxLQUFLeXpCLE9BQVNBLEVBQ2R6ekIsS0FBS2k3QixVQUFZQSxFQUNqQmo3QixLQUFLaS9CLE9BQVNBLEVBQ2RqL0IsS0FBS2svQixPQUFTQSxFQUNkbC9CLEtBQUswNEIsTUFBUUEsQ0FDakIsQ0FNQSxxQkFBTzdGLENBQWUxekIsR0FDbEIsT0FBT0EsRUFDRCxJQUFJeTFCLEVBQStCejFCLEVBQUVtekIsUUFBU256QixFQUFFNC9CLE9BQVE1L0IsRUFBRTYvQixVQUFXNy9CLEVBQUU0SixNQUFPNUosRUFBRXMwQixPQUFRdDBCLEVBQUU4N0IsVUFBVzk3QixFQUFFOC9CLE9BQVE5L0IsRUFBRSsvQixPQUFRLy9CLEVBQUV1NUIsWUFDM0h6K0IsQ0FDVixFQUVKaW9CLEVBQVEwUywrQkFBaUNBLEVBQ3pDLE1BQU1DLEVBT0YsV0FBQTBNLENBQVlqUCxFQUFTNk0sRUFBT0MsR0FDeEJwL0IsS0FBS3N5QixRQUFVQSxFQUNmdHlCLEtBQUttL0IsTUFBUUEsRUFDYm4vQixLQUFLby9CLFNBQVdBLENBQ3BCLENBTUEscUJBQU92TSxDQUFlMXpCLEdBQ2xCLE9BQU9BLEVBQUksSUFBSTAxQixFQUEwQjExQixFQUFFbXpCLFFBQVNuekIsRUFBRWdnQyxNQUFPaGdDLEVBQUVpZ0MsZUFBWW5sQyxDQUMvRSxFQUVKaW9CLEVBQVEyUywwQkFBNEJBLEVBQ3BDLE1BQU1DLEVBT0YsV0FBQXlNLENBQVkxUCxFQUFjQyxFQUFZQyxHQUNsQy94QixLQUFLNnhCLGFBQWVBLEVBQ3BCN3hCLEtBQUs4eEIsV0FBYUEsRUFDbEI5eEIsS0FBSyt4QixRQUFVQSxDQUNuQixDQU1BLHFCQUFPYyxDQUFlMXpCLEdBQ2xCLE9BQU9BLEVBQUksSUFBSTIxQixFQUF3QjMxQixFQUFFMHlCLGFBQWMxeUIsRUFBRTJ5QixXQUFZM3lCLEVBQUU0eUIsY0FBVzkzQixDQUN0RixFQUVKaW9CLEVBQVE0Uyx3QkFBMEJBLEVBQ2xDLE1BQU1MLEVBU0YsV0FBQThNLENBQVl4TSxFQUFNeU0sRUFBaUI5TSxFQUFVN3dCLEVBQU0rdEIsR0FDL0M1eEIsS0FBSyswQixLQUFPQSxFQUNaLzBCLEtBQUsyMEIsVUFBWTZNLEVBQ2pCeGhDLEtBQUswMEIsU0FBV0EsRUFDaEIxMEIsS0FBSzZELEtBQU9BLEVBQ1o3RCxLQUFLNHhCLFFBQVVBLENBQ25CLENBTUEscUJBQU9pQixDQUFlMXpCLEdBQ2xCLE9BQU9BLEVBQ0QsSUFBSXMxQixFQUFzQnQxQixFQUFFNDFCLEtBQU1ILEVBQStCL0IsZUFBZTF6QixFQUFFdzFCLFdBQVl4MUIsRUFBRXUxQixTQUFVRyxFQUEwQmhDLGVBQWUxekIsRUFBRTBFLE1BQU9peEIsRUFBd0JqQyxlQUFlMXpCLEVBQUV5eUIsZUFDck0zM0IsQ0FDVixFQUVKaW9CLEVBQVF1UyxzQkFBd0JBLEVBQ2hDLE1BQU1wQixFQVFGLFdBQUFrTyxDQUFZbnVCLEVBQUs0ZCxFQUFRRSxFQUFTTyxHQUM5Qnp4QixLQUFLb1QsSUFBTUEsRUFDWHBULEtBQUtneEIsT0FBU0EsRUFDZGh4QixLQUFLa3hCLFFBQVVBLEVBQ2ZseEIsS0FBS3l4QixPQUFTQSxDQUNsQixDQU1BLHFCQUFPb0IsQ0FBZTF6QixHQUNsQixPQUFPQSxFQUNELElBQUlrMEIsRUFBV2wwQixFQUFFaVUsSUFBS2tnQixFQUFzQlQsZUFBZTF6QixFQUFFNnhCLFFBQVMyQyxFQUF1QmQsZUFBZTF6QixFQUFFK3hCLFNBQVV1RCxFQUFzQjVCLGVBQWUxekIsRUFBRXN5QixTQUMvSixJQUFJNEIsRUFBVyxJQUN6QixFQUVKblIsRUFBUW1SLFdBQWFBLEVBQ3JCLE1BQU00QixFQU1GLFdBQUFzTSxDQUFZeFEsRUFBS0QsR0FDYjl3QixLQUFLK3dCLElBQU1BLEVBQ1gvd0IsS0FBSzh3QixPQUFTQSxDQUNsQixDQU1BLHFCQUFPK0IsQ0FBZTF6QixHQUNsQixPQUFPQSxFQUFJLElBQUk4MUIsRUFBVTkxQixFQUFFNHhCLElBQUs1eEIsRUFBRTJ4QixRQUFVLElBQUltRSxPQUFVaDdCLEVBQVcsaUJBQ3pFLEVBRUppb0IsRUFBUStTLFVBQVlBLEVBQ3BCLE1BQU1HLEVBS0YsV0FBQW1NLENBQVlqUCxHQUNSdHlCLEtBQUtzeUIsUUFBVUEsQ0FDbkIsQ0FNQSxxQkFBT08sQ0FBZTF6QixHQUNsQixPQUFPQSxFQUFJLElBQUlpMkIsRUFBWWoyQixFQUFFbXpCLGNBQVdyNEIsQ0FDNUMsRUFFSmlvQixFQUFRa1QsWUFBY0EsRUFDdEIsTUFBTU0sRUFNRixXQUFBNkwsQ0FBWXBQLEVBQU9wQixHQUNmL3dCLEtBQUtteUIsTUFBUUEsRUFDYm55QixLQUFLK3dCLElBQU1BLENBQ2YsQ0FNQSwwQkFBTzBRLENBQW9CQyxHQUN2QixPQUFPQSxFQUFRQSxFQUFNNThCLEtBQUlta0IsR0FBSyxJQUFJeU0sRUFBVXpNLEVBQUVrSixNQUFPbEosRUFBRThILFlBQVE5MkIsQ0FDbkUsRUFFSmlvQixFQUFRd1QsVUFBWUEsRUFDcEIsTUFBTXJTLEVBVUYsV0FBQWtlLENBQVkxYSxFQUFNckMsRUFBUy9wQixFQUFPbzJCLEVBQU13QixFQUFRSixHQUM1QyxJQUFLcEwsRUFDRCxNQUFNLElBQUk3WSxNQUFNLDBCQUVwQmhPLEtBQUs2bUIsS0FBT0EsRUFDWjdtQixLQUFLd2tCLFFBQVVBLEdBQVduQixFQUFlRCxnQkFDekNwakIsS0FBS3ZGLE1BQVFBLEVBQ2J1RixLQUFLNndCLEtBQU9BLEVBQ1o3d0IsS0FBS3F5QixPQUFTQSxFQUNkcnlCLEtBQUtpeUIsTUFBUUEsQ0FDakIsQ0FDQSxRQUFBdnpCLEdBQ0ksT0FBT3F1QixLQUFLNkksVUFBVTUxQixLQUMxQixDQU1BLHFCQUFPNnlCLENBQWUxekIsR0FDbEIsR0FBSUEsR0FBS0EsRUFBRXFsQixVQUFZbkIsRUFBZUQsZ0JBQ2xDLE9BQU8sSUFBSUMsRUFBZWxrQixFQUFFMG5CLEtBQU0xbkIsRUFBRXFsQixRQUFTNk8sRUFBV1IsZUFBZTF6QixFQUFFMUUsT0FBUXc2QixFQUFVcEMsZUFBZTF6QixFQUFFMHhCLE1BQU91RSxFQUFZdkMsZUFBZTF6QixFQUFFa3pCLFFBQVNxRCxFQUFVK0wsb0JBQW9CdGlDLEVBQUU4eUIsUUFFN0wsTUFBTSxJQUFJamtCLE1BQU0saUZBQWlGcVYsRUFBZUQseUJBQ3BILEVBRUpsQixFQUFRbUIsZUFBaUJBLEVBQ3pCQSxFQUFlRCxnQkFBa0IsQyx3QkM5VWpDdWUsRUFBT3pmLFFBQVUwZixDLHdCQ0FqQkQsRUFBT3pmLFFBQVUyZixNLEdDQ2JDLEVBQTJCLENBQUMsR0FHaEMsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQi9uQyxJQUFqQmdvQyxFQUNILE9BQU9BLEVBQWEvZixRQUdyQixJQUFJeWYsRUFBU0csRUFBeUJFLEdBQVksQ0FHakQ5ZixRQUFTLENBQUMsR0FPWCxPQUhBZ2dCLEVBQW9CRixHQUFVeDFCLEtBQUttMUIsRUFBT3pmLFFBQVN5ZixFQUFRQSxFQUFPemYsUUFBUzZmLEdBR3BFSixFQUFPemYsT0FDZixDQ25CMEI2ZixDQUFvQixLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9ub2RlX21vZHVsZXMvc3BlY3RydW0tY29sb3JwaWNrZXIvc3BlY3RydW0uanMiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9zcmMvc2NyaXB0cy90aGVtZS1lZGl0b3IudHMiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9zcmMvc2NyaXB0cy91dGlscy9hbmFseXRpY3MudHMiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9zcmMvc2NyaXB0cy91dGlscy9jb25zdGFudHMudHMiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9zcmMvc2NyaXB0cy91dGlscy9kZWZhdWx0LWljb25zLnRzIiwid2VicGFjazovL3NjaG9vbG9neS1wbHVzLy4vc3JjL3NjcmlwdHMvdXRpbHMvZGVmYXVsdC10aGVtZXMudHMiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9zcmMvc2NyaXB0cy91dGlscy9kb20udHMiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9zcmMvc2NyaXB0cy91dGlscy9sb2dnZXIudHMiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvLi9zcmMvc2NyaXB0cy91dGlscy90aGVtZS1tb2RlbC50cyIsIndlYnBhY2s6Ly9zY2hvb2xvZ3ktcGx1cy9leHRlcm5hbCB2YXIgXCJNXCIiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvZXh0ZXJuYWwgdmFyIFwialF1ZXJ5XCIiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vc2Nob29sb2d5LXBsdXMvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNwZWN0cnVtIENvbG9ycGlja2VyIHYxLjguMVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jncmlucy9zcGVjdHJ1bVxuLy8gQXV0aG9yOiBCcmlhbiBHcmluc3RlYWRcbi8vIExpY2Vuc2U6IE1JVFxuXG4oZnVuY3Rpb24gKGZhY3RvcnkpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsgLy8gQU1EXG4gICAgICAgIGRlZmluZShbJ2pxdWVyeSddLCBmYWN0b3J5KTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlID09IFwib2JqZWN0XCIpIHsgLy8gQ29tbW9uSlNcbiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJ2pxdWVyeScpKTtcbiAgICB9XG4gICAgZWxzZSB7IC8vIEJyb3dzZXJcbiAgICAgICAgZmFjdG9yeShqUXVlcnkpO1xuICAgIH1cbn0pKGZ1bmN0aW9uKCQsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgdmFyIGRlZmF1bHRPcHRzID0ge1xuXG4gICAgICAgIC8vIENhbGxiYWNrc1xuICAgICAgICBiZWZvcmVTaG93OiBub29wLFxuICAgICAgICBtb3ZlOiBub29wLFxuICAgICAgICBjaGFuZ2U6IG5vb3AsXG4gICAgICAgIHNob3c6IG5vb3AsXG4gICAgICAgIGhpZGU6IG5vb3AsXG5cbiAgICAgICAgLy8gT3B0aW9uc1xuICAgICAgICBjb2xvcjogZmFsc2UsXG4gICAgICAgIGZsYXQ6IGZhbHNlLFxuICAgICAgICBzaG93SW5wdXQ6IGZhbHNlLFxuICAgICAgICBhbGxvd0VtcHR5OiBmYWxzZSxcbiAgICAgICAgc2hvd0J1dHRvbnM6IHRydWUsXG4gICAgICAgIGNsaWNrb3V0RmlyZXNDaGFuZ2U6IHRydWUsXG4gICAgICAgIHNob3dJbml0aWFsOiBmYWxzZSxcbiAgICAgICAgc2hvd1BhbGV0dGU6IGZhbHNlLFxuICAgICAgICBzaG93UGFsZXR0ZU9ubHk6IGZhbHNlLFxuICAgICAgICBoaWRlQWZ0ZXJQYWxldHRlU2VsZWN0OiBmYWxzZSxcbiAgICAgICAgdG9nZ2xlUGFsZXR0ZU9ubHk6IGZhbHNlLFxuICAgICAgICBzaG93U2VsZWN0aW9uUGFsZXR0ZTogdHJ1ZSxcbiAgICAgICAgbG9jYWxTdG9yYWdlS2V5OiBmYWxzZSxcbiAgICAgICAgYXBwZW5kVG86IFwiYm9keVwiLFxuICAgICAgICBtYXhTZWxlY3Rpb25TaXplOiA3LFxuICAgICAgICBjYW5jZWxUZXh0OiBcImNhbmNlbFwiLFxuICAgICAgICBjaG9vc2VUZXh0OiBcImNob29zZVwiLFxuICAgICAgICB0b2dnbGVQYWxldHRlTW9yZVRleHQ6IFwibW9yZVwiLFxuICAgICAgICB0b2dnbGVQYWxldHRlTGVzc1RleHQ6IFwibGVzc1wiLFxuICAgICAgICBjbGVhclRleHQ6IFwiQ2xlYXIgQ29sb3IgU2VsZWN0aW9uXCIsXG4gICAgICAgIG5vQ29sb3JTZWxlY3RlZFRleHQ6IFwiTm8gQ29sb3IgU2VsZWN0ZWRcIixcbiAgICAgICAgcHJlZmVycmVkRm9ybWF0OiBmYWxzZSxcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLCAvLyBEZXByZWNhdGVkIC0gdXNlIGNvbnRhaW5lckNsYXNzTmFtZSBhbmQgcmVwbGFjZXJDbGFzc05hbWUgaW5zdGVhZC5cbiAgICAgICAgY29udGFpbmVyQ2xhc3NOYW1lOiBcIlwiLFxuICAgICAgICByZXBsYWNlckNsYXNzTmFtZTogXCJcIixcbiAgICAgICAgc2hvd0FscGhhOiBmYWxzZSxcbiAgICAgICAgdGhlbWU6IFwic3AtbGlnaHRcIixcbiAgICAgICAgcGFsZXR0ZTogW1tcIiNmZmZmZmZcIiwgXCIjMDAwMDAwXCIsIFwiI2ZmMDAwMFwiLCBcIiNmZjgwMDBcIiwgXCIjZmZmZjAwXCIsIFwiIzAwODAwMFwiLCBcIiMwMDAwZmZcIiwgXCIjNGIwMDgyXCIsIFwiIzk0MDBkM1wiXV0sXG4gICAgICAgIHNlbGVjdGlvblBhbGV0dGU6IFtdLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIG9mZnNldDogbnVsbFxuICAgIH0sXG4gICAgc3BlY3RydW1zID0gW10sXG4gICAgSUUgPSAhIS9tc2llL2kuZXhlYyggd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQgKSxcbiAgICByZ2JhU3VwcG9ydCA9IChmdW5jdGlvbigpIHtcbiAgICAgICAgZnVuY3Rpb24gY29udGFpbnMoIHN0ciwgc3Vic3RyICkge1xuICAgICAgICAgICAgcmV0dXJuICEhfignJyArIHN0cikuaW5kZXhPZihzdWJzdHIpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdmFyIHN0eWxlID0gZWxlbS5zdHlsZTtcbiAgICAgICAgc3R5bGUuY3NzVGV4dCA9ICdiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjUpJztcbiAgICAgICAgcmV0dXJuIGNvbnRhaW5zKHN0eWxlLmJhY2tncm91bmRDb2xvciwgJ3JnYmEnKSB8fCBjb250YWlucyhzdHlsZS5iYWNrZ3JvdW5kQ29sb3IsICdoc2xhJyk7XG4gICAgfSkoKSxcbiAgICByZXBsYWNlSW5wdXQgPSBbXG4gICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtcmVwbGFjZXInPlwiLFxuICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1wcmV2aWV3Jz48ZGl2IGNsYXNzPSdzcC1wcmV2aWV3LWlubmVyJz48L2Rpdj48L2Rpdj5cIixcbiAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtZGQnPiYjOTY2MDs8L2Rpdj5cIixcbiAgICAgICAgXCI8L2Rpdj5cIlxuICAgIF0uam9pbignJyksXG4gICAgbWFya3VwID0gKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAvLyBJRSBkb2VzIG5vdCBzdXBwb3J0IGdyYWRpZW50cyB3aXRoIG11bHRpcGxlIHN0b3BzLCBzbyB3ZSBuZWVkIHRvIHNpbXVsYXRlXG4gICAgICAgIC8vICB0aGF0IGZvciB0aGUgcmFpbmJvdyBzbGlkZXIgd2l0aCA4IGRpdnMgdGhhdCBlYWNoIGhhdmUgYSBzaW5nbGUgZ3JhZGllbnRcbiAgICAgICAgdmFyIGdyYWRpZW50Rml4ID0gXCJcIjtcbiAgICAgICAgaWYgKElFKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSA2OyBpKyspIHtcbiAgICAgICAgICAgICAgICBncmFkaWVudEZpeCArPSBcIjxkaXYgY2xhc3M9J3NwLVwiICsgaSArIFwiJz48L2Rpdj5cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLWNvbnRhaW5lciBzcC1oaWRkZW4nPlwiLFxuICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtcGFsZXR0ZS1jb250YWluZXInPlwiLFxuICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLXBhbGV0dGUgc3AtdGh1bWIgc3AtY2YnPjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLXBhbGV0dGUtYnV0dG9uLWNvbnRhaW5lciBzcC1jZic+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0nc3AtcGFsZXR0ZS10b2dnbGUnPjwvYnV0dG9uPlwiLFxuICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1waWNrZXItY29udGFpbmVyJz5cIixcbiAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC10b3Agc3AtY2YnPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1maWxsJz48L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtdG9wLWlubmVyJz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLWNvbG9yJz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1zYXQnPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC12YWwnPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtZHJhZ2dlcic+PC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1jbGVhciBzcC1jbGVhci1kaXNwbGF5Jz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtaHVlJz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1zbGlkZXInPjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBncmFkaWVudEZpeCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtYWxwaGEnPjxkaXYgY2xhc3M9J3NwLWFscGhhLWlubmVyJz48ZGl2IGNsYXNzPSdzcC1hbHBoYS1oYW5kbGUnPjwvZGl2PjwvZGl2PjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLWlucHV0LWNvbnRhaW5lciBzcC1jZic+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIjxpbnB1dCBjbGFzcz0nc3AtaW5wdXQnIHR5cGU9J3RleHQnIHNwZWxsY2hlY2s9J2ZhbHNlJyAgLz5cIixcbiAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1pbml0aWFsIHNwLXRodW1iIHNwLWNmJz48L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1idXR0b24tY29udGFpbmVyIHNwLWNmJz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPGEgY2xhc3M9J3NwLWNhbmNlbCcgaHJlZj0nIyc+PC9hPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCI8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3M9J3NwLWNob29zZSc+PC9idXR0b24+XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgIFwiPC9kaXY+XCJcbiAgICAgICAgXS5qb2luKFwiXCIpO1xuICAgIH0pKCk7XG5cbiAgICBmdW5jdGlvbiBwYWxldHRlVGVtcGxhdGUgKHAsIGNvbG9yLCBjbGFzc05hbWUsIG9wdHMpIHtcbiAgICAgICAgdmFyIGh0bWwgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgY3VycmVudCA9IHBbaV07XG4gICAgICAgICAgICBpZihjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIHRpbnkgPSB0aW55Y29sb3IoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgdmFyIGMgPSB0aW55LnRvSHNsKCkubCA8IDAuNSA/IFwic3AtdGh1bWItZWwgc3AtdGh1bWItZGFya1wiIDogXCJzcC10aHVtYi1lbCBzcC10aHVtYi1saWdodFwiO1xuICAgICAgICAgICAgICAgIGMgKz0gKHRpbnljb2xvci5lcXVhbHMoY29sb3IsIGN1cnJlbnQpKSA/IFwiIHNwLXRodW1iLWFjdGl2ZVwiIDogXCJcIjtcbiAgICAgICAgICAgICAgICB2YXIgZm9ybWF0dGVkU3RyaW5nID0gdGlueS50b1N0cmluZyhvcHRzLnByZWZlcnJlZEZvcm1hdCB8fCBcInJnYlwiKTtcbiAgICAgICAgICAgICAgICB2YXIgc3dhdGNoU3R5bGUgPSByZ2JhU3VwcG9ydCA/IChcImJhY2tncm91bmQtY29sb3I6XCIgKyB0aW55LnRvUmdiU3RyaW5nKCkpIDogXCJmaWx0ZXI6XCIgKyB0aW55LnRvRmlsdGVyKCk7XG4gICAgICAgICAgICAgICAgaHRtbC5wdXNoKCc8c3BhbiB0aXRsZT1cIicgKyBmb3JtYXR0ZWRTdHJpbmcgKyAnXCIgZGF0YS1jb2xvcj1cIicgKyB0aW55LnRvUmdiU3RyaW5nKCkgKyAnXCIgY2xhc3M9XCInICsgYyArICdcIj48c3BhbiBjbGFzcz1cInNwLXRodW1iLWlubmVyXCIgc3R5bGU9XCInICsgc3dhdGNoU3R5bGUgKyAnO1wiPjwvc3Bhbj48L3NwYW4+Jyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBjbHMgPSAnc3AtY2xlYXItZGlzcGxheSc7XG4gICAgICAgICAgICAgICAgaHRtbC5wdXNoKCQoJzxkaXYgLz4nKVxuICAgICAgICAgICAgICAgICAgICAuYXBwZW5kKCQoJzxzcGFuIGRhdGEtY29sb3I9XCJcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XCIgY2xhc3M9XCInICsgY2xzICsgJ1wiPjwvc3Bhbj4nKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3RpdGxlJywgb3B0cy5ub0NvbG9yU2VsZWN0ZWRUZXh0KVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIC5odG1sKClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBcIjxkaXYgY2xhc3M9J3NwLWNmIFwiICsgY2xhc3NOYW1lICsgXCInPlwiICsgaHRtbC5qb2luKCcnKSArIFwiPC9kaXY+XCI7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGlkZUFsbCgpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzcGVjdHJ1bXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChzcGVjdHJ1bXNbaV0pIHtcbiAgICAgICAgICAgICAgICBzcGVjdHJ1bXNbaV0uaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFuY2VPcHRpb25zKG8sIGNhbGxiYWNrQ29udGV4dCkge1xuICAgICAgICB2YXIgb3B0cyA9ICQuZXh0ZW5kKHt9LCBkZWZhdWx0T3B0cywgbyk7XG4gICAgICAgIG9wdHMuY2FsbGJhY2tzID0ge1xuICAgICAgICAgICAgJ21vdmUnOiBiaW5kKG9wdHMubW92ZSwgY2FsbGJhY2tDb250ZXh0KSxcbiAgICAgICAgICAgICdjaGFuZ2UnOiBiaW5kKG9wdHMuY2hhbmdlLCBjYWxsYmFja0NvbnRleHQpLFxuICAgICAgICAgICAgJ3Nob3cnOiBiaW5kKG9wdHMuc2hvdywgY2FsbGJhY2tDb250ZXh0KSxcbiAgICAgICAgICAgICdoaWRlJzogYmluZChvcHRzLmhpZGUsIGNhbGxiYWNrQ29udGV4dCksXG4gICAgICAgICAgICAnYmVmb3JlU2hvdyc6IGJpbmQob3B0cy5iZWZvcmVTaG93LCBjYWxsYmFja0NvbnRleHQpXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG9wdHM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3BlY3RydW0oZWxlbWVudCwgbykge1xuXG4gICAgICAgIHZhciBvcHRzID0gaW5zdGFuY2VPcHRpb25zKG8sIGVsZW1lbnQpLFxuICAgICAgICAgICAgZmxhdCA9IG9wdHMuZmxhdCxcbiAgICAgICAgICAgIHNob3dTZWxlY3Rpb25QYWxldHRlID0gb3B0cy5zaG93U2VsZWN0aW9uUGFsZXR0ZSxcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZUtleSA9IG9wdHMubG9jYWxTdG9yYWdlS2V5LFxuICAgICAgICAgICAgdGhlbWUgPSBvcHRzLnRoZW1lLFxuICAgICAgICAgICAgY2FsbGJhY2tzID0gb3B0cy5jYWxsYmFja3MsXG4gICAgICAgICAgICByZXNpemUgPSB0aHJvdHRsZShyZWZsb3csIDEwKSxcbiAgICAgICAgICAgIHZpc2libGUgPSBmYWxzZSxcbiAgICAgICAgICAgIGlzRHJhZ2dpbmcgPSBmYWxzZSxcbiAgICAgICAgICAgIGRyYWdXaWR0aCA9IDAsXG4gICAgICAgICAgICBkcmFnSGVpZ2h0ID0gMCxcbiAgICAgICAgICAgIGRyYWdIZWxwZXJIZWlnaHQgPSAwLFxuICAgICAgICAgICAgc2xpZGVIZWlnaHQgPSAwLFxuICAgICAgICAgICAgc2xpZGVXaWR0aCA9IDAsXG4gICAgICAgICAgICBhbHBoYVdpZHRoID0gMCxcbiAgICAgICAgICAgIGFscGhhU2xpZGVIZWxwZXJXaWR0aCA9IDAsXG4gICAgICAgICAgICBzbGlkZUhlbHBlckhlaWdodCA9IDAsXG4gICAgICAgICAgICBjdXJyZW50SHVlID0gMCxcbiAgICAgICAgICAgIGN1cnJlbnRTYXR1cmF0aW9uID0gMCxcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IDAsXG4gICAgICAgICAgICBjdXJyZW50QWxwaGEgPSAxLFxuICAgICAgICAgICAgcGFsZXR0ZSA9IFtdLFxuICAgICAgICAgICAgcGFsZXR0ZUFycmF5ID0gW10sXG4gICAgICAgICAgICBwYWxldHRlTG9va3VwID0ge30sXG4gICAgICAgICAgICBzZWxlY3Rpb25QYWxldHRlID0gb3B0cy5zZWxlY3Rpb25QYWxldHRlLnNsaWNlKDApLFxuICAgICAgICAgICAgbWF4U2VsZWN0aW9uU2l6ZSA9IG9wdHMubWF4U2VsZWN0aW9uU2l6ZSxcbiAgICAgICAgICAgIGRyYWdnaW5nQ2xhc3MgPSBcInNwLWRyYWdnaW5nXCIsXG4gICAgICAgICAgICBzaGlmdE1vdmVtZW50RGlyZWN0aW9uID0gbnVsbDtcblxuICAgICAgICB2YXIgZG9jID0gZWxlbWVudC5vd25lckRvY3VtZW50LFxuICAgICAgICAgICAgYm9keSA9IGRvYy5ib2R5LFxuICAgICAgICAgICAgYm91bmRFbGVtZW50ID0gJChlbGVtZW50KSxcbiAgICAgICAgICAgIGRpc2FibGVkID0gZmFsc2UsXG4gICAgICAgICAgICBjb250YWluZXIgPSAkKG1hcmt1cCwgZG9jKS5hZGRDbGFzcyh0aGVtZSksXG4gICAgICAgICAgICBwaWNrZXJDb250YWluZXIgPSBjb250YWluZXIuZmluZChcIi5zcC1waWNrZXItY29udGFpbmVyXCIpLFxuICAgICAgICAgICAgZHJhZ2dlciA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWNvbG9yXCIpLFxuICAgICAgICAgICAgZHJhZ0hlbHBlciA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWRyYWdnZXJcIiksXG4gICAgICAgICAgICBzbGlkZXIgPSBjb250YWluZXIuZmluZChcIi5zcC1odWVcIiksXG4gICAgICAgICAgICBzbGlkZUhlbHBlciA9IGNvbnRhaW5lci5maW5kKFwiLnNwLXNsaWRlclwiKSxcbiAgICAgICAgICAgIGFscGhhU2xpZGVySW5uZXIgPSBjb250YWluZXIuZmluZChcIi5zcC1hbHBoYS1pbm5lclwiKSxcbiAgICAgICAgICAgIGFscGhhU2xpZGVyID0gY29udGFpbmVyLmZpbmQoXCIuc3AtYWxwaGFcIiksXG4gICAgICAgICAgICBhbHBoYVNsaWRlSGVscGVyID0gY29udGFpbmVyLmZpbmQoXCIuc3AtYWxwaGEtaGFuZGxlXCIpLFxuICAgICAgICAgICAgdGV4dElucHV0ID0gY29udGFpbmVyLmZpbmQoXCIuc3AtaW5wdXRcIiksXG4gICAgICAgICAgICBwYWxldHRlQ29udGFpbmVyID0gY29udGFpbmVyLmZpbmQoXCIuc3AtcGFsZXR0ZVwiKSxcbiAgICAgICAgICAgIGluaXRpYWxDb2xvckNvbnRhaW5lciA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWluaXRpYWxcIiksXG4gICAgICAgICAgICBjYW5jZWxCdXR0b24gPSBjb250YWluZXIuZmluZChcIi5zcC1jYW5jZWxcIiksXG4gICAgICAgICAgICBjbGVhckJ1dHRvbiA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWNsZWFyXCIpLFxuICAgICAgICAgICAgY2hvb3NlQnV0dG9uID0gY29udGFpbmVyLmZpbmQoXCIuc3AtY2hvb3NlXCIpLFxuICAgICAgICAgICAgdG9nZ2xlQnV0dG9uID0gY29udGFpbmVyLmZpbmQoXCIuc3AtcGFsZXR0ZS10b2dnbGVcIiksXG4gICAgICAgICAgICBpc0lucHV0ID0gYm91bmRFbGVtZW50LmlzKFwiaW5wdXRcIiksXG4gICAgICAgICAgICBpc0lucHV0VHlwZUNvbG9yID0gaXNJbnB1dCAmJiBib3VuZEVsZW1lbnQuYXR0cihcInR5cGVcIikgPT09IFwiY29sb3JcIiAmJiBpbnB1dFR5cGVDb2xvclN1cHBvcnQoKSxcbiAgICAgICAgICAgIHNob3VsZFJlcGxhY2UgPSBpc0lucHV0ICYmICFmbGF0LFxuICAgICAgICAgICAgcmVwbGFjZXIgPSAoc2hvdWxkUmVwbGFjZSkgPyAkKHJlcGxhY2VJbnB1dCkuYWRkQ2xhc3ModGhlbWUpLmFkZENsYXNzKG9wdHMuY2xhc3NOYW1lKS5hZGRDbGFzcyhvcHRzLnJlcGxhY2VyQ2xhc3NOYW1lKSA6ICQoW10pLFxuICAgICAgICAgICAgb2Zmc2V0RWxlbWVudCA9IChzaG91bGRSZXBsYWNlKSA/IHJlcGxhY2VyIDogYm91bmRFbGVtZW50LFxuICAgICAgICAgICAgcHJldmlld0VsZW1lbnQgPSByZXBsYWNlci5maW5kKFwiLnNwLXByZXZpZXctaW5uZXJcIiksXG4gICAgICAgICAgICBpbml0aWFsQ29sb3IgPSBvcHRzLmNvbG9yIHx8IChpc0lucHV0ICYmIGJvdW5kRWxlbWVudC52YWwoKSksXG4gICAgICAgICAgICBjb2xvck9uU2hvdyA9IGZhbHNlLFxuICAgICAgICAgICAgY3VycmVudFByZWZlcnJlZEZvcm1hdCA9IG9wdHMucHJlZmVycmVkRm9ybWF0LFxuICAgICAgICAgICAgY2xpY2tvdXRGaXJlc0NoYW5nZSA9ICFvcHRzLnNob3dCdXR0b25zIHx8IG9wdHMuY2xpY2tvdXRGaXJlc0NoYW5nZSxcbiAgICAgICAgICAgIGlzRW1wdHkgPSAhaW5pdGlhbENvbG9yLFxuICAgICAgICAgICAgYWxsb3dFbXB0eSA9IG9wdHMuYWxsb3dFbXB0eSAmJiAhaXNJbnB1dFR5cGVDb2xvcjtcblxuICAgICAgICBmdW5jdGlvbiBhcHBseU9wdGlvbnMoKSB7XG5cbiAgICAgICAgICAgIGlmIChvcHRzLnNob3dQYWxldHRlT25seSkge1xuICAgICAgICAgICAgICAgIG9wdHMuc2hvd1BhbGV0dGUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0b2dnbGVCdXR0b24udGV4dChvcHRzLnNob3dQYWxldHRlT25seSA/IG9wdHMudG9nZ2xlUGFsZXR0ZU1vcmVUZXh0IDogb3B0cy50b2dnbGVQYWxldHRlTGVzc1RleHQpO1xuXG4gICAgICAgICAgICBpZiAob3B0cy5wYWxldHRlKSB7XG4gICAgICAgICAgICAgICAgcGFsZXR0ZSA9IG9wdHMucGFsZXR0ZS5zbGljZSgwKTtcbiAgICAgICAgICAgICAgICBwYWxldHRlQXJyYXkgPSAkLmlzQXJyYXkocGFsZXR0ZVswXSkgPyBwYWxldHRlIDogW3BhbGV0dGVdO1xuICAgICAgICAgICAgICAgIHBhbGV0dGVMb29rdXAgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhbGV0dGVBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHBhbGV0dGVBcnJheVtpXS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJnYiA9IHRpbnljb2xvcihwYWxldHRlQXJyYXlbaV1bal0pLnRvUmdiU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWxldHRlTG9va3VwW3JnYl0gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb250YWluZXIudG9nZ2xlQ2xhc3MoXCJzcC1mbGF0XCIsIGZsYXQpO1xuICAgICAgICAgICAgY29udGFpbmVyLnRvZ2dsZUNsYXNzKFwic3AtaW5wdXQtZGlzYWJsZWRcIiwgIW9wdHMuc2hvd0lucHV0KTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLWFscGhhLWVuYWJsZWRcIiwgb3B0cy5zaG93QWxwaGEpO1xuICAgICAgICAgICAgY29udGFpbmVyLnRvZ2dsZUNsYXNzKFwic3AtY2xlYXItZW5hYmxlZFwiLCBhbGxvd0VtcHR5KTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLWJ1dHRvbnMtZGlzYWJsZWRcIiwgIW9wdHMuc2hvd0J1dHRvbnMpO1xuICAgICAgICAgICAgY29udGFpbmVyLnRvZ2dsZUNsYXNzKFwic3AtcGFsZXR0ZS1idXR0b25zLWRpc2FibGVkXCIsICFvcHRzLnRvZ2dsZVBhbGV0dGVPbmx5KTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLXBhbGV0dGUtZGlzYWJsZWRcIiwgIW9wdHMuc2hvd1BhbGV0dGUpO1xuICAgICAgICAgICAgY29udGFpbmVyLnRvZ2dsZUNsYXNzKFwic3AtcGFsZXR0ZS1vbmx5XCIsIG9wdHMuc2hvd1BhbGV0dGVPbmx5KTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLWluaXRpYWwtZGlzYWJsZWRcIiwgIW9wdHMuc2hvd0luaXRpYWwpO1xuICAgICAgICAgICAgY29udGFpbmVyLmFkZENsYXNzKG9wdHMuY2xhc3NOYW1lKS5hZGRDbGFzcyhvcHRzLmNvbnRhaW5lckNsYXNzTmFtZSk7XG5cbiAgICAgICAgICAgIHJlZmxvdygpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcblxuICAgICAgICAgICAgaWYgKElFKSB7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmZpbmQoXCIqOm5vdChpbnB1dClcIikuYXR0cihcInVuc2VsZWN0YWJsZVwiLCBcIm9uXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhcHBseU9wdGlvbnMoKTtcblxuICAgICAgICAgICAgaWYgKHNob3VsZFJlcGxhY2UpIHtcbiAgICAgICAgICAgICAgICBib3VuZEVsZW1lbnQuYWZ0ZXIocmVwbGFjZXIpLmhpZGUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFhbGxvd0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgY2xlYXJCdXR0b24uaGlkZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZmxhdCkge1xuICAgICAgICAgICAgICAgIGJvdW5kRWxlbWVudC5hZnRlcihjb250YWluZXIpLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgdmFyIGFwcGVuZFRvID0gb3B0cy5hcHBlbmRUbyA9PT0gXCJwYXJlbnRcIiA/IGJvdW5kRWxlbWVudC5wYXJlbnQoKSA6ICQob3B0cy5hcHBlbmRUbyk7XG4gICAgICAgICAgICAgICAgaWYgKGFwcGVuZFRvLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBhcHBlbmRUbyA9ICQoXCJib2R5XCIpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGFwcGVuZFRvLmFwcGVuZChjb250YWluZXIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB1cGRhdGVTZWxlY3Rpb25QYWxldHRlRnJvbVN0b3JhZ2UoKTtcblxuICAgICAgICAgICAgb2Zmc2V0RWxlbWVudC5vbihcImNsaWNrLnNwZWN0cnVtIHRvdWNoc3RhcnQuc3BlY3RydW1cIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZSgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoISQoZS50YXJnZXQpLmlzKFwiaW5wdXRcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZihib3VuZEVsZW1lbnQuaXMoXCI6ZGlzYWJsZWRcIikgfHwgKG9wdHMuZGlzYWJsZWQgPT09IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgZGlzYWJsZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBQcmV2ZW50IGNsaWNrcyBmcm9tIGJ1YmJsaW5nIHVwIHRvIGRvY3VtZW50LiAgVGhpcyB3b3VsZCBjYXVzZSBpdCB0byBiZSBoaWRkZW4uXG4gICAgICAgICAgICBjb250YWluZXIuY2xpY2soc3RvcFByb3BhZ2F0aW9uKTtcblxuICAgICAgICAgICAgLy8gSGFuZGxlIHVzZXIgdHlwZWQgaW5wdXRcbiAgICAgICAgICAgIHRleHRJbnB1dC5jaGFuZ2Uoc2V0RnJvbVRleHRJbnB1dCk7XG4gICAgICAgICAgICB0ZXh0SW5wdXQub24oXCJwYXN0ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChzZXRGcm9tVGV4dElucHV0LCAxKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGV4dElucHV0LmtleWRvd24oZnVuY3Rpb24gKGUpIHsgaWYgKGUua2V5Q29kZSA9PSAxMykgeyBzZXRGcm9tVGV4dElucHV0KCk7IH0gfSk7XG5cbiAgICAgICAgICAgIGNhbmNlbEJ1dHRvbi50ZXh0KG9wdHMuY2FuY2VsVGV4dCk7XG4gICAgICAgICAgICBjYW5jZWxCdXR0b24ub24oXCJjbGljay5zcGVjdHJ1bVwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHJldmVydCgpO1xuICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjbGVhckJ1dHRvbi5hdHRyKFwidGl0bGVcIiwgb3B0cy5jbGVhclRleHQpO1xuICAgICAgICAgICAgY2xlYXJCdXR0b24ub24oXCJjbGljay5zcGVjdHJ1bVwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGlzRW1wdHkgPSB0cnVlO1xuICAgICAgICAgICAgICAgIG1vdmUoKTtcblxuICAgICAgICAgICAgICAgIGlmKGZsYXQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9mb3IgdGhlIGZsYXQgc3R5bGUsIHRoaXMgaXMgYSBjaGFuZ2UgZXZlbnRcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlT3JpZ2luYWxJbnB1dCh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY2hvb3NlQnV0dG9uLnRleHQob3B0cy5jaG9vc2VUZXh0KTtcbiAgICAgICAgICAgIGNob29zZUJ1dHRvbi5vbihcImNsaWNrLnNwZWN0cnVtXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoSUUgJiYgdGV4dElucHV0LmlzKFwiOmZvY3VzXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHRJbnB1dC50cmlnZ2VyKCdjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdG9nZ2xlQnV0dG9uLnRleHQob3B0cy5zaG93UGFsZXR0ZU9ubHkgPyBvcHRzLnRvZ2dsZVBhbGV0dGVNb3JlVGV4dCA6IG9wdHMudG9nZ2xlUGFsZXR0ZUxlc3NUZXh0KTtcbiAgICAgICAgICAgIHRvZ2dsZUJ1dHRvbi5vbihcImNsaWNrLnNwZWN0cnVtXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBvcHRzLnNob3dQYWxldHRlT25seSA9ICFvcHRzLnNob3dQYWxldHRlT25seTtcblxuICAgICAgICAgICAgICAgIC8vIFRvIG1ha2Ugc3VyZSB0aGUgUGlja2VyIGFyZWEgaXMgZHJhd24gb24gdGhlIHJpZ2h0LCBuZXh0IHRvIHRoZVxuICAgICAgICAgICAgICAgIC8vIFBhbGV0dGUgYXJlYSAoYW5kIG5vdCBiZWxvdyB0aGUgcGFsZXR0ZSksIGZpcnN0IG1vdmUgdGhlIFBhbGV0dGVcbiAgICAgICAgICAgICAgICAvLyB0byB0aGUgbGVmdCB0byBtYWtlIHNwYWNlIGZvciB0aGUgcGlja2VyLCBwbHVzIDVweCBleHRyYS5cbiAgICAgICAgICAgICAgICAvLyBUaGUgJ2FwcGx5T3B0aW9ucycgZnVuY3Rpb24gcHV0cyB0aGUgd2hvbGUgY29udGFpbmVyIGJhY2sgaW50byBwbGFjZVxuICAgICAgICAgICAgICAgIC8vIGFuZCB0YWtlcyBjYXJlIG9mIHRoZSBidXR0b24tdGV4dCBhbmQgdGhlIHNwLXBhbGV0dGUtb25seSBDU1MgY2xhc3MuXG4gICAgICAgICAgICAgICAgaWYgKCFvcHRzLnNob3dQYWxldHRlT25seSAmJiAhZmxhdCkge1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuY3NzKCdsZWZ0JywgJy09JyArIChwaWNrZXJDb250YWluZXIub3V0ZXJXaWR0aCh0cnVlKSArIDUpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXBwbHlPcHRpb25zKCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZHJhZ2dhYmxlKGFscGhhU2xpZGVyLCBmdW5jdGlvbiAoZHJhZ1gsIGRyYWdZLCBlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudEFscGhhID0gKGRyYWdYIC8gYWxwaGFXaWR0aCk7XG4gICAgICAgICAgICAgICAgaXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRBbHBoYSA9IE1hdGgucm91bmQoY3VycmVudEFscGhhICogMTApIC8gMTA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgICAgfSwgZHJhZ1N0YXJ0LCBkcmFnU3RvcCk7XG5cbiAgICAgICAgICAgIGRyYWdnYWJsZShzbGlkZXIsIGZ1bmN0aW9uIChkcmFnWCwgZHJhZ1kpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50SHVlID0gcGFyc2VGbG9hdChkcmFnWSAvIHNsaWRlSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBpc0VtcHR5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKCFvcHRzLnNob3dBbHBoYSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50QWxwaGEgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgICB9LCBkcmFnU3RhcnQsIGRyYWdTdG9wKTtcblxuICAgICAgICAgICAgZHJhZ2dhYmxlKGRyYWdnZXIsIGZ1bmN0aW9uIChkcmFnWCwgZHJhZ1ksIGUpIHtcblxuICAgICAgICAgICAgICAgIC8vIHNoaWZ0K2RyYWcgc2hvdWxkIHNuYXAgdGhlIG1vdmVtZW50IHRvIGVpdGhlciB0aGUgeCBvciB5IGF4aXMuXG4gICAgICAgICAgICAgICAgaWYgKCFlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIHNoaWZ0TW92ZW1lbnREaXJlY3Rpb24gPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICghc2hpZnRNb3ZlbWVudERpcmVjdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb2xkRHJhZ1ggPSBjdXJyZW50U2F0dXJhdGlvbiAqIGRyYWdXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9sZERyYWdZID0gZHJhZ0hlaWdodCAtIChjdXJyZW50VmFsdWUgKiBkcmFnSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZ1cnRoZXJGcm9tWCA9IE1hdGguYWJzKGRyYWdYIC0gb2xkRHJhZ1gpID4gTWF0aC5hYnMoZHJhZ1kgLSBvbGREcmFnWSk7XG5cbiAgICAgICAgICAgICAgICAgICAgc2hpZnRNb3ZlbWVudERpcmVjdGlvbiA9IGZ1cnRoZXJGcm9tWCA/IFwieFwiIDogXCJ5XCI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIHNldFNhdHVyYXRpb24gPSAhc2hpZnRNb3ZlbWVudERpcmVjdGlvbiB8fCBzaGlmdE1vdmVtZW50RGlyZWN0aW9uID09PSBcInhcIjtcbiAgICAgICAgICAgICAgICB2YXIgc2V0VmFsdWUgPSAhc2hpZnRNb3ZlbWVudERpcmVjdGlvbiB8fCBzaGlmdE1vdmVtZW50RGlyZWN0aW9uID09PSBcInlcIjtcblxuICAgICAgICAgICAgICAgIGlmIChzZXRTYXR1cmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTYXR1cmF0aW9uID0gcGFyc2VGbG9hdChkcmFnWCAvIGRyYWdXaWR0aCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzZXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBwYXJzZUZsb2F0KChkcmFnSGVpZ2h0IC0gZHJhZ1kpIC8gZHJhZ0hlaWdodCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmICghb3B0cy5zaG93QWxwaGEpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEFscGhhID0gMTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBtb3ZlKCk7XG5cbiAgICAgICAgICAgIH0sIGRyYWdTdGFydCwgZHJhZ1N0b3ApO1xuXG4gICAgICAgICAgICBpZiAoISFpbml0aWFsQ29sb3IpIHtcbiAgICAgICAgICAgICAgICBzZXQoaW5pdGlhbENvbG9yKTtcblxuICAgICAgICAgICAgICAgIC8vIEluIGNhc2UgY29sb3Igd2FzIGJsYWNrIC0gdXBkYXRlIHRoZSBwcmV2aWV3IFVJIGFuZCBzZXQgdGhlIGZvcm1hdFxuICAgICAgICAgICAgICAgIC8vIHNpbmNlIHRoZSBzZXQgZnVuY3Rpb24gd2lsbCBub3QgcnVuIChkZWZhdWx0IGNvbG9yIGlzIGJsYWNrKS5cbiAgICAgICAgICAgICAgICB1cGRhdGVVSSgpO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRQcmVmZXJyZWRGb3JtYXQgPSBvcHRzLnByZWZlcnJlZEZvcm1hdCB8fCB0aW55Y29sb3IoaW5pdGlhbENvbG9yKS5mb3JtYXQ7XG5cbiAgICAgICAgICAgICAgICBhZGRDb2xvclRvU2VsZWN0aW9uUGFsZXR0ZShpbml0aWFsQ29sb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlVUkoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGZsYXQpIHtcbiAgICAgICAgICAgICAgICBzaG93KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIHBhbGV0dGVFbGVtZW50Q2xpY2soZSkge1xuICAgICAgICAgICAgICAgIGlmIChlLmRhdGEgJiYgZS5kYXRhLmlnbm9yZSkge1xuICAgICAgICAgICAgICAgICAgICBzZXQoJChlLnRhcmdldCkuY2xvc2VzdChcIi5zcC10aHVtYi1lbFwiKS5kYXRhKFwiY29sb3JcIikpO1xuICAgICAgICAgICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZXQoJChlLnRhcmdldCkuY2xvc2VzdChcIi5zcC10aHVtYi1lbFwiKS5kYXRhKFwiY29sb3JcIikpO1xuICAgICAgICAgICAgICAgICAgICBtb3ZlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIHBpY2tlciBpcyBnb2luZyB0byBjbG9zZSBpbW1lZGlhdGVseSwgYSBwYWxldHRlIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgICAgICAvLyBpcyBhIGNoYW5nZS4gIE90aGVyd2lzZSwgaXQncyBhIG1vdmUgb25seS5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMuaGlkZUFmdGVyUGFsZXR0ZVNlbGVjdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlT3JpZ2luYWxJbnB1dCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHBhbGV0dGVFdmVudCA9IElFID8gXCJtb3VzZWRvd24uc3BlY3RydW1cIiA6IFwiY2xpY2suc3BlY3RydW0gdG91Y2hzdGFydC5zcGVjdHJ1bVwiO1xuICAgICAgICAgICAgcGFsZXR0ZUNvbnRhaW5lci5vbihwYWxldHRlRXZlbnQsIFwiLnNwLXRodW1iLWVsXCIsIHBhbGV0dGVFbGVtZW50Q2xpY2spO1xuICAgICAgICAgICAgaW5pdGlhbENvbG9yQ29udGFpbmVyLm9uKHBhbGV0dGVFdmVudCwgXCIuc3AtdGh1bWItZWw6bnRoLWNoaWxkKDEpXCIsIHsgaWdub3JlOiB0cnVlIH0sIHBhbGV0dGVFbGVtZW50Q2xpY2spO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlU2VsZWN0aW9uUGFsZXR0ZUZyb21TdG9yYWdlKCkge1xuXG4gICAgICAgICAgICBpZiAobG9jYWxTdG9yYWdlS2V5ICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UpIHtcblxuICAgICAgICAgICAgICAgIC8vIE1pZ3JhdGUgb2xkIHBhbGV0dGVzIG92ZXIgdG8gbmV3IGZvcm1hdC4gIE1heSB3YW50IHRvIHJlbW92ZSB0aGlzIGV2ZW50dWFsbHkuXG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9sZFBhbGV0dGUgPSB3aW5kb3cubG9jYWxTdG9yYWdlW2xvY2FsU3RvcmFnZUtleV0uc3BsaXQoXCIsI1wiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9sZFBhbGV0dGUubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHdpbmRvdy5sb2NhbFN0b3JhZ2VbbG9jYWxTdG9yYWdlS2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQuZWFjaChvbGRQYWxldHRlLCBmdW5jdGlvbihpLCBjKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZENvbG9yVG9TZWxlY3Rpb25QYWxldHRlKGMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2goZSkgeyB9XG5cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb25QYWxldHRlID0gd2luZG93LmxvY2FsU3RvcmFnZVtsb2NhbFN0b3JhZ2VLZXldLnNwbGl0KFwiO1wiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gYWRkQ29sb3JUb1NlbGVjdGlvblBhbGV0dGUoY29sb3IpIHtcbiAgICAgICAgICAgIGlmIChzaG93U2VsZWN0aW9uUGFsZXR0ZSkge1xuICAgICAgICAgICAgICAgIHZhciByZ2IgPSB0aW55Y29sb3IoY29sb3IpLnRvUmdiU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgaWYgKCFwYWxldHRlTG9va3VwW3JnYl0gJiYgJC5pbkFycmF5KHJnYiwgc2VsZWN0aW9uUGFsZXR0ZSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvblBhbGV0dGUucHVzaChyZ2IpO1xuICAgICAgICAgICAgICAgICAgICB3aGlsZShzZWxlY3Rpb25QYWxldHRlLmxlbmd0aCA+IG1heFNlbGVjdGlvblNpemUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvblBhbGV0dGUuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2VLZXkgJiYgd2luZG93LmxvY2FsU3RvcmFnZSkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZVtsb2NhbFN0b3JhZ2VLZXldID0gc2VsZWN0aW9uUGFsZXR0ZS5qb2luKFwiO1wiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaChlKSB7IH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBnZXRVbmlxdWVTZWxlY3Rpb25QYWxldHRlKCkge1xuICAgICAgICAgICAgdmFyIHVuaXF1ZSA9IFtdO1xuICAgICAgICAgICAgaWYgKG9wdHMuc2hvd1BhbGV0dGUpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlbGVjdGlvblBhbGV0dGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJnYiA9IHRpbnljb2xvcihzZWxlY3Rpb25QYWxldHRlW2ldKS50b1JnYlN0cmluZygpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghcGFsZXR0ZUxvb2t1cFtyZ2JdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bmlxdWUucHVzaChzZWxlY3Rpb25QYWxldHRlW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHVuaXF1ZS5yZXZlcnNlKCkuc2xpY2UoMCwgb3B0cy5tYXhTZWxlY3Rpb25TaXplKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGRyYXdQYWxldHRlKCkge1xuXG4gICAgICAgICAgICB2YXIgY3VycmVudENvbG9yID0gZ2V0KCk7XG5cbiAgICAgICAgICAgIHZhciBodG1sID0gJC5tYXAocGFsZXR0ZUFycmF5LCBmdW5jdGlvbiAocGFsZXR0ZSwgaSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWxldHRlVGVtcGxhdGUocGFsZXR0ZSwgY3VycmVudENvbG9yLCBcInNwLXBhbGV0dGUtcm93IHNwLXBhbGV0dGUtcm93LVwiICsgaSwgb3B0cyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdXBkYXRlU2VsZWN0aW9uUGFsZXR0ZUZyb21TdG9yYWdlKCk7XG5cbiAgICAgICAgICAgIGlmIChzZWxlY3Rpb25QYWxldHRlKSB7XG4gICAgICAgICAgICAgICAgaHRtbC5wdXNoKHBhbGV0dGVUZW1wbGF0ZShnZXRVbmlxdWVTZWxlY3Rpb25QYWxldHRlKCksIGN1cnJlbnRDb2xvciwgXCJzcC1wYWxldHRlLXJvdyBzcC1wYWxldHRlLXJvdy1zZWxlY3Rpb25cIiwgb3B0cykpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwYWxldHRlQ29udGFpbmVyLmh0bWwoaHRtbC5qb2luKFwiXCIpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGRyYXdJbml0aWFsKCkge1xuICAgICAgICAgICAgaWYgKG9wdHMuc2hvd0luaXRpYWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5pdGlhbCA9IGNvbG9yT25TaG93O1xuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50ID0gZ2V0KCk7XG4gICAgICAgICAgICAgICAgaW5pdGlhbENvbG9yQ29udGFpbmVyLmh0bWwocGFsZXR0ZVRlbXBsYXRlKFtpbml0aWFsLCBjdXJyZW50XSwgY3VycmVudCwgXCJzcC1wYWxldHRlLXJvdy1pbml0aWFsXCIsIG9wdHMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGRyYWdTdGFydCgpIHtcbiAgICAgICAgICAgIGlmIChkcmFnSGVpZ2h0IDw9IDAgfHwgZHJhZ1dpZHRoIDw9IDAgfHwgc2xpZGVIZWlnaHQgPD0gMCkge1xuICAgICAgICAgICAgICAgIHJlZmxvdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXNEcmFnZ2luZyA9IHRydWU7XG4gICAgICAgICAgICBjb250YWluZXIuYWRkQ2xhc3MoZHJhZ2dpbmdDbGFzcyk7XG4gICAgICAgICAgICBzaGlmdE1vdmVtZW50RGlyZWN0aW9uID0gbnVsbDtcbiAgICAgICAgICAgIGJvdW5kRWxlbWVudC50cmlnZ2VyKCdkcmFnc3RhcnQuc3BlY3RydW0nLCBbIGdldCgpIF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZHJhZ1N0b3AoKSB7XG4gICAgICAgICAgICBpc0RyYWdnaW5nID0gZmFsc2U7XG4gICAgICAgICAgICBjb250YWluZXIucmVtb3ZlQ2xhc3MoZHJhZ2dpbmdDbGFzcyk7XG4gICAgICAgICAgICBib3VuZEVsZW1lbnQudHJpZ2dlcignZHJhZ3N0b3Auc3BlY3RydW0nLCBbIGdldCgpIF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2V0RnJvbVRleHRJbnB1dCgpIHtcblxuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGV4dElucHV0LnZhbCgpO1xuXG4gICAgICAgICAgICBpZiAoKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSBcIlwiKSAmJiBhbGxvd0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgc2V0KG51bGwpO1xuICAgICAgICAgICAgICAgIG1vdmUoKTtcbiAgICAgICAgICAgICAgICB1cGRhdGVPcmlnaW5hbElucHV0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgdGlueSA9IHRpbnljb2xvcih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHRpbnkuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldCh0aW55KTtcbiAgICAgICAgICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVPcmlnaW5hbElucHV0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0SW5wdXQuYWRkQ2xhc3MoXCJzcC12YWxpZGF0aW9uLWVycm9yXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHRvZ2dsZSgpIHtcbiAgICAgICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2hvdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2hvdygpIHtcbiAgICAgICAgICAgIHZhciBldmVudCA9ICQuRXZlbnQoJ2JlZm9yZVNob3cuc3BlY3RydW0nKTtcblxuICAgICAgICAgICAgaWYgKHZpc2libGUpIHtcbiAgICAgICAgICAgICAgICByZWZsb3coKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJvdW5kRWxlbWVudC50cmlnZ2VyKGV2ZW50LCBbIGdldCgpIF0pO1xuXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2tzLmJlZm9yZVNob3coZ2V0KCkpID09PSBmYWxzZSB8fCBldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaGlkZUFsbCgpO1xuICAgICAgICAgICAgdmlzaWJsZSA9IHRydWU7XG5cbiAgICAgICAgICAgICQoZG9jKS5vbihcImtleWRvd24uc3BlY3RydW1cIiwgb25rZXlkb3duKTtcbiAgICAgICAgICAgICQoZG9jKS5vbihcImNsaWNrLnNwZWN0cnVtXCIsIGNsaWNrb3V0KTtcbiAgICAgICAgICAgICQod2luZG93KS5vbihcInJlc2l6ZS5zcGVjdHJ1bVwiLCByZXNpemUpO1xuICAgICAgICAgICAgcmVwbGFjZXIuYWRkQ2xhc3MoXCJzcC1hY3RpdmVcIik7XG4gICAgICAgICAgICBjb250YWluZXIucmVtb3ZlQ2xhc3MoXCJzcC1oaWRkZW5cIik7XG5cbiAgICAgICAgICAgIHJlZmxvdygpO1xuICAgICAgICAgICAgdXBkYXRlVUkoKTtcblxuICAgICAgICAgICAgY29sb3JPblNob3cgPSBnZXQoKTtcblxuICAgICAgICAgICAgZHJhd0luaXRpYWwoKTtcbiAgICAgICAgICAgIGNhbGxiYWNrcy5zaG93KGNvbG9yT25TaG93KTtcbiAgICAgICAgICAgIGJvdW5kRWxlbWVudC50cmlnZ2VyKCdzaG93LnNwZWN0cnVtJywgWyBjb2xvck9uU2hvdyBdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG9ua2V5ZG93bihlKSB7XG4gICAgICAgICAgICAvLyBDbG9zZSBvbiBFU0NcbiAgICAgICAgICAgIGlmIChlLmtleUNvZGUgPT09IDI3KSB7XG4gICAgICAgICAgICAgICAgaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY2xpY2tvdXQoZSkge1xuICAgICAgICAgICAgLy8gUmV0dXJuIG9uIHJpZ2h0IGNsaWNrLlxuICAgICAgICAgICAgaWYgKGUuYnV0dG9uID09IDIpIHsgcmV0dXJuOyB9XG5cbiAgICAgICAgICAgIC8vIElmIGEgZHJhZyBldmVudCB3YXMgaGFwcGVuaW5nIGR1cmluZyB0aGUgbW91c2V1cCwgZG9uJ3QgaGlkZVxuICAgICAgICAgICAgLy8gb24gY2xpY2suXG4gICAgICAgICAgICBpZiAoaXNEcmFnZ2luZykgeyByZXR1cm47IH1cblxuICAgICAgICAgICAgaWYgKGNsaWNrb3V0RmlyZXNDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVPcmlnaW5hbElucHV0KHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV2ZXJ0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoaWRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBoaWRlKCkge1xuICAgICAgICAgICAgLy8gUmV0dXJuIGlmIGhpZGluZyBpcyB1bm5lY2Vzc2FyeVxuICAgICAgICAgICAgaWYgKCF2aXNpYmxlIHx8IGZsYXQpIHsgcmV0dXJuOyB9XG4gICAgICAgICAgICB2aXNpYmxlID0gZmFsc2U7XG5cbiAgICAgICAgICAgICQoZG9jKS5vZmYoXCJrZXlkb3duLnNwZWN0cnVtXCIsIG9ua2V5ZG93bik7XG4gICAgICAgICAgICAkKGRvYykub2ZmKFwiY2xpY2suc3BlY3RydW1cIiwgY2xpY2tvdXQpO1xuICAgICAgICAgICAgJCh3aW5kb3cpLm9mZihcInJlc2l6ZS5zcGVjdHJ1bVwiLCByZXNpemUpO1xuXG4gICAgICAgICAgICByZXBsYWNlci5yZW1vdmVDbGFzcyhcInNwLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5hZGRDbGFzcyhcInNwLWhpZGRlblwiKTtcblxuICAgICAgICAgICAgY2FsbGJhY2tzLmhpZGUoZ2V0KCkpO1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LnRyaWdnZXIoJ2hpZGUuc3BlY3RydW0nLCBbIGdldCgpIF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gcmV2ZXJ0KCkge1xuICAgICAgICAgICAgc2V0KGNvbG9yT25TaG93LCB0cnVlKTtcbiAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQodHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzZXQoY29sb3IsIGlnbm9yZUZvcm1hdENoYW5nZSkge1xuICAgICAgICAgICAgaWYgKHRpbnljb2xvci5lcXVhbHMoY29sb3IsIGdldCgpKSkge1xuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBVSSBqdXN0IGluIGNhc2UgYSB2YWxpZGF0aW9uIGVycm9yIG5lZWRzXG4gICAgICAgICAgICAgICAgLy8gdG8gYmUgY2xlYXJlZC5cbiAgICAgICAgICAgICAgICB1cGRhdGVVSSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG5ld0NvbG9yLCBuZXdIc3Y7XG4gICAgICAgICAgICBpZiAoIWNvbG9yICYmIGFsbG93RW1wdHkpIHtcbiAgICAgICAgICAgICAgICBpc0VtcHR5ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIG5ld0NvbG9yID0gdGlueWNvbG9yKGNvbG9yKTtcbiAgICAgICAgICAgICAgICBuZXdIc3YgPSBuZXdDb2xvci50b0hzdigpO1xuXG4gICAgICAgICAgICAgICAgY3VycmVudEh1ZSA9IChuZXdIc3YuaCAlIDM2MCkgLyAzNjA7XG4gICAgICAgICAgICAgICAgY3VycmVudFNhdHVyYXRpb24gPSBuZXdIc3YucztcbiAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBuZXdIc3YudjtcbiAgICAgICAgICAgICAgICBjdXJyZW50QWxwaGEgPSBuZXdIc3YuYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVwZGF0ZVVJKCk7XG5cbiAgICAgICAgICAgIGlmIChuZXdDb2xvciAmJiBuZXdDb2xvci5pc1ZhbGlkKCkgJiYgIWlnbm9yZUZvcm1hdENoYW5nZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRQcmVmZXJyZWRGb3JtYXQgPSBvcHRzLnByZWZlcnJlZEZvcm1hdCB8fCBuZXdDb2xvci5nZXRGb3JtYXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldChvcHRzKSB7XG4gICAgICAgICAgICBvcHRzID0gb3B0cyB8fCB7IH07XG5cbiAgICAgICAgICAgIGlmIChhbGxvd0VtcHR5ICYmIGlzRW1wdHkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRpbnljb2xvci5mcm9tUmF0aW8oe1xuICAgICAgICAgICAgICAgIGg6IGN1cnJlbnRIdWUsXG4gICAgICAgICAgICAgICAgczogY3VycmVudFNhdHVyYXRpb24sXG4gICAgICAgICAgICAgICAgdjogY3VycmVudFZhbHVlLFxuICAgICAgICAgICAgICAgIGE6IE1hdGgucm91bmQoY3VycmVudEFscGhhICogMTAwMCkgLyAxMDAwXG4gICAgICAgICAgICB9LCB7IGZvcm1hdDogb3B0cy5mb3JtYXQgfHwgY3VycmVudFByZWZlcnJlZEZvcm1hdCB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGlzVmFsaWQoKSB7XG4gICAgICAgICAgICByZXR1cm4gIXRleHRJbnB1dC5oYXNDbGFzcyhcInNwLXZhbGlkYXRpb24tZXJyb3JcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBtb3ZlKCkge1xuICAgICAgICAgICAgdXBkYXRlVUkoKTtcblxuICAgICAgICAgICAgY2FsbGJhY2tzLm1vdmUoZ2V0KCkpO1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LnRyaWdnZXIoJ21vdmUuc3BlY3RydW0nLCBbIGdldCgpIF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlVUkoKSB7XG5cbiAgICAgICAgICAgIHRleHRJbnB1dC5yZW1vdmVDbGFzcyhcInNwLXZhbGlkYXRpb24tZXJyb3JcIik7XG5cbiAgICAgICAgICAgIHVwZGF0ZUhlbHBlckxvY2F0aW9ucygpO1xuXG4gICAgICAgICAgICAvLyBVcGRhdGUgZHJhZ2dlciBiYWNrZ3JvdW5kIGNvbG9yIChncmFkaWVudHMgdGFrZSBjYXJlIG9mIHNhdHVyYXRpb24gYW5kIHZhbHVlKS5cbiAgICAgICAgICAgIHZhciBmbGF0Q29sb3IgPSB0aW55Y29sb3IuZnJvbVJhdGlvKHsgaDogY3VycmVudEh1ZSwgczogMSwgdjogMSB9KTtcbiAgICAgICAgICAgIGRyYWdnZXIuY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLCBmbGF0Q29sb3IudG9IZXhTdHJpbmcoKSk7XG5cbiAgICAgICAgICAgIC8vIEdldCBhIGZvcm1hdCB0aGF0IGFscGhhIHdpbGwgYmUgaW5jbHVkZWQgaW4gKGhleCBhbmQgbmFtZXMgaWdub3JlIGFscGhhKVxuICAgICAgICAgICAgdmFyIGZvcm1hdCA9IGN1cnJlbnRQcmVmZXJyZWRGb3JtYXQ7XG4gICAgICAgICAgICBpZiAoY3VycmVudEFscGhhIDwgMSAmJiAhKGN1cnJlbnRBbHBoYSA9PT0gMCAmJiBmb3JtYXQgPT09IFwibmFtZVwiKSkge1xuICAgICAgICAgICAgICAgIGlmIChmb3JtYXQgPT09IFwiaGV4XCIgfHwgZm9ybWF0ID09PSBcImhleDNcIiB8fCBmb3JtYXQgPT09IFwiaGV4NlwiIHx8IGZvcm1hdCA9PT0gXCJuYW1lXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0ID0gXCJyZ2JcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciByZWFsQ29sb3IgPSBnZXQoeyBmb3JtYXQ6IGZvcm1hdCB9KSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5Q29sb3IgPSAnJztcblxuICAgICAgICAgICAgIC8vcmVzZXQgYmFja2dyb3VuZCBpbmZvIGZvciBwcmV2aWV3IGVsZW1lbnRcbiAgICAgICAgICAgIHByZXZpZXdFbGVtZW50LnJlbW92ZUNsYXNzKFwic3AtY2xlYXItZGlzcGxheVwiKTtcbiAgICAgICAgICAgIHByZXZpZXdFbGVtZW50LmNzcygnYmFja2dyb3VuZC1jb2xvcicsICd0cmFuc3BhcmVudCcpO1xuXG4gICAgICAgICAgICBpZiAoIXJlYWxDb2xvciAmJiBhbGxvd0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSByZXBsYWNlZCBlbGVtZW50cyBiYWNrZ3JvdW5kIHdpdGggaWNvbiBpbmRpY2F0aW5nIG5vIGNvbG9yIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgIHByZXZpZXdFbGVtZW50LmFkZENsYXNzKFwic3AtY2xlYXItZGlzcGxheVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciByZWFsSGV4ID0gcmVhbENvbG9yLnRvSGV4U3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgIHJlYWxSZ2IgPSByZWFsQ29sb3IudG9SZ2JTdHJpbmcoKTtcblxuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgcmVwbGFjZWQgZWxlbWVudHMgYmFja2dyb3VuZCBjb2xvciAod2l0aCBhY3R1YWwgc2VsZWN0ZWQgY29sb3IpXG4gICAgICAgICAgICAgICAgaWYgKHJnYmFTdXBwb3J0IHx8IHJlYWxDb2xvci5hbHBoYSA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3RWxlbWVudC5jc3MoXCJiYWNrZ3JvdW5kLWNvbG9yXCIsIHJlYWxSZ2IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcHJldmlld0VsZW1lbnQuY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLCBcInRyYW5zcGFyZW50XCIpO1xuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3RWxlbWVudC5jc3MoXCJmaWx0ZXJcIiwgcmVhbENvbG9yLnRvRmlsdGVyKCkpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChvcHRzLnNob3dBbHBoYSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmdiID0gcmVhbENvbG9yLnRvUmdiKCk7XG4gICAgICAgICAgICAgICAgICAgIHJnYi5hID0gMDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlYWxBbHBoYSA9IHRpbnljb2xvcihyZ2IpLnRvUmdiU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBncmFkaWVudCA9IFwibGluZWFyLWdyYWRpZW50KGxlZnQsIFwiICsgcmVhbEFscGhhICsgXCIsIFwiICsgcmVhbEhleCArIFwiKVwiO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChJRSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxwaGFTbGlkZXJJbm5lci5jc3MoXCJmaWx0ZXJcIiwgdGlueWNvbG9yKHJlYWxBbHBoYSkudG9GaWx0ZXIoeyBncmFkaWVudFR5cGU6IDEgfSwgcmVhbEhleCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxwaGFTbGlkZXJJbm5lci5jc3MoXCJiYWNrZ3JvdW5kXCIsIFwiLXdlYmtpdC1cIiArIGdyYWRpZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFscGhhU2xpZGVySW5uZXIuY3NzKFwiYmFja2dyb3VuZFwiLCBcIi1tb3otXCIgKyBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbHBoYVNsaWRlcklubmVyLmNzcyhcImJhY2tncm91bmRcIiwgXCItbXMtXCIgKyBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBVc2UgY3VycmVudCBzeW50YXggZ3JhZGllbnQgb24gdW5wcmVmaXhlZCBwcm9wZXJ0eS5cbiAgICAgICAgICAgICAgICAgICAgICAgIGFscGhhU2xpZGVySW5uZXIuY3NzKFwiYmFja2dyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBcIiArIHJlYWxBbHBoYSArIFwiLCBcIiArIHJlYWxIZXggKyBcIilcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBkaXNwbGF5Q29sb3IgPSByZWFsQ29sb3IudG9TdHJpbmcoZm9ybWF0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSB0ZXh0IGVudHJ5IGlucHV0IGFzIGl0IGNoYW5nZXMgaGFwcGVuXG4gICAgICAgICAgICBpZiAob3B0cy5zaG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICB0ZXh0SW5wdXQudmFsKGRpc3BsYXlDb2xvcik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChvcHRzLnNob3dQYWxldHRlKSB7XG4gICAgICAgICAgICAgICAgZHJhd1BhbGV0dGUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZHJhd0luaXRpYWwoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZUhlbHBlckxvY2F0aW9ucygpIHtcbiAgICAgICAgICAgIHZhciBzID0gY3VycmVudFNhdHVyYXRpb247XG4gICAgICAgICAgICB2YXIgdiA9IGN1cnJlbnRWYWx1ZTtcblxuICAgICAgICAgICAgaWYoYWxsb3dFbXB0eSAmJiBpc0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgLy9pZiBzZWxlY3RlZCBjb2xvciBpcyBlbXB0eSwgaGlkZSB0aGUgaGVscGVyc1xuICAgICAgICAgICAgICAgIGFscGhhU2xpZGVIZWxwZXIuaGlkZSgpO1xuICAgICAgICAgICAgICAgIHNsaWRlSGVscGVyLmhpZGUoKTtcbiAgICAgICAgICAgICAgICBkcmFnSGVscGVyLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vbWFrZSBzdXJlIGhlbHBlcnMgYXJlIHZpc2libGVcbiAgICAgICAgICAgICAgICBhbHBoYVNsaWRlSGVscGVyLnNob3coKTtcbiAgICAgICAgICAgICAgICBzbGlkZUhlbHBlci5zaG93KCk7XG4gICAgICAgICAgICAgICAgZHJhZ0hlbHBlci5zaG93KCk7XG5cbiAgICAgICAgICAgICAgICAvLyBXaGVyZSB0byBzaG93IHRoZSBsaXR0bGUgY2lyY2xlIGluIHRoYXQgZGlzcGxheXMgeW91ciBjdXJyZW50IHNlbGVjdGVkIGNvbG9yXG4gICAgICAgICAgICAgICAgdmFyIGRyYWdYID0gcyAqIGRyYWdXaWR0aDtcbiAgICAgICAgICAgICAgICB2YXIgZHJhZ1kgPSBkcmFnSGVpZ2h0IC0gKHYgKiBkcmFnSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBkcmFnWCA9IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAtZHJhZ0hlbHBlckhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgTWF0aC5taW4oZHJhZ1dpZHRoIC0gZHJhZ0hlbHBlckhlaWdodCwgZHJhZ1ggLSBkcmFnSGVscGVySGVpZ2h0KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgZHJhZ1kgPSBNYXRoLm1heChcbiAgICAgICAgICAgICAgICAgICAgLWRyYWdIZWxwZXJIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIE1hdGgubWluKGRyYWdIZWlnaHQgLSBkcmFnSGVscGVySGVpZ2h0LCBkcmFnWSAtIGRyYWdIZWxwZXJIZWlnaHQpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBkcmFnSGVscGVyLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIFwidG9wXCI6IGRyYWdZICsgXCJweFwiLFxuICAgICAgICAgICAgICAgICAgICBcImxlZnRcIjogZHJhZ1ggKyBcInB4XCJcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHZhciBhbHBoYVggPSBjdXJyZW50QWxwaGEgKiBhbHBoYVdpZHRoO1xuICAgICAgICAgICAgICAgIGFscGhhU2xpZGVIZWxwZXIuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgXCJsZWZ0XCI6IChhbHBoYVggLSAoYWxwaGFTbGlkZUhlbHBlcldpZHRoIC8gMikpICsgXCJweFwiXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvLyBXaGVyZSB0byBzaG93IHRoZSBiYXIgdGhhdCBkaXNwbGF5cyB5b3VyIGN1cnJlbnQgc2VsZWN0ZWQgaHVlXG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlWSA9IChjdXJyZW50SHVlKSAqIHNsaWRlSGVpZ2h0O1xuICAgICAgICAgICAgICAgIHNsaWRlSGVscGVyLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIFwidG9wXCI6IChzbGlkZVkgLSBzbGlkZUhlbHBlckhlaWdodCkgKyBcInB4XCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZU9yaWdpbmFsSW5wdXQoZmlyZUNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgY29sb3IgPSBnZXQoKSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5Q29sb3IgPSAnJyxcbiAgICAgICAgICAgICAgICBoYXNDaGFuZ2VkID0gIXRpbnljb2xvci5lcXVhbHMoY29sb3IsIGNvbG9yT25TaG93KTtcblxuICAgICAgICAgICAgaWYgKGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheUNvbG9yID0gY29sb3IudG9TdHJpbmcoY3VycmVudFByZWZlcnJlZEZvcm1hdCk7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBzZWxlY3Rpb24gcGFsZXR0ZSB3aXRoIHRoZSBjdXJyZW50IGNvbG9yXG4gICAgICAgICAgICAgICAgYWRkQ29sb3JUb1NlbGVjdGlvblBhbGV0dGUoY29sb3IpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoaXNJbnB1dCkge1xuICAgICAgICAgICAgICAgIGJvdW5kRWxlbWVudC52YWwoZGlzcGxheUNvbG9yKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGZpcmVDYWxsYmFjayAmJiBoYXNDaGFuZ2VkKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzLmNoYW5nZShjb2xvcik7XG4gICAgICAgICAgICAgICAgYm91bmRFbGVtZW50LnRyaWdnZXIoJ2NoYW5nZScsIFsgY29sb3IgXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiByZWZsb3coKSB7XG4gICAgICAgICAgICBpZiAoIXZpc2libGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47IC8vIENhbGN1bGF0aW9ucyB3b3VsZCBiZSB1c2VsZXNzIGFuZCB3b3VsZG4ndCBiZSByZWxpYWJsZSBhbnl3YXlzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkcmFnV2lkdGggPSBkcmFnZ2VyLndpZHRoKCk7XG4gICAgICAgICAgICBkcmFnSGVpZ2h0ID0gZHJhZ2dlci5oZWlnaHQoKTtcbiAgICAgICAgICAgIGRyYWdIZWxwZXJIZWlnaHQgPSBkcmFnSGVscGVyLmhlaWdodCgpO1xuICAgICAgICAgICAgc2xpZGVXaWR0aCA9IHNsaWRlci53aWR0aCgpO1xuICAgICAgICAgICAgc2xpZGVIZWlnaHQgPSBzbGlkZXIuaGVpZ2h0KCk7XG4gICAgICAgICAgICBzbGlkZUhlbHBlckhlaWdodCA9IHNsaWRlSGVscGVyLmhlaWdodCgpO1xuICAgICAgICAgICAgYWxwaGFXaWR0aCA9IGFscGhhU2xpZGVyLndpZHRoKCk7XG4gICAgICAgICAgICBhbHBoYVNsaWRlSGVscGVyV2lkdGggPSBhbHBoYVNsaWRlSGVscGVyLndpZHRoKCk7XG5cbiAgICAgICAgICAgIGlmICghZmxhdCkge1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5jc3MoXCJwb3NpdGlvblwiLCBcImFic29sdXRlXCIpO1xuICAgICAgICAgICAgICAgIGlmIChvcHRzLm9mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIub2Zmc2V0KG9wdHMub2Zmc2V0KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIub2Zmc2V0KGdldE9mZnNldChjb250YWluZXIsIG9mZnNldEVsZW1lbnQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHVwZGF0ZUhlbHBlckxvY2F0aW9ucygpO1xuXG4gICAgICAgICAgICBpZiAob3B0cy5zaG93UGFsZXR0ZSkge1xuICAgICAgICAgICAgICAgIGRyYXdQYWxldHRlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJvdW5kRWxlbWVudC50cmlnZ2VyKCdyZWZsb3cuc3BlY3RydW0nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICAgICAgICBib3VuZEVsZW1lbnQuc2hvdygpO1xuICAgICAgICAgICAgb2Zmc2V0RWxlbWVudC5vZmYoXCJjbGljay5zcGVjdHJ1bSB0b3VjaHN0YXJ0LnNwZWN0cnVtXCIpO1xuICAgICAgICAgICAgY29udGFpbmVyLnJlbW92ZSgpO1xuICAgICAgICAgICAgcmVwbGFjZXIucmVtb3ZlKCk7XG4gICAgICAgICAgICBzcGVjdHJ1bXNbc3BlY3QuaWRdID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG9wdGlvbihvcHRpb25OYW1lLCBvcHRpb25WYWx1ZSkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbk5hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAkLmV4dGVuZCh7fSwgb3B0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0aW9uVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBvcHRzW29wdGlvbk5hbWVdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBvcHRzW29wdGlvbk5hbWVdID0gb3B0aW9uVmFsdWU7XG5cbiAgICAgICAgICAgIGlmIChvcHRpb25OYW1lID09PSBcInByZWZlcnJlZEZvcm1hdFwiKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFByZWZlcnJlZEZvcm1hdCA9IG9wdHMucHJlZmVycmVkRm9ybWF0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwbHlPcHRpb25zKCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgICAgICAgICBkaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LmF0dHIoXCJkaXNhYmxlZFwiLCBmYWxzZSk7XG4gICAgICAgICAgICBvZmZzZXRFbGVtZW50LnJlbW92ZUNsYXNzKFwic3AtZGlzYWJsZWRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBkaXNhYmxlKCkge1xuICAgICAgICAgICAgaGlkZSgpO1xuICAgICAgICAgICAgZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LmF0dHIoXCJkaXNhYmxlZFwiLCB0cnVlKTtcbiAgICAgICAgICAgIG9mZnNldEVsZW1lbnQuYWRkQ2xhc3MoXCJzcC1kaXNhYmxlZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHNldE9mZnNldChjb29yZCkge1xuICAgICAgICAgICAgb3B0cy5vZmZzZXQgPSBjb29yZDtcbiAgICAgICAgICAgIHJlZmxvdygpO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5pdGlhbGl6ZSgpO1xuXG4gICAgICAgIHZhciBzcGVjdCA9IHtcbiAgICAgICAgICAgIHNob3c6IHNob3csXG4gICAgICAgICAgICBoaWRlOiBoaWRlLFxuICAgICAgICAgICAgdG9nZ2xlOiB0b2dnbGUsXG4gICAgICAgICAgICByZWZsb3c6IHJlZmxvdyxcbiAgICAgICAgICAgIG9wdGlvbjogb3B0aW9uLFxuICAgICAgICAgICAgZW5hYmxlOiBlbmFibGUsXG4gICAgICAgICAgICBkaXNhYmxlOiBkaXNhYmxlLFxuICAgICAgICAgICAgb2Zmc2V0OiBzZXRPZmZzZXQsXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgc2V0KGMpO1xuICAgICAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQ6IGdldCxcbiAgICAgICAgICAgIGRlc3Ryb3k6IGRlc3Ryb3ksXG4gICAgICAgICAgICBjb250YWluZXI6IGNvbnRhaW5lclxuICAgICAgICB9O1xuXG4gICAgICAgIHNwZWN0LmlkID0gc3BlY3RydW1zLnB1c2goc3BlY3QpIC0gMTtcblxuICAgICAgICByZXR1cm4gc3BlY3Q7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBjaGVja09mZnNldCAtIGdldCB0aGUgb2Zmc2V0IGJlbG93L2Fib3ZlIGFuZCBsZWZ0L3JpZ2h0IGVsZW1lbnQgZGVwZW5kaW5nIG9uIHNjcmVlbiBwb3NpdGlvblxuICAgICogVGhhbmtzIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5LXVpL2Jsb2IvbWFzdGVyL3VpL2pxdWVyeS51aS5kYXRlcGlja2VyLmpzXG4gICAgKi9cbiAgICBmdW5jdGlvbiBnZXRPZmZzZXQocGlja2VyLCBpbnB1dCkge1xuICAgICAgICB2YXIgZXh0cmFZID0gMDtcbiAgICAgICAgdmFyIGRwV2lkdGggPSBwaWNrZXIub3V0ZXJXaWR0aCgpO1xuICAgICAgICB2YXIgZHBIZWlnaHQgPSBwaWNrZXIub3V0ZXJIZWlnaHQoKTtcbiAgICAgICAgdmFyIGlucHV0SGVpZ2h0ID0gaW5wdXQub3V0ZXJIZWlnaHQoKTtcbiAgICAgICAgdmFyIGRvYyA9IHBpY2tlclswXS5vd25lckRvY3VtZW50O1xuICAgICAgICB2YXIgZG9jRWxlbSA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHZhciB2aWV3V2lkdGggPSBkb2NFbGVtLmNsaWVudFdpZHRoICsgJChkb2MpLnNjcm9sbExlZnQoKTtcbiAgICAgICAgdmFyIHZpZXdIZWlnaHQgPSBkb2NFbGVtLmNsaWVudEhlaWdodCArICQoZG9jKS5zY3JvbGxUb3AoKTtcbiAgICAgICAgdmFyIG9mZnNldCA9IGlucHV0Lm9mZnNldCgpO1xuICAgICAgICB2YXIgb2Zmc2V0TGVmdCA9IG9mZnNldC5sZWZ0O1xuICAgICAgICB2YXIgb2Zmc2V0VG9wID0gb2Zmc2V0LnRvcDtcblxuICAgICAgICBvZmZzZXRUb3AgKz0gaW5wdXRIZWlnaHQ7XG5cbiAgICAgICAgb2Zmc2V0TGVmdCAtPVxuICAgICAgICAgICAgTWF0aC5taW4ob2Zmc2V0TGVmdCwgKG9mZnNldExlZnQgKyBkcFdpZHRoID4gdmlld1dpZHRoICYmIHZpZXdXaWR0aCA+IGRwV2lkdGgpID9cbiAgICAgICAgICAgIE1hdGguYWJzKG9mZnNldExlZnQgKyBkcFdpZHRoIC0gdmlld1dpZHRoKSA6IDApO1xuXG4gICAgICAgIG9mZnNldFRvcCAtPVxuICAgICAgICAgICAgTWF0aC5taW4ob2Zmc2V0VG9wLCAoKG9mZnNldFRvcCArIGRwSGVpZ2h0ID4gdmlld0hlaWdodCAmJiB2aWV3SGVpZ2h0ID4gZHBIZWlnaHQpID9cbiAgICAgICAgICAgIE1hdGguYWJzKGRwSGVpZ2h0ICsgaW5wdXRIZWlnaHQgLSBleHRyYVkpIDogZXh0cmFZKSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvcDogb2Zmc2V0VG9wLFxuICAgICAgICAgICAgYm90dG9tOiBvZmZzZXQuYm90dG9tLFxuICAgICAgICAgICAgbGVmdDogb2Zmc2V0TGVmdCxcbiAgICAgICAgICAgIHJpZ2h0OiBvZmZzZXQucmlnaHQsXG4gICAgICAgICAgICB3aWR0aDogb2Zmc2V0LndpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBvZmZzZXQuaGVpZ2h0XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBub29wIC0gZG8gbm90aGluZ1xuICAgICovXG4gICAgZnVuY3Rpb24gbm9vcCgpIHtcblxuICAgIH1cblxuICAgIC8qKlxuICAgICogc3RvcFByb3BhZ2F0aW9uIC0gbWFrZXMgdGhlIGNvZGUgb25seSBkb2luZyB0aGlzIGEgbGl0dGxlIGVhc2llciB0byByZWFkIGluIGxpbmVcbiAgICAqL1xuICAgIGZ1bmN0aW9uIHN0b3BQcm9wYWdhdGlvbihlKSB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBDcmVhdGUgYSBmdW5jdGlvbiBib3VuZCB0byBhIGdpdmVuIG9iamVjdFxuICAgICogVGhhbmtzIHRvIHVuZGVyc2NvcmUuanNcbiAgICAqL1xuICAgIGZ1bmN0aW9uIGJpbmQoZnVuYywgb2JqKSB7XG4gICAgICAgIHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbiAgICAgICAgdmFyIGFyZ3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cywgMik7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuYy5hcHBseShvYmosIGFyZ3MuY29uY2F0KHNsaWNlLmNhbGwoYXJndW1lbnRzKSkpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICogTGlnaHR3ZWlnaHQgZHJhZyBoZWxwZXIuICBIYW5kbGVzIGNvbnRhaW5tZW50IHdpdGhpbiB0aGUgZWxlbWVudCwgc28gdGhhdFxuICAgICogd2hlbiBkcmFnZ2luZywgdGhlIHggaXMgd2l0aGluIFswLGVsZW1lbnQud2lkdGhdIGFuZCB5IGlzIHdpdGhpbiBbMCxlbGVtZW50LmhlaWdodF1cbiAgICAqL1xuICAgIGZ1bmN0aW9uIGRyYWdnYWJsZShlbGVtZW50LCBvbm1vdmUsIG9uc3RhcnQsIG9uc3RvcCkge1xuICAgICAgICBvbm1vdmUgPSBvbm1vdmUgfHwgZnVuY3Rpb24gKCkgeyB9O1xuICAgICAgICBvbnN0YXJ0ID0gb25zdGFydCB8fCBmdW5jdGlvbiAoKSB7IH07XG4gICAgICAgIG9uc3RvcCA9IG9uc3RvcCB8fCBmdW5jdGlvbiAoKSB7IH07XG4gICAgICAgIHZhciBkb2MgPSBkb2N1bWVudDtcbiAgICAgICAgdmFyIGRyYWdnaW5nID0gZmFsc2U7XG4gICAgICAgIHZhciBvZmZzZXQgPSB7fTtcbiAgICAgICAgdmFyIG1heEhlaWdodCA9IDA7XG4gICAgICAgIHZhciBtYXhXaWR0aCA9IDA7XG4gICAgICAgIHZhciBoYXNUb3VjaCA9ICgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpO1xuXG4gICAgICAgIHZhciBkdXJpbmdEcmFnRXZlbnRzID0ge307XG4gICAgICAgIGR1cmluZ0RyYWdFdmVudHNbXCJzZWxlY3RzdGFydFwiXSA9IHByZXZlbnQ7XG4gICAgICAgIGR1cmluZ0RyYWdFdmVudHNbXCJkcmFnc3RhcnRcIl0gPSBwcmV2ZW50O1xuICAgICAgICBkdXJpbmdEcmFnRXZlbnRzW1widG91Y2htb3ZlIG1vdXNlbW92ZVwiXSA9IG1vdmU7XG4gICAgICAgIGR1cmluZ0RyYWdFdmVudHNbXCJ0b3VjaGVuZCBtb3VzZXVwXCJdID0gc3RvcDtcblxuICAgICAgICBmdW5jdGlvbiBwcmV2ZW50KGUpIHtcbiAgICAgICAgICAgIGlmIChlLnN0b3BQcm9wYWdhdGlvbikge1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZS5wcmV2ZW50RGVmYXVsdCkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG1vdmUoZSkge1xuICAgICAgICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgICAgICAgICAgLy8gTW91c2V1cCBoYXBwZW5lZCBvdXRzaWRlIG9mIHdpbmRvd1xuICAgICAgICAgICAgICAgIGlmIChJRSAmJiBkb2MuZG9jdW1lbnRNb2RlIDwgOSAmJiAhZS5idXR0b24pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0b3AoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgdDAgPSBlLm9yaWdpbmFsRXZlbnQgJiYgZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXMgJiYgZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF07XG4gICAgICAgICAgICAgICAgdmFyIHBhZ2VYID0gdDAgJiYgdDAucGFnZVggfHwgZS5wYWdlWDtcbiAgICAgICAgICAgICAgICB2YXIgcGFnZVkgPSB0MCAmJiB0MC5wYWdlWSB8fCBlLnBhZ2VZO1xuXG4gICAgICAgICAgICAgICAgdmFyIGRyYWdYID0gTWF0aC5tYXgoMCwgTWF0aC5taW4ocGFnZVggLSBvZmZzZXQubGVmdCwgbWF4V2lkdGgpKTtcbiAgICAgICAgICAgICAgICB2YXIgZHJhZ1kgPSBNYXRoLm1heCgwLCBNYXRoLm1pbihwYWdlWSAtIG9mZnNldC50b3AsIG1heEhlaWdodCkpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGhhc1RvdWNoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFN0b3Agc2Nyb2xsaW5nIGluIGlPU1xuICAgICAgICAgICAgICAgICAgICBwcmV2ZW50KGUpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG9ubW92ZS5hcHBseShlbGVtZW50LCBbZHJhZ1gsIGRyYWdZLCBlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzdGFydChlKSB7XG4gICAgICAgICAgICB2YXIgcmlnaHRjbGljayA9IChlLndoaWNoKSA/IChlLndoaWNoID09IDMpIDogKGUuYnV0dG9uID09IDIpO1xuXG4gICAgICAgICAgICBpZiAoIXJpZ2h0Y2xpY2sgJiYgIWRyYWdnaW5nKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9uc3RhcnQuYXBwbHkoZWxlbWVudCwgYXJndW1lbnRzKSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgZHJhZ2dpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBtYXhIZWlnaHQgPSAkKGVsZW1lbnQpLmhlaWdodCgpO1xuICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aCA9ICQoZWxlbWVudCkud2lkdGgoKTtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ID0gJChlbGVtZW50KS5vZmZzZXQoKTtcblxuICAgICAgICAgICAgICAgICAgICAkKGRvYykub24oZHVyaW5nRHJhZ0V2ZW50cyk7XG4gICAgICAgICAgICAgICAgICAgICQoZG9jLmJvZHkpLmFkZENsYXNzKFwic3AtZHJhZ2dpbmdcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgbW92ZShlKTtcblxuICAgICAgICAgICAgICAgICAgICBwcmV2ZW50KGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgICAgICAgICBpZiAoZHJhZ2dpbmcpIHtcbiAgICAgICAgICAgICAgICAkKGRvYykub2ZmKGR1cmluZ0RyYWdFdmVudHMpO1xuICAgICAgICAgICAgICAgICQoZG9jLmJvZHkpLnJlbW92ZUNsYXNzKFwic3AtZHJhZ2dpbmdcIik7XG5cbiAgICAgICAgICAgICAgICAvLyBXYWl0IGEgdGljayBiZWZvcmUgbm90aWZ5aW5nIG9ic2VydmVycyB0byBhbGxvdyB0aGUgY2xpY2sgZXZlbnRcbiAgICAgICAgICAgICAgICAvLyB0byBmaXJlIGluIENocm9tZS5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBvbnN0b3AuYXBwbHkoZWxlbWVudCwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRyYWdnaW5nID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICAkKGVsZW1lbnQpLm9uKFwidG91Y2hzdGFydCBtb3VzZWRvd25cIiwgc3RhcnQpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRocm90dGxlKGZ1bmMsIHdhaXQsIGRlYm91bmNlKSB7XG4gICAgICAgIHZhciB0aW1lb3V0O1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGNvbnRleHQgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgdmFyIHRocm90dGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmIChkZWJvdW5jZSkgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICAgICAgaWYgKGRlYm91bmNlIHx8ICF0aW1lb3V0KSB0aW1lb3V0ID0gc2V0VGltZW91dCh0aHJvdHRsZXIsIHdhaXQpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlucHV0VHlwZUNvbG9yU3VwcG9ydCgpIHtcbiAgICAgICAgcmV0dXJuICQuZm4uc3BlY3RydW0uaW5wdXRUeXBlQ29sb3JTdXBwb3J0KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBEZWZpbmUgYSBqUXVlcnkgcGx1Z2luXG4gICAgKi9cbiAgICB2YXIgZGF0YUlEID0gXCJzcGVjdHJ1bS5pZFwiO1xuICAgICQuZm4uc3BlY3RydW0gPSBmdW5jdGlvbiAob3B0cywgZXh0cmEpIHtcblxuICAgICAgICBpZiAodHlwZW9mIG9wdHMgPT0gXCJzdHJpbmdcIikge1xuXG4gICAgICAgICAgICB2YXIgcmV0dXJuVmFsdWUgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCggYXJndW1lbnRzLCAxICk7XG5cbiAgICAgICAgICAgIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNwZWN0ID0gc3BlY3RydW1zWyQodGhpcykuZGF0YShkYXRhSUQpXTtcbiAgICAgICAgICAgICAgICBpZiAoc3BlY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1ldGhvZCA9IHNwZWN0W29wdHNdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW1ldGhvZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCBcIlNwZWN0cnVtOiBubyBzdWNoIG1ldGhvZDogJ1wiICsgb3B0cyArIFwiJ1wiICk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAob3B0cyA9PSBcImdldFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IHNwZWN0LmdldCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG9wdHMgPT0gXCJjb250YWluZXJcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSBzcGVjdC5jb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAob3B0cyA9PSBcIm9wdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IHNwZWN0Lm9wdGlvbi5hcHBseShzcGVjdCwgYXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAob3B0cyA9PSBcImRlc3Ryb3lcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3BlY3QuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVEYXRhKGRhdGFJRCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QuYXBwbHkoc3BlY3QsIGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiByZXR1cm5WYWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEluaXRpYWxpemluZyBhIG5ldyBpbnN0YW5jZSBvZiBzcGVjdHJ1bVxuICAgICAgICByZXR1cm4gdGhpcy5zcGVjdHJ1bShcImRlc3Ryb3lcIikuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkKHRoaXMpLmRhdGEoKSwgb3B0cyk7XG4gICAgICAgICAgICB2YXIgc3BlY3QgPSBzcGVjdHJ1bSh0aGlzLCBvcHRpb25zKTtcbiAgICAgICAgICAgICQodGhpcykuZGF0YShkYXRhSUQsIHNwZWN0LmlkKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgICQuZm4uc3BlY3RydW0ubG9hZCA9IHRydWU7XG4gICAgJC5mbi5zcGVjdHJ1bS5sb2FkT3B0cyA9IHt9O1xuICAgICQuZm4uc3BlY3RydW0uZHJhZ2dhYmxlID0gZHJhZ2dhYmxlO1xuICAgICQuZm4uc3BlY3RydW0uZGVmYXVsdHMgPSBkZWZhdWx0T3B0cztcbiAgICAkLmZuLnNwZWN0cnVtLmlucHV0VHlwZUNvbG9yU3VwcG9ydCA9IGZ1bmN0aW9uIGlucHV0VHlwZUNvbG9yU3VwcG9ydCgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dFR5cGVDb2xvclN1cHBvcnQuX2NhY2hlZFJlc3VsdCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdmFyIGNvbG9ySW5wdXQgPSAkKFwiPGlucHV0IHR5cGU9J2NvbG9yJy8+XCIpWzBdOyAvLyBpZiBjb2xvciBlbGVtZW50IGlzIHN1cHBvcnRlZCwgdmFsdWUgd2lsbCBkZWZhdWx0IHRvIG5vdCBudWxsXG4gICAgICAgICAgICBpbnB1dFR5cGVDb2xvclN1cHBvcnQuX2NhY2hlZFJlc3VsdCA9IGNvbG9ySW5wdXQudHlwZSA9PT0gXCJjb2xvclwiICYmIGNvbG9ySW5wdXQudmFsdWUgIT09IFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlucHV0VHlwZUNvbG9yU3VwcG9ydC5fY2FjaGVkUmVzdWx0O1xuICAgIH07XG5cbiAgICAkLnNwZWN0cnVtID0geyB9O1xuICAgICQuc3BlY3RydW0ubG9jYWxpemF0aW9uID0geyB9O1xuICAgICQuc3BlY3RydW0ucGFsZXR0ZXMgPSB7IH07XG5cbiAgICAkLmZuLnNwZWN0cnVtLnByb2Nlc3NOYXRpdmVDb2xvcklucHV0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNvbG9ySW5wdXRzID0gJChcImlucHV0W3R5cGU9Y29sb3JdXCIpO1xuICAgICAgICBpZiAoY29sb3JJbnB1dHMubGVuZ3RoICYmICFpbnB1dFR5cGVDb2xvclN1cHBvcnQoKSkge1xuICAgICAgICAgICAgY29sb3JJbnB1dHMuc3BlY3RydW0oe1xuICAgICAgICAgICAgICAgIHByZWZlcnJlZEZvcm1hdDogXCJoZXg2XCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIFRpbnlDb2xvciB2MS4xLjJcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vYmdyaW5zL1RpbnlDb2xvclxuICAgIC8vIEJyaWFuIEdyaW5zdGVhZCwgTUlUIExpY2Vuc2VcblxuICAgIChmdW5jdGlvbigpIHtcblxuICAgIHZhciB0cmltTGVmdCA9IC9eW1xccywjXSsvLFxuICAgICAgICB0cmltUmlnaHQgPSAvXFxzKyQvLFxuICAgICAgICB0aW55Q291bnRlciA9IDAsXG4gICAgICAgIG1hdGggPSBNYXRoLFxuICAgICAgICBtYXRoUm91bmQgPSBtYXRoLnJvdW5kLFxuICAgICAgICBtYXRoTWluID0gbWF0aC5taW4sXG4gICAgICAgIG1hdGhNYXggPSBtYXRoLm1heCxcbiAgICAgICAgbWF0aFJhbmRvbSA9IG1hdGgucmFuZG9tO1xuXG4gICAgdmFyIHRpbnljb2xvciA9IGZ1bmN0aW9uKGNvbG9yLCBvcHRzKSB7XG5cbiAgICAgICAgY29sb3IgPSAoY29sb3IpID8gY29sb3IgOiAnJztcbiAgICAgICAgb3B0cyA9IG9wdHMgfHwgeyB9O1xuXG4gICAgICAgIC8vIElmIGlucHV0IGlzIGFscmVhZHkgYSB0aW55Y29sb3IsIHJldHVybiBpdHNlbGZcbiAgICAgICAgaWYgKGNvbG9yIGluc3RhbmNlb2YgdGlueWNvbG9yKSB7XG4gICAgICAgICAgIHJldHVybiBjb2xvcjtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB3ZSBhcmUgY2FsbGVkIGFzIGEgZnVuY3Rpb24sIGNhbGwgdXNpbmcgbmV3IGluc3RlYWRcbiAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIHRpbnljb2xvcikpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgdGlueWNvbG9yKGNvbG9yLCBvcHRzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZ2IgPSBpbnB1dFRvUkdCKGNvbG9yKTtcbiAgICAgICAgdGhpcy5fb3JpZ2luYWxJbnB1dCA9IGNvbG9yO1xuICAgICAgICB0aGlzLl9yID0gcmdiLnI7XG4gICAgICAgIHRoaXMuX2cgPSByZ2IuZztcbiAgICAgICAgdGhpcy5fYiA9IHJnYi5iO1xuICAgICAgICB0aGlzLl9hID0gcmdiLmE7XG4gICAgICAgIHRoaXMuX3JvdW5kQSA9IG1hdGhSb3VuZCgxMDAwICogdGhpcy5fYSkgLyAxMDAwO1xuICAgICAgICB0aGlzLl9mb3JtYXQgPSBvcHRzLmZvcm1hdCB8fCByZ2IuZm9ybWF0O1xuICAgICAgICB0aGlzLl9ncmFkaWVudFR5cGUgPSBvcHRzLmdyYWRpZW50VHlwZTtcblxuICAgICAgICAvLyBEb24ndCBsZXQgdGhlIHJhbmdlIG9mIFswLDI1NV0gY29tZSBiYWNrIGluIFswLDFdLlxuICAgICAgICAvLyBQb3RlbnRpYWxseSBsb3NlIGEgbGl0dGxlIGJpdCBvZiBwcmVjaXNpb24gaGVyZSwgYnV0IHdpbGwgZml4IGlzc3VlcyB3aGVyZVxuICAgICAgICAvLyAuNSBnZXRzIGludGVycHJldGVkIGFzIGhhbGYgb2YgdGhlIHRvdGFsLCBpbnN0ZWFkIG9mIGhhbGYgb2YgMVxuICAgICAgICAvLyBJZiBpdCB3YXMgc3VwcG9zZWQgdG8gYmUgMTI4LCB0aGlzIHdhcyBhbHJlYWR5IHRha2VuIGNhcmUgb2YgYnkgYGlucHV0VG9SZ2JgXG4gICAgICAgIGlmICh0aGlzLl9yIDwgMSkgeyB0aGlzLl9yID0gbWF0aFJvdW5kKHRoaXMuX3IpOyB9XG4gICAgICAgIGlmICh0aGlzLl9nIDwgMSkgeyB0aGlzLl9nID0gbWF0aFJvdW5kKHRoaXMuX2cpOyB9XG4gICAgICAgIGlmICh0aGlzLl9iIDwgMSkgeyB0aGlzLl9iID0gbWF0aFJvdW5kKHRoaXMuX2IpOyB9XG5cbiAgICAgICAgdGhpcy5fb2sgPSByZ2Iub2s7XG4gICAgICAgIHRoaXMuX3RjX2lkID0gdGlueUNvdW50ZXIrKztcbiAgICB9O1xuXG4gICAgdGlueWNvbG9yLnByb3RvdHlwZSA9IHtcbiAgICAgICAgaXNEYXJrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEJyaWdodG5lc3MoKSA8IDEyODtcbiAgICAgICAgfSxcbiAgICAgICAgaXNMaWdodDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gIXRoaXMuaXNEYXJrKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGlzVmFsaWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX29rO1xuICAgICAgICB9LFxuICAgICAgICBnZXRPcmlnaW5hbElucHV0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fb3JpZ2luYWxJbnB1dDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0Rm9ybWF0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9mb3JtYXQ7XG4gICAgICAgIH0sXG4gICAgICAgIGdldEFscGhhOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hO1xuICAgICAgICB9LFxuICAgICAgICBnZXRCcmlnaHRuZXNzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciByZ2IgPSB0aGlzLnRvUmdiKCk7XG4gICAgICAgICAgICByZXR1cm4gKHJnYi5yICogMjk5ICsgcmdiLmcgKiA1ODcgKyByZ2IuYiAqIDExNCkgLyAxMDAwO1xuICAgICAgICB9LFxuICAgICAgICBzZXRBbHBoYTogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuX2EgPSBib3VuZEFscGhhKHZhbHVlKTtcbiAgICAgICAgICAgIHRoaXMuX3JvdW5kQSA9IG1hdGhSb3VuZCgxMDAwICogdGhpcy5fYSkgLyAxMDAwO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIHRvSHN2OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoc3YgPSByZ2JUb0hzdih0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iKTtcbiAgICAgICAgICAgIHJldHVybiB7IGg6IGhzdi5oICogMzYwLCBzOiBoc3YucywgdjogaHN2LnYsIGE6IHRoaXMuX2EgfTtcbiAgICAgICAgfSxcbiAgICAgICAgdG9Ic3ZTdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGhzdiA9IHJnYlRvSHN2KHRoaXMuX3IsIHRoaXMuX2csIHRoaXMuX2IpO1xuICAgICAgICAgICAgdmFyIGggPSBtYXRoUm91bmQoaHN2LmggKiAzNjApLCBzID0gbWF0aFJvdW5kKGhzdi5zICogMTAwKSwgdiA9IG1hdGhSb3VuZChoc3YudiAqIDEwMCk7XG4gICAgICAgICAgICByZXR1cm4gKHRoaXMuX2EgPT0gMSkgP1xuICAgICAgICAgICAgICBcImhzdihcIiAgKyBoICsgXCIsIFwiICsgcyArIFwiJSwgXCIgKyB2ICsgXCIlKVwiIDpcbiAgICAgICAgICAgICAgXCJoc3ZhKFwiICsgaCArIFwiLCBcIiArIHMgKyBcIiUsIFwiICsgdiArIFwiJSwgXCIrIHRoaXMuX3JvdW5kQSArIFwiKVwiO1xuICAgICAgICB9LFxuICAgICAgICB0b0hzbDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgaHNsID0gcmdiVG9Ic2wodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYik7XG4gICAgICAgICAgICByZXR1cm4geyBoOiBoc2wuaCAqIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sLCBhOiB0aGlzLl9hIH07XG4gICAgICAgIH0sXG4gICAgICAgIHRvSHNsU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoc2wgPSByZ2JUb0hzbCh0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iKTtcbiAgICAgICAgICAgIHZhciBoID0gbWF0aFJvdW5kKGhzbC5oICogMzYwKSwgcyA9IG1hdGhSb3VuZChoc2wucyAqIDEwMCksIGwgPSBtYXRoUm91bmQoaHNsLmwgKiAxMDApO1xuICAgICAgICAgICAgcmV0dXJuICh0aGlzLl9hID09IDEpID9cbiAgICAgICAgICAgICAgXCJoc2woXCIgICsgaCArIFwiLCBcIiArIHMgKyBcIiUsIFwiICsgbCArIFwiJSlcIiA6XG4gICAgICAgICAgICAgIFwiaHNsYShcIiArIGggKyBcIiwgXCIgKyBzICsgXCIlLCBcIiArIGwgKyBcIiUsIFwiKyB0aGlzLl9yb3VuZEEgKyBcIilcIjtcbiAgICAgICAgfSxcbiAgICAgICAgdG9IZXg6IGZ1bmN0aW9uKGFsbG93M0NoYXIpIHtcbiAgICAgICAgICAgIHJldHVybiByZ2JUb0hleCh0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iLCBhbGxvdzNDaGFyKTtcbiAgICAgICAgfSxcbiAgICAgICAgdG9IZXhTdHJpbmc6IGZ1bmN0aW9uKGFsbG93M0NoYXIpIHtcbiAgICAgICAgICAgIHJldHVybiAnIycgKyB0aGlzLnRvSGV4KGFsbG93M0NoYXIpO1xuICAgICAgICB9LFxuICAgICAgICB0b0hleDg6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHJnYmFUb0hleCh0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iLCB0aGlzLl9hKTtcbiAgICAgICAgfSxcbiAgICAgICAgdG9IZXg4U3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAnIycgKyB0aGlzLnRvSGV4OCgpO1xuICAgICAgICB9LFxuICAgICAgICB0b1JnYjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4geyByOiBtYXRoUm91bmQodGhpcy5fciksIGc6IG1hdGhSb3VuZCh0aGlzLl9nKSwgYjogbWF0aFJvdW5kKHRoaXMuX2IpLCBhOiB0aGlzLl9hIH07XG4gICAgICAgIH0sXG4gICAgICAgIHRvUmdiU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAodGhpcy5fYSA9PSAxKSA/XG4gICAgICAgICAgICAgIFwicmdiKFwiICArIG1hdGhSb3VuZCh0aGlzLl9yKSArIFwiLCBcIiArIG1hdGhSb3VuZCh0aGlzLl9nKSArIFwiLCBcIiArIG1hdGhSb3VuZCh0aGlzLl9iKSArIFwiKVwiIDpcbiAgICAgICAgICAgICAgXCJyZ2JhKFwiICsgbWF0aFJvdW5kKHRoaXMuX3IpICsgXCIsIFwiICsgbWF0aFJvdW5kKHRoaXMuX2cpICsgXCIsIFwiICsgbWF0aFJvdW5kKHRoaXMuX2IpICsgXCIsIFwiICsgdGhpcy5fcm91bmRBICsgXCIpXCI7XG4gICAgICAgIH0sXG4gICAgICAgIHRvUGVyY2VudGFnZVJnYjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4geyByOiBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9yLCAyNTUpICogMTAwKSArIFwiJVwiLCBnOiBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9nLCAyNTUpICogMTAwKSArIFwiJVwiLCBiOiBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9iLCAyNTUpICogMTAwKSArIFwiJVwiLCBhOiB0aGlzLl9hIH07XG4gICAgICAgIH0sXG4gICAgICAgIHRvUGVyY2VudGFnZVJnYlN0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gKHRoaXMuX2EgPT0gMSkgP1xuICAgICAgICAgICAgICBcInJnYihcIiAgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9yLCAyNTUpICogMTAwKSArIFwiJSwgXCIgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9nLCAyNTUpICogMTAwKSArIFwiJSwgXCIgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9iLCAyNTUpICogMTAwKSArIFwiJSlcIiA6XG4gICAgICAgICAgICAgIFwicmdiYShcIiArIG1hdGhSb3VuZChib3VuZDAxKHRoaXMuX3IsIDI1NSkgKiAxMDApICsgXCIlLCBcIiArIG1hdGhSb3VuZChib3VuZDAxKHRoaXMuX2csIDI1NSkgKiAxMDApICsgXCIlLCBcIiArIG1hdGhSb3VuZChib3VuZDAxKHRoaXMuX2IsIDI1NSkgKiAxMDApICsgXCIlLCBcIiArIHRoaXMuX3JvdW5kQSArIFwiKVwiO1xuICAgICAgICB9LFxuICAgICAgICB0b05hbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2EgPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ0cmFuc3BhcmVudFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5fYSA8IDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBoZXhOYW1lc1tyZ2JUb0hleCh0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iLCB0cnVlKV0gfHwgZmFsc2U7XG4gICAgICAgIH0sXG4gICAgICAgIHRvRmlsdGVyOiBmdW5jdGlvbihzZWNvbmRDb2xvcikge1xuICAgICAgICAgICAgdmFyIGhleDhTdHJpbmcgPSAnIycgKyByZ2JhVG9IZXgodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYiwgdGhpcy5fYSk7XG4gICAgICAgICAgICB2YXIgc2Vjb25kSGV4OFN0cmluZyA9IGhleDhTdHJpbmc7XG4gICAgICAgICAgICB2YXIgZ3JhZGllbnRUeXBlID0gdGhpcy5fZ3JhZGllbnRUeXBlID8gXCJHcmFkaWVudFR5cGUgPSAxLCBcIiA6IFwiXCI7XG5cbiAgICAgICAgICAgIGlmIChzZWNvbmRDb2xvcikge1xuICAgICAgICAgICAgICAgIHZhciBzID0gdGlueWNvbG9yKHNlY29uZENvbG9yKTtcbiAgICAgICAgICAgICAgICBzZWNvbmRIZXg4U3RyaW5nID0gcy50b0hleDhTdHJpbmcoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KFwiK2dyYWRpZW50VHlwZStcInN0YXJ0Q29sb3JzdHI9XCIraGV4OFN0cmluZytcIixlbmRDb2xvcnN0cj1cIitzZWNvbmRIZXg4U3RyaW5nK1wiKVwiO1xuICAgICAgICB9LFxuICAgICAgICB0b1N0cmluZzogZnVuY3Rpb24oZm9ybWF0KSB7XG4gICAgICAgICAgICB2YXIgZm9ybWF0U2V0ID0gISFmb3JtYXQ7XG4gICAgICAgICAgICBmb3JtYXQgPSBmb3JtYXQgfHwgdGhpcy5fZm9ybWF0O1xuXG4gICAgICAgICAgICB2YXIgZm9ybWF0dGVkU3RyaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB2YXIgaGFzQWxwaGEgPSB0aGlzLl9hIDwgMSAmJiB0aGlzLl9hID49IDA7XG4gICAgICAgICAgICB2YXIgbmVlZHNBbHBoYUZvcm1hdCA9ICFmb3JtYXRTZXQgJiYgaGFzQWxwaGEgJiYgKGZvcm1hdCA9PT0gXCJoZXhcIiB8fCBmb3JtYXQgPT09IFwiaGV4NlwiIHx8IGZvcm1hdCA9PT0gXCJoZXgzXCIgfHwgZm9ybWF0ID09PSBcIm5hbWVcIik7XG5cbiAgICAgICAgICAgIGlmIChuZWVkc0FscGhhRm9ybWF0KSB7XG4gICAgICAgICAgICAgICAgLy8gU3BlY2lhbCBjYXNlIGZvciBcInRyYW5zcGFyZW50XCIsIGFsbCBvdGhlciBub24tYWxwaGEgZm9ybWF0c1xuICAgICAgICAgICAgICAgIC8vIHdpbGwgcmV0dXJuIHJnYmEgd2hlbiB0aGVyZSBpcyB0cmFuc3BhcmVuY3kuXG4gICAgICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJuYW1lXCIgJiYgdGhpcy5fYSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50b05hbWUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9SZ2JTdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmb3JtYXQgPT09IFwicmdiXCIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvUmdiU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSBcInByZ2JcIikge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9QZXJjZW50YWdlUmdiU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSBcImhleFwiIHx8IGZvcm1hdCA9PT0gXCJoZXg2XCIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvSGV4U3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSBcImhleDNcIikge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9IZXhTdHJpbmcodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSBcImhleDhcIikge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9IZXg4U3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSBcIm5hbWVcIikge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9OYW1lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSBcImhzbFwiKSB7XG4gICAgICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hzbFN0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJoc3ZcIikge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9Ic3ZTdHJpbmcoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHRlZFN0cmluZyB8fCB0aGlzLnRvSGV4U3RyaW5nKCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgX2FwcGx5TW9kaWZpY2F0aW9uOiBmdW5jdGlvbihmbiwgYXJncykge1xuICAgICAgICAgICAgdmFyIGNvbG9yID0gZm4uYXBwbHkobnVsbCwgW3RoaXNdLmNvbmNhdChbXS5zbGljZS5jYWxsKGFyZ3MpKSk7XG4gICAgICAgICAgICB0aGlzLl9yID0gY29sb3IuX3I7XG4gICAgICAgICAgICB0aGlzLl9nID0gY29sb3IuX2c7XG4gICAgICAgICAgICB0aGlzLl9iID0gY29sb3IuX2I7XG4gICAgICAgICAgICB0aGlzLnNldEFscGhhKGNvbG9yLl9hKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBsaWdodGVuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hcHBseU1vZGlmaWNhdGlvbihsaWdodGVuLCBhcmd1bWVudHMpO1xuICAgICAgICB9LFxuICAgICAgICBicmlnaHRlbjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oYnJpZ2h0ZW4sIGFyZ3VtZW50cyk7XG4gICAgICAgIH0sXG4gICAgICAgIGRhcmtlbjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oZGFya2VuLCBhcmd1bWVudHMpO1xuICAgICAgICB9LFxuICAgICAgICBkZXNhdHVyYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hcHBseU1vZGlmaWNhdGlvbihkZXNhdHVyYXRlLCBhcmd1bWVudHMpO1xuICAgICAgICB9LFxuICAgICAgICBzYXR1cmF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oc2F0dXJhdGUsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0sXG4gICAgICAgIGdyZXlzY2FsZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oZ3JleXNjYWxlLCBhcmd1bWVudHMpO1xuICAgICAgICB9LFxuICAgICAgICBzcGluOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hcHBseU1vZGlmaWNhdGlvbihzcGluLCBhcmd1bWVudHMpO1xuICAgICAgICB9LFxuXG4gICAgICAgIF9hcHBseUNvbWJpbmF0aW9uOiBmdW5jdGlvbihmbiwgYXJncykge1xuICAgICAgICAgICAgcmV0dXJuIGZuLmFwcGx5KG51bGwsIFt0aGlzXS5jb25jYXQoW10uc2xpY2UuY2FsbChhcmdzKSkpO1xuICAgICAgICB9LFxuICAgICAgICBhbmFsb2dvdXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FwcGx5Q29tYmluYXRpb24oYW5hbG9nb3VzLCBhcmd1bWVudHMpO1xuICAgICAgICB9LFxuICAgICAgICBjb21wbGVtZW50OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hcHBseUNvbWJpbmF0aW9uKGNvbXBsZW1lbnQsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0sXG4gICAgICAgIG1vbm9jaHJvbWF0aWM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FwcGx5Q29tYmluYXRpb24obW9ub2Nocm9tYXRpYywgYXJndW1lbnRzKTtcbiAgICAgICAgfSxcbiAgICAgICAgc3BsaXRjb21wbGVtZW50OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hcHBseUNvbWJpbmF0aW9uKHNwbGl0Y29tcGxlbWVudCwgYXJndW1lbnRzKTtcbiAgICAgICAgfSxcbiAgICAgICAgdHJpYWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FwcGx5Q29tYmluYXRpb24odHJpYWQsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0sXG4gICAgICAgIHRldHJhZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlDb21iaW5hdGlvbih0ZXRyYWQsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gSWYgaW5wdXQgaXMgYW4gb2JqZWN0LCBmb3JjZSAxIGludG8gXCIxLjBcIiB0byBoYW5kbGUgcmF0aW9zIHByb3Blcmx5XG4gICAgLy8gU3RyaW5nIGlucHV0IHJlcXVpcmVzIFwiMS4wXCIgYXMgaW5wdXQsIHNvIDEgd2lsbCBiZSB0cmVhdGVkIGFzIDFcbiAgICB0aW55Y29sb3IuZnJvbVJhdGlvID0gZnVuY3Rpb24oY29sb3IsIG9wdHMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjb2xvciA9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICB2YXIgbmV3Q29sb3IgPSB7fTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgaW4gY29sb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29sb3IuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGkgPT09IFwiYVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDb2xvcltpXSA9IGNvbG9yW2ldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q29sb3JbaV0gPSBjb252ZXJ0VG9QZXJjZW50YWdlKGNvbG9yW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbG9yID0gbmV3Q29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGlueWNvbG9yKGNvbG9yLCBvcHRzKTtcbiAgICB9O1xuXG4gICAgLy8gR2l2ZW4gYSBzdHJpbmcgb3Igb2JqZWN0LCBjb252ZXJ0IHRoYXQgaW5wdXQgdG8gUkdCXG4gICAgLy8gUG9zc2libGUgc3RyaW5nIGlucHV0czpcbiAgICAvL1xuICAgIC8vICAgICBcInJlZFwiXG4gICAgLy8gICAgIFwiI2YwMFwiIG9yIFwiZjAwXCJcbiAgICAvLyAgICAgXCIjZmYwMDAwXCIgb3IgXCJmZjAwMDBcIlxuICAgIC8vICAgICBcIiNmZjAwMDAwMFwiIG9yIFwiZmYwMDAwMDBcIlxuICAgIC8vICAgICBcInJnYiAyNTUgMCAwXCIgb3IgXCJyZ2IgKDI1NSwgMCwgMClcIlxuICAgIC8vICAgICBcInJnYiAxLjAgMCAwXCIgb3IgXCJyZ2IgKDEsIDAsIDApXCJcbiAgICAvLyAgICAgXCJyZ2JhICgyNTUsIDAsIDAsIDEpXCIgb3IgXCJyZ2JhIDI1NSwgMCwgMCwgMVwiXG4gICAgLy8gICAgIFwicmdiYSAoMS4wLCAwLCAwLCAxKVwiIG9yIFwicmdiYSAxLjAsIDAsIDAsIDFcIlxuICAgIC8vICAgICBcImhzbCgwLCAxMDAlLCA1MCUpXCIgb3IgXCJoc2wgMCAxMDAlIDUwJVwiXG4gICAgLy8gICAgIFwiaHNsYSgwLCAxMDAlLCA1MCUsIDEpXCIgb3IgXCJoc2xhIDAgMTAwJSA1MCUsIDFcIlxuICAgIC8vICAgICBcImhzdigwLCAxMDAlLCAxMDAlKVwiIG9yIFwiaHN2IDAgMTAwJSAxMDAlXCJcbiAgICAvL1xuICAgIGZ1bmN0aW9uIGlucHV0VG9SR0IoY29sb3IpIHtcblxuICAgICAgICB2YXIgcmdiID0geyByOiAwLCBnOiAwLCBiOiAwIH07XG4gICAgICAgIHZhciBhID0gMTtcbiAgICAgICAgdmFyIG9rID0gZmFsc2U7XG4gICAgICAgIHZhciBmb3JtYXQgPSBmYWxzZTtcblxuICAgICAgICBpZiAodHlwZW9mIGNvbG9yID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGNvbG9yID0gc3RyaW5nSW5wdXRUb09iamVjdChjb2xvcik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGNvbG9yID09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIGlmIChjb2xvci5oYXNPd25Qcm9wZXJ0eShcInJcIikgJiYgY29sb3IuaGFzT3duUHJvcGVydHkoXCJnXCIpICYmIGNvbG9yLmhhc093blByb3BlcnR5KFwiYlwiKSkge1xuICAgICAgICAgICAgICAgIHJnYiA9IHJnYlRvUmdiKGNvbG9yLnIsIGNvbG9yLmcsIGNvbG9yLmIpO1xuICAgICAgICAgICAgICAgIG9rID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBmb3JtYXQgPSBTdHJpbmcoY29sb3Iucikuc3Vic3RyKC0xKSA9PT0gXCIlXCIgPyBcInByZ2JcIiA6IFwicmdiXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjb2xvci5oYXNPd25Qcm9wZXJ0eShcImhcIikgJiYgY29sb3IuaGFzT3duUHJvcGVydHkoXCJzXCIpICYmIGNvbG9yLmhhc093blByb3BlcnR5KFwidlwiKSkge1xuICAgICAgICAgICAgICAgIGNvbG9yLnMgPSBjb252ZXJ0VG9QZXJjZW50YWdlKGNvbG9yLnMpO1xuICAgICAgICAgICAgICAgIGNvbG9yLnYgPSBjb252ZXJ0VG9QZXJjZW50YWdlKGNvbG9yLnYpO1xuICAgICAgICAgICAgICAgIHJnYiA9IGhzdlRvUmdiKGNvbG9yLmgsIGNvbG9yLnMsIGNvbG9yLnYpO1xuICAgICAgICAgICAgICAgIG9rID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBmb3JtYXQgPSBcImhzdlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY29sb3IuaGFzT3duUHJvcGVydHkoXCJoXCIpICYmIGNvbG9yLmhhc093blByb3BlcnR5KFwic1wiKSAmJiBjb2xvci5oYXNPd25Qcm9wZXJ0eShcImxcIikpIHtcbiAgICAgICAgICAgICAgICBjb2xvci5zID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvci5zKTtcbiAgICAgICAgICAgICAgICBjb2xvci5sID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvci5sKTtcbiAgICAgICAgICAgICAgICByZ2IgPSBoc2xUb1JnYihjb2xvci5oLCBjb2xvci5zLCBjb2xvci5sKTtcbiAgICAgICAgICAgICAgICBvayA9IHRydWU7XG4gICAgICAgICAgICAgICAgZm9ybWF0ID0gXCJoc2xcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNvbG9yLmhhc093blByb3BlcnR5KFwiYVwiKSkge1xuICAgICAgICAgICAgICAgIGEgPSBjb2xvci5hO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYSA9IGJvdW5kQWxwaGEoYSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9rOiBvayxcbiAgICAgICAgICAgIGZvcm1hdDogY29sb3IuZm9ybWF0IHx8IGZvcm1hdCxcbiAgICAgICAgICAgIHI6IG1hdGhNaW4oMjU1LCBtYXRoTWF4KHJnYi5yLCAwKSksXG4gICAgICAgICAgICBnOiBtYXRoTWluKDI1NSwgbWF0aE1heChyZ2IuZywgMCkpLFxuICAgICAgICAgICAgYjogbWF0aE1pbigyNTUsIG1hdGhNYXgocmdiLmIsIDApKSxcbiAgICAgICAgICAgIGE6IGFcbiAgICAgICAgfTtcbiAgICB9XG5cblxuICAgIC8vIENvbnZlcnNpb24gRnVuY3Rpb25zXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIC8vIGByZ2JUb0hzbGAsIGByZ2JUb0hzdmAsIGBoc2xUb1JnYmAsIGBoc3ZUb1JnYmAgbW9kaWZpZWQgZnJvbTpcbiAgICAvLyA8aHR0cDovL21qaWphY2tzb24uY29tLzIwMDgvMDIvcmdiLXRvLWhzbC1hbmQtcmdiLXRvLWhzdi1jb2xvci1tb2RlbC1jb252ZXJzaW9uLWFsZ29yaXRobXMtaW4tamF2YXNjcmlwdD5cblxuICAgIC8vIGByZ2JUb1JnYmBcbiAgICAvLyBIYW5kbGUgYm91bmRzIC8gcGVyY2VudGFnZSBjaGVja2luZyB0byBjb25mb3JtIHRvIENTUyBjb2xvciBzcGVjXG4gICAgLy8gPGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtY29sb3IvPlxuICAgIC8vICpBc3N1bWVzOiogciwgZywgYiBpbiBbMCwgMjU1XSBvciBbMCwgMV1cbiAgICAvLyAqUmV0dXJuczoqIHsgciwgZywgYiB9IGluIFswLCAyNTVdXG4gICAgZnVuY3Rpb24gcmdiVG9SZ2IociwgZywgYil7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByOiBib3VuZDAxKHIsIDI1NSkgKiAyNTUsXG4gICAgICAgICAgICBnOiBib3VuZDAxKGcsIDI1NSkgKiAyNTUsXG4gICAgICAgICAgICBiOiBib3VuZDAxKGIsIDI1NSkgKiAyNTVcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBgcmdiVG9Ic2xgXG4gICAgLy8gQ29udmVydHMgYW4gUkdCIGNvbG9yIHZhbHVlIHRvIEhTTC5cbiAgICAvLyAqQXNzdW1lczoqIHIsIGcsIGFuZCBiIGFyZSBjb250YWluZWQgaW4gWzAsIDI1NV0gb3IgWzAsIDFdXG4gICAgLy8gKlJldHVybnM6KiB7IGgsIHMsIGwgfSBpbiBbMCwxXVxuICAgIGZ1bmN0aW9uIHJnYlRvSHNsKHIsIGcsIGIpIHtcblxuICAgICAgICByID0gYm91bmQwMShyLCAyNTUpO1xuICAgICAgICBnID0gYm91bmQwMShnLCAyNTUpO1xuICAgICAgICBiID0gYm91bmQwMShiLCAyNTUpO1xuXG4gICAgICAgIHZhciBtYXggPSBtYXRoTWF4KHIsIGcsIGIpLCBtaW4gPSBtYXRoTWluKHIsIGcsIGIpO1xuICAgICAgICB2YXIgaCwgcywgbCA9IChtYXggKyBtaW4pIC8gMjtcblxuICAgICAgICBpZihtYXggPT0gbWluKSB7XG4gICAgICAgICAgICBoID0gcyA9IDA7IC8vIGFjaHJvbWF0aWNcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBkID0gbWF4IC0gbWluO1xuICAgICAgICAgICAgcyA9IGwgPiAwLjUgPyBkIC8gKDIgLSBtYXggLSBtaW4pIDogZCAvIChtYXggKyBtaW4pO1xuICAgICAgICAgICAgc3dpdGNoKG1heCkge1xuICAgICAgICAgICAgICAgIGNhc2UgcjogaCA9IChnIC0gYikgLyBkICsgKGcgPCBiID8gNiA6IDApOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIGc6IGggPSAoYiAtIHIpIC8gZCArIDI7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgYjogaCA9IChyIC0gZykgLyBkICsgNDsgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGggLz0gNjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7IGg6IGgsIHM6IHMsIGw6IGwgfTtcbiAgICB9XG5cbiAgICAvLyBgaHNsVG9SZ2JgXG4gICAgLy8gQ29udmVydHMgYW4gSFNMIGNvbG9yIHZhbHVlIHRvIFJHQi5cbiAgICAvLyAqQXNzdW1lczoqIGggaXMgY29udGFpbmVkIGluIFswLCAxXSBvciBbMCwgMzYwXSBhbmQgcyBhbmQgbCBhcmUgY29udGFpbmVkIFswLCAxXSBvciBbMCwgMTAwXVxuICAgIC8vICpSZXR1cm5zOiogeyByLCBnLCBiIH0gaW4gdGhlIHNldCBbMCwgMjU1XVxuICAgIGZ1bmN0aW9uIGhzbFRvUmdiKGgsIHMsIGwpIHtcbiAgICAgICAgdmFyIHIsIGcsIGI7XG5cbiAgICAgICAgaCA9IGJvdW5kMDEoaCwgMzYwKTtcbiAgICAgICAgcyA9IGJvdW5kMDEocywgMTAwKTtcbiAgICAgICAgbCA9IGJvdW5kMDEobCwgMTAwKTtcblxuICAgICAgICBmdW5jdGlvbiBodWUycmdiKHAsIHEsIHQpIHtcbiAgICAgICAgICAgIGlmKHQgPCAwKSB0ICs9IDE7XG4gICAgICAgICAgICBpZih0ID4gMSkgdCAtPSAxO1xuICAgICAgICAgICAgaWYodCA8IDEvNikgcmV0dXJuIHAgKyAocSAtIHApICogNiAqIHQ7XG4gICAgICAgICAgICBpZih0IDwgMS8yKSByZXR1cm4gcTtcbiAgICAgICAgICAgIGlmKHQgPCAyLzMpIHJldHVybiBwICsgKHEgLSBwKSAqICgyLzMgLSB0KSAqIDY7XG4gICAgICAgICAgICByZXR1cm4gcDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKHMgPT09IDApIHtcbiAgICAgICAgICAgIHIgPSBnID0gYiA9IGw7IC8vIGFjaHJvbWF0aWNcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBxID0gbCA8IDAuNSA/IGwgKiAoMSArIHMpIDogbCArIHMgLSBsICogcztcbiAgICAgICAgICAgIHZhciBwID0gMiAqIGwgLSBxO1xuICAgICAgICAgICAgciA9IGh1ZTJyZ2IocCwgcSwgaCArIDEvMyk7XG4gICAgICAgICAgICBnID0gaHVlMnJnYihwLCBxLCBoKTtcbiAgICAgICAgICAgIGIgPSBodWUycmdiKHAsIHEsIGggLSAxLzMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHsgcjogciAqIDI1NSwgZzogZyAqIDI1NSwgYjogYiAqIDI1NSB9O1xuICAgIH1cblxuICAgIC8vIGByZ2JUb0hzdmBcbiAgICAvLyBDb252ZXJ0cyBhbiBSR0IgY29sb3IgdmFsdWUgdG8gSFNWXG4gICAgLy8gKkFzc3VtZXM6KiByLCBnLCBhbmQgYiBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDI1NV0gb3IgWzAsIDFdXG4gICAgLy8gKlJldHVybnM6KiB7IGgsIHMsIHYgfSBpbiBbMCwxXVxuICAgIGZ1bmN0aW9uIHJnYlRvSHN2KHIsIGcsIGIpIHtcblxuICAgICAgICByID0gYm91bmQwMShyLCAyNTUpO1xuICAgICAgICBnID0gYm91bmQwMShnLCAyNTUpO1xuICAgICAgICBiID0gYm91bmQwMShiLCAyNTUpO1xuXG4gICAgICAgIHZhciBtYXggPSBtYXRoTWF4KHIsIGcsIGIpLCBtaW4gPSBtYXRoTWluKHIsIGcsIGIpO1xuICAgICAgICB2YXIgaCwgcywgdiA9IG1heDtcblxuICAgICAgICB2YXIgZCA9IG1heCAtIG1pbjtcbiAgICAgICAgcyA9IG1heCA9PT0gMCA/IDAgOiBkIC8gbWF4O1xuXG4gICAgICAgIGlmKG1heCA9PSBtaW4pIHtcbiAgICAgICAgICAgIGggPSAwOyAvLyBhY2hyb21hdGljXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzd2l0Y2gobWF4KSB7XG4gICAgICAgICAgICAgICAgY2FzZSByOiBoID0gKGcgLSBiKSAvIGQgKyAoZyA8IGIgPyA2IDogMCk7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgZzogaCA9IChiIC0gcikgLyBkICsgMjsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBiOiBoID0gKHIgLSBnKSAvIGQgKyA0OyBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGggLz0gNjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBoOiBoLCBzOiBzLCB2OiB2IH07XG4gICAgfVxuXG4gICAgLy8gYGhzdlRvUmdiYFxuICAgIC8vIENvbnZlcnRzIGFuIEhTViBjb2xvciB2YWx1ZSB0byBSR0IuXG4gICAgLy8gKkFzc3VtZXM6KiBoIGlzIGNvbnRhaW5lZCBpbiBbMCwgMV0gb3IgWzAsIDM2MF0gYW5kIHMgYW5kIHYgYXJlIGNvbnRhaW5lZCBpbiBbMCwgMV0gb3IgWzAsIDEwMF1cbiAgICAvLyAqUmV0dXJuczoqIHsgciwgZywgYiB9IGluIHRoZSBzZXQgWzAsIDI1NV1cbiAgICAgZnVuY3Rpb24gaHN2VG9SZ2IoaCwgcywgdikge1xuXG4gICAgICAgIGggPSBib3VuZDAxKGgsIDM2MCkgKiA2O1xuICAgICAgICBzID0gYm91bmQwMShzLCAxMDApO1xuICAgICAgICB2ID0gYm91bmQwMSh2LCAxMDApO1xuXG4gICAgICAgIHZhciBpID0gbWF0aC5mbG9vcihoKSxcbiAgICAgICAgICAgIGYgPSBoIC0gaSxcbiAgICAgICAgICAgIHAgPSB2ICogKDEgLSBzKSxcbiAgICAgICAgICAgIHEgPSB2ICogKDEgLSBmICogcyksXG4gICAgICAgICAgICB0ID0gdiAqICgxIC0gKDEgLSBmKSAqIHMpLFxuICAgICAgICAgICAgbW9kID0gaSAlIDYsXG4gICAgICAgICAgICByID0gW3YsIHEsIHAsIHAsIHQsIHZdW21vZF0sXG4gICAgICAgICAgICBnID0gW3QsIHYsIHYsIHEsIHAsIHBdW21vZF0sXG4gICAgICAgICAgICBiID0gW3AsIHAsIHQsIHYsIHYsIHFdW21vZF07XG5cbiAgICAgICAgcmV0dXJuIHsgcjogciAqIDI1NSwgZzogZyAqIDI1NSwgYjogYiAqIDI1NSB9O1xuICAgIH1cblxuICAgIC8vIGByZ2JUb0hleGBcbiAgICAvLyBDb252ZXJ0cyBhbiBSR0IgY29sb3IgdG8gaGV4XG4gICAgLy8gQXNzdW1lcyByLCBnLCBhbmQgYiBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDI1NV1cbiAgICAvLyBSZXR1cm5zIGEgMyBvciA2IGNoYXJhY3RlciBoZXhcbiAgICBmdW5jdGlvbiByZ2JUb0hleChyLCBnLCBiLCBhbGxvdzNDaGFyKSB7XG5cbiAgICAgICAgdmFyIGhleCA9IFtcbiAgICAgICAgICAgIHBhZDIobWF0aFJvdW5kKHIpLnRvU3RyaW5nKDE2KSksXG4gICAgICAgICAgICBwYWQyKG1hdGhSb3VuZChnKS50b1N0cmluZygxNikpLFxuICAgICAgICAgICAgcGFkMihtYXRoUm91bmQoYikudG9TdHJpbmcoMTYpKVxuICAgICAgICBdO1xuXG4gICAgICAgIC8vIFJldHVybiBhIDMgY2hhcmFjdGVyIGhleCBpZiBwb3NzaWJsZVxuICAgICAgICBpZiAoYWxsb3czQ2hhciAmJiBoZXhbMF0uY2hhckF0KDApID09IGhleFswXS5jaGFyQXQoMSkgJiYgaGV4WzFdLmNoYXJBdCgwKSA9PSBoZXhbMV0uY2hhckF0KDEpICYmIGhleFsyXS5jaGFyQXQoMCkgPT0gaGV4WzJdLmNoYXJBdCgxKSkge1xuICAgICAgICAgICAgcmV0dXJuIGhleFswXS5jaGFyQXQoMCkgKyBoZXhbMV0uY2hhckF0KDApICsgaGV4WzJdLmNoYXJBdCgwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBoZXguam9pbihcIlwiKTtcbiAgICB9XG4gICAgICAgIC8vIGByZ2JhVG9IZXhgXG4gICAgICAgIC8vIENvbnZlcnRzIGFuIFJHQkEgY29sb3IgcGx1cyBhbHBoYSB0cmFuc3BhcmVuY3kgdG8gaGV4XG4gICAgICAgIC8vIEFzc3VtZXMgciwgZywgYiBhbmQgYSBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDI1NV1cbiAgICAgICAgLy8gUmV0dXJucyBhbiA4IGNoYXJhY3RlciBoZXhcbiAgICAgICAgZnVuY3Rpb24gcmdiYVRvSGV4KHIsIGcsIGIsIGEpIHtcblxuICAgICAgICAgICAgdmFyIGhleCA9IFtcbiAgICAgICAgICAgICAgICBwYWQyKGNvbnZlcnREZWNpbWFsVG9IZXgoYSkpLFxuICAgICAgICAgICAgICAgIHBhZDIobWF0aFJvdW5kKHIpLnRvU3RyaW5nKDE2KSksXG4gICAgICAgICAgICAgICAgcGFkMihtYXRoUm91bmQoZykudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgICAgICAgICBwYWQyKG1hdGhSb3VuZChiKS50b1N0cmluZygxNikpXG4gICAgICAgICAgICBdO1xuXG4gICAgICAgICAgICByZXR1cm4gaGV4LmpvaW4oXCJcIik7XG4gICAgICAgIH1cblxuICAgIC8vIGBlcXVhbHNgXG4gICAgLy8gQ2FuIGJlIGNhbGxlZCB3aXRoIGFueSB0aW55Y29sb3IgaW5wdXRcbiAgICB0aW55Y29sb3IuZXF1YWxzID0gZnVuY3Rpb24gKGNvbG9yMSwgY29sb3IyKSB7XG4gICAgICAgIGlmICghY29sb3IxIHx8ICFjb2xvcjIpIHsgcmV0dXJuIGZhbHNlOyB9XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IxKS50b1JnYlN0cmluZygpID09IHRpbnljb2xvcihjb2xvcjIpLnRvUmdiU3RyaW5nKCk7XG4gICAgfTtcbiAgICB0aW55Y29sb3IucmFuZG9tID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IuZnJvbVJhdGlvKHtcbiAgICAgICAgICAgIHI6IG1hdGhSYW5kb20oKSxcbiAgICAgICAgICAgIGc6IG1hdGhSYW5kb20oKSxcbiAgICAgICAgICAgIGI6IG1hdGhSYW5kb20oKVxuICAgICAgICB9KTtcbiAgICB9O1xuXG5cbiAgICAvLyBNb2RpZmljYXRpb24gRnVuY3Rpb25zXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIFRoYW5rcyB0byBsZXNzLmpzIGZvciBzb21lIG9mIHRoZSBiYXNpY3MgaGVyZVxuICAgIC8vIDxodHRwczovL2dpdGh1Yi5jb20vY2xvdWRoZWFkL2xlc3MuanMvYmxvYi9tYXN0ZXIvbGliL2xlc3MvZnVuY3Rpb25zLmpzPlxuXG4gICAgZnVuY3Rpb24gZGVzYXR1cmF0ZShjb2xvciwgYW1vdW50KSB7XG4gICAgICAgIGFtb3VudCA9IChhbW91bnQgPT09IDApID8gMCA6IChhbW91bnQgfHwgMTApO1xuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICBoc2wucyAtPSBhbW91bnQgLyAxMDA7XG4gICAgICAgIGhzbC5zID0gY2xhbXAwMShoc2wucyk7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IoaHNsKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzYXR1cmF0ZShjb2xvciwgYW1vdW50KSB7XG4gICAgICAgIGFtb3VudCA9IChhbW91bnQgPT09IDApID8gMCA6IChhbW91bnQgfHwgMTApO1xuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICBoc2wucyArPSBhbW91bnQgLyAxMDA7XG4gICAgICAgIGhzbC5zID0gY2xhbXAwMShoc2wucyk7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IoaHNsKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBncmV5c2NhbGUoY29sb3IpIHtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZGVzYXR1cmF0ZSgxMDApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpZ2h0ZW4gKGNvbG9yLCBhbW91bnQpIHtcbiAgICAgICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIGhzbC5sICs9IGFtb3VudCAvIDEwMDtcbiAgICAgICAgaHNsLmwgPSBjbGFtcDAxKGhzbC5sKTtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihoc2wpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGJyaWdodGVuKGNvbG9yLCBhbW91bnQpIHtcbiAgICAgICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgICAgIHZhciByZ2IgPSB0aW55Y29sb3IoY29sb3IpLnRvUmdiKCk7XG4gICAgICAgIHJnYi5yID0gbWF0aE1heCgwLCBtYXRoTWluKDI1NSwgcmdiLnIgLSBtYXRoUm91bmQoMjU1ICogLSAoYW1vdW50IC8gMTAwKSkpKTtcbiAgICAgICAgcmdiLmcgPSBtYXRoTWF4KDAsIG1hdGhNaW4oMjU1LCByZ2IuZyAtIG1hdGhSb3VuZCgyNTUgKiAtIChhbW91bnQgLyAxMDApKSkpO1xuICAgICAgICByZ2IuYiA9IG1hdGhNYXgoMCwgbWF0aE1pbigyNTUsIHJnYi5iIC0gbWF0aFJvdW5kKDI1NSAqIC0gKGFtb3VudCAvIDEwMCkpKSk7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IocmdiKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkYXJrZW4gKGNvbG9yLCBhbW91bnQpIHtcbiAgICAgICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIGhzbC5sIC09IGFtb3VudCAvIDEwMDtcbiAgICAgICAgaHNsLmwgPSBjbGFtcDAxKGhzbC5sKTtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihoc2wpO1xuICAgIH1cblxuICAgIC8vIFNwaW4gdGFrZXMgYSBwb3NpdGl2ZSBvciBuZWdhdGl2ZSBhbW91bnQgd2l0aGluIFstMzYwLCAzNjBdIGluZGljYXRpbmcgdGhlIGNoYW5nZSBvZiBodWUuXG4gICAgLy8gVmFsdWVzIG91dHNpZGUgb2YgdGhpcyByYW5nZSB3aWxsIGJlIHdyYXBwZWQgaW50byB0aGlzIHJhbmdlLlxuICAgIGZ1bmN0aW9uIHNwaW4oY29sb3IsIGFtb3VudCkge1xuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICB2YXIgaHVlID0gKG1hdGhSb3VuZChoc2wuaCkgKyBhbW91bnQpICUgMzYwO1xuICAgICAgICBoc2wuaCA9IGh1ZSA8IDAgPyAzNjAgKyBodWUgOiBodWU7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IoaHNsKTtcbiAgICB9XG5cbiAgICAvLyBDb21iaW5hdGlvbiBGdW5jdGlvbnNcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyBUaGFua3MgdG8galF1ZXJ5IHhDb2xvciBmb3Igc29tZSBvZiB0aGUgaWRlYXMgYmVoaW5kIHRoZXNlXG4gICAgLy8gPGh0dHBzOi8vZ2l0aHViLmNvbS9pbmZ1c2lvbi9qUXVlcnkteGNvbG9yL2Jsb2IvbWFzdGVyL2pxdWVyeS54Y29sb3IuanM+XG5cbiAgICBmdW5jdGlvbiBjb21wbGVtZW50KGNvbG9yKSB7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIGhzbC5oID0gKGhzbC5oICsgMTgwKSAlIDM2MDtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihoc2wpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRyaWFkKGNvbG9yKSB7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIHZhciBoID0gaHNsLmg7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICB0aW55Y29sb3IoY29sb3IpLFxuICAgICAgICAgICAgdGlueWNvbG9yKHsgaDogKGggKyAxMjApICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSksXG4gICAgICAgICAgICB0aW55Y29sb3IoeyBoOiAoaCArIDI0MCkgJSAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubCB9KVxuICAgICAgICBdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRldHJhZChjb2xvcikge1xuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICB2YXIgaCA9IGhzbC5oO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgdGlueWNvbG9yKGNvbG9yKSxcbiAgICAgICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgOTApICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSksXG4gICAgICAgICAgICB0aW55Y29sb3IoeyBoOiAoaCArIDE4MCkgJSAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubCB9KSxcbiAgICAgICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgMjcwKSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sIH0pXG4gICAgICAgIF07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3BsaXRjb21wbGVtZW50KGNvbG9yKSB7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIHZhciBoID0gaHNsLmg7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICB0aW55Y29sb3IoY29sb3IpLFxuICAgICAgICAgICAgdGlueWNvbG9yKHsgaDogKGggKyA3MikgJSAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubH0pLFxuICAgICAgICAgICAgdGlueWNvbG9yKHsgaDogKGggKyAyMTYpICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmx9KVxuICAgICAgICBdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFuYWxvZ291cyhjb2xvciwgcmVzdWx0cywgc2xpY2VzKSB7XG4gICAgICAgIHJlc3VsdHMgPSByZXN1bHRzIHx8IDY7XG4gICAgICAgIHNsaWNlcyA9IHNsaWNlcyB8fCAzMDtcblxuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICB2YXIgcGFydCA9IDM2MCAvIHNsaWNlcztcbiAgICAgICAgdmFyIHJldCA9IFt0aW55Y29sb3IoY29sb3IpXTtcblxuICAgICAgICBmb3IgKGhzbC5oID0gKChoc2wuaCAtIChwYXJ0ICogcmVzdWx0cyA+PiAxKSkgKyA3MjApICUgMzYwOyAtLXJlc3VsdHM7ICkge1xuICAgICAgICAgICAgaHNsLmggPSAoaHNsLmggKyBwYXJ0KSAlIDM2MDtcbiAgICAgICAgICAgIHJldC5wdXNoKHRpbnljb2xvcihoc2wpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1vbm9jaHJvbWF0aWMoY29sb3IsIHJlc3VsdHMpIHtcbiAgICAgICAgcmVzdWx0cyA9IHJlc3VsdHMgfHwgNjtcbiAgICAgICAgdmFyIGhzdiA9IHRpbnljb2xvcihjb2xvcikudG9Ic3YoKTtcbiAgICAgICAgdmFyIGggPSBoc3YuaCwgcyA9IGhzdi5zLCB2ID0gaHN2LnY7XG4gICAgICAgIHZhciByZXQgPSBbXTtcbiAgICAgICAgdmFyIG1vZGlmaWNhdGlvbiA9IDEgLyByZXN1bHRzO1xuXG4gICAgICAgIHdoaWxlIChyZXN1bHRzLS0pIHtcbiAgICAgICAgICAgIHJldC5wdXNoKHRpbnljb2xvcih7IGg6IGgsIHM6IHMsIHY6IHZ9KSk7XG4gICAgICAgICAgICB2ID0gKHYgKyBtb2RpZmljYXRpb24pICUgMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG4gICAgLy8gVXRpbGl0eSBGdW5jdGlvbnNcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIHRpbnljb2xvci5taXggPSBmdW5jdGlvbihjb2xvcjEsIGNvbG9yMiwgYW1vdW50KSB7XG4gICAgICAgIGFtb3VudCA9IChhbW91bnQgPT09IDApID8gMCA6IChhbW91bnQgfHwgNTApO1xuXG4gICAgICAgIHZhciByZ2IxID0gdGlueWNvbG9yKGNvbG9yMSkudG9SZ2IoKTtcbiAgICAgICAgdmFyIHJnYjIgPSB0aW55Y29sb3IoY29sb3IyKS50b1JnYigpO1xuXG4gICAgICAgIHZhciBwID0gYW1vdW50IC8gMTAwO1xuICAgICAgICB2YXIgdyA9IHAgKiAyIC0gMTtcbiAgICAgICAgdmFyIGEgPSByZ2IyLmEgLSByZ2IxLmE7XG5cbiAgICAgICAgdmFyIHcxO1xuXG4gICAgICAgIGlmICh3ICogYSA9PSAtMSkge1xuICAgICAgICAgICAgdzEgPSB3O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdzEgPSAodyArIGEpIC8gKDEgKyB3ICogYSk7XG4gICAgICAgIH1cblxuICAgICAgICB3MSA9ICh3MSArIDEpIC8gMjtcblxuICAgICAgICB2YXIgdzIgPSAxIC0gdzE7XG5cbiAgICAgICAgdmFyIHJnYmEgPSB7XG4gICAgICAgICAgICByOiByZ2IyLnIgKiB3MSArIHJnYjEuciAqIHcyLFxuICAgICAgICAgICAgZzogcmdiMi5nICogdzEgKyByZ2IxLmcgKiB3MixcbiAgICAgICAgICAgIGI6IHJnYjIuYiAqIHcxICsgcmdiMS5iICogdzIsXG4gICAgICAgICAgICBhOiByZ2IyLmEgKiBwICArIHJnYjEuYSAqICgxIC0gcClcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gdGlueWNvbG9yKHJnYmEpO1xuICAgIH07XG5cblxuICAgIC8vIFJlYWRhYmlsaXR5IEZ1bmN0aW9uc1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIDxodHRwOi8vd3d3LnczLm9yZy9UUi9BRVJUI2NvbG9yLWNvbnRyYXN0PlxuXG4gICAgLy8gYHJlYWRhYmlsaXR5YFxuICAgIC8vIEFuYWx5emUgdGhlIDIgY29sb3JzIGFuZCByZXR1cm5zIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAgICAvLyAgICBgYnJpZ2h0bmVzc2A6IGRpZmZlcmVuY2UgaW4gYnJpZ2h0bmVzcyBiZXR3ZWVuIHRoZSB0d28gY29sb3JzXG4gICAgLy8gICAgYGNvbG9yYDogZGlmZmVyZW5jZSBpbiBjb2xvci9odWUgYmV0d2VlbiB0aGUgdHdvIGNvbG9yc1xuICAgIHRpbnljb2xvci5yZWFkYWJpbGl0eSA9IGZ1bmN0aW9uKGNvbG9yMSwgY29sb3IyKSB7XG4gICAgICAgIHZhciBjMSA9IHRpbnljb2xvcihjb2xvcjEpO1xuICAgICAgICB2YXIgYzIgPSB0aW55Y29sb3IoY29sb3IyKTtcbiAgICAgICAgdmFyIHJnYjEgPSBjMS50b1JnYigpO1xuICAgICAgICB2YXIgcmdiMiA9IGMyLnRvUmdiKCk7XG4gICAgICAgIHZhciBicmlnaHRuZXNzQSA9IGMxLmdldEJyaWdodG5lc3MoKTtcbiAgICAgICAgdmFyIGJyaWdodG5lc3NCID0gYzIuZ2V0QnJpZ2h0bmVzcygpO1xuICAgICAgICB2YXIgY29sb3JEaWZmID0gKFxuICAgICAgICAgICAgTWF0aC5tYXgocmdiMS5yLCByZ2IyLnIpIC0gTWF0aC5taW4ocmdiMS5yLCByZ2IyLnIpICtcbiAgICAgICAgICAgIE1hdGgubWF4KHJnYjEuZywgcmdiMi5nKSAtIE1hdGgubWluKHJnYjEuZywgcmdiMi5nKSArXG4gICAgICAgICAgICBNYXRoLm1heChyZ2IxLmIsIHJnYjIuYikgLSBNYXRoLm1pbihyZ2IxLmIsIHJnYjIuYilcbiAgICAgICAgKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYnJpZ2h0bmVzczogTWF0aC5hYnMoYnJpZ2h0bmVzc0EgLSBicmlnaHRuZXNzQiksXG4gICAgICAgICAgICBjb2xvcjogY29sb3JEaWZmXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8vIGByZWFkYWJsZWBcbiAgICAvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9BRVJUI2NvbG9yLWNvbnRyYXN0XG4gICAgLy8gRW5zdXJlIHRoYXQgZm9yZWdyb3VuZCBhbmQgYmFja2dyb3VuZCBjb2xvciBjb21iaW5hdGlvbnMgcHJvdmlkZSBzdWZmaWNpZW50IGNvbnRyYXN0LlxuICAgIC8vICpFeGFtcGxlKlxuICAgIC8vICAgIHRpbnljb2xvci5pc1JlYWRhYmxlKFwiIzAwMFwiLCBcIiMxMTFcIikgPT4gZmFsc2VcbiAgICB0aW55Y29sb3IuaXNSZWFkYWJsZSA9IGZ1bmN0aW9uKGNvbG9yMSwgY29sb3IyKSB7XG4gICAgICAgIHZhciByZWFkYWJpbGl0eSA9IHRpbnljb2xvci5yZWFkYWJpbGl0eShjb2xvcjEsIGNvbG9yMik7XG4gICAgICAgIHJldHVybiByZWFkYWJpbGl0eS5icmlnaHRuZXNzID4gMTI1ICYmIHJlYWRhYmlsaXR5LmNvbG9yID4gNTAwO1xuICAgIH07XG5cbiAgICAvLyBgbW9zdFJlYWRhYmxlYFxuICAgIC8vIEdpdmVuIGEgYmFzZSBjb2xvciBhbmQgYSBsaXN0IG9mIHBvc3NpYmxlIGZvcmVncm91bmQgb3IgYmFja2dyb3VuZFxuICAgIC8vIGNvbG9ycyBmb3IgdGhhdCBiYXNlLCByZXR1cm5zIHRoZSBtb3N0IHJlYWRhYmxlIGNvbG9yLlxuICAgIC8vICpFeGFtcGxlKlxuICAgIC8vICAgIHRpbnljb2xvci5tb3N0UmVhZGFibGUoXCIjMTIzXCIsIFtcIiNmZmZcIiwgXCIjMDAwXCJdKSA9PiBcIiMwMDBcIlxuICAgIHRpbnljb2xvci5tb3N0UmVhZGFibGUgPSBmdW5jdGlvbihiYXNlQ29sb3IsIGNvbG9yTGlzdCkge1xuICAgICAgICB2YXIgYmVzdENvbG9yID0gbnVsbDtcbiAgICAgICAgdmFyIGJlc3RTY29yZSA9IDA7XG4gICAgICAgIHZhciBiZXN0SXNSZWFkYWJsZSA9IGZhbHNlO1xuICAgICAgICBmb3IgKHZhciBpPTA7IGkgPCBjb2xvckxpc3QubGVuZ3RoOyBpKyspIHtcblxuICAgICAgICAgICAgLy8gV2Ugbm9ybWFsaXplIGJvdGggYXJvdW5kIHRoZSBcImFjY2VwdGFibGVcIiBicmVha2luZyBwb2ludCxcbiAgICAgICAgICAgIC8vIGJ1dCByYW5rIGJyaWdodG5lc3MgY29uc3RyYXN0IGhpZ2hlciB0aGFuIGh1ZS5cblxuICAgICAgICAgICAgdmFyIHJlYWRhYmlsaXR5ID0gdGlueWNvbG9yLnJlYWRhYmlsaXR5KGJhc2VDb2xvciwgY29sb3JMaXN0W2ldKTtcbiAgICAgICAgICAgIHZhciByZWFkYWJsZSA9IHJlYWRhYmlsaXR5LmJyaWdodG5lc3MgPiAxMjUgJiYgcmVhZGFiaWxpdHkuY29sb3IgPiA1MDA7XG4gICAgICAgICAgICB2YXIgc2NvcmUgPSAzICogKHJlYWRhYmlsaXR5LmJyaWdodG5lc3MgLyAxMjUpICsgKHJlYWRhYmlsaXR5LmNvbG9yIC8gNTAwKTtcblxuICAgICAgICAgICAgaWYgKChyZWFkYWJsZSAmJiAhIGJlc3RJc1JlYWRhYmxlKSB8fFxuICAgICAgICAgICAgICAgIChyZWFkYWJsZSAmJiBiZXN0SXNSZWFkYWJsZSAmJiBzY29yZSA+IGJlc3RTY29yZSkgfHxcbiAgICAgICAgICAgICAgICAoKCEgcmVhZGFibGUpICYmICghIGJlc3RJc1JlYWRhYmxlKSAmJiBzY29yZSA+IGJlc3RTY29yZSkpIHtcbiAgICAgICAgICAgICAgICBiZXN0SXNSZWFkYWJsZSA9IHJlYWRhYmxlO1xuICAgICAgICAgICAgICAgIGJlc3RTY29yZSA9IHNjb3JlO1xuICAgICAgICAgICAgICAgIGJlc3RDb2xvciA9IHRpbnljb2xvcihjb2xvckxpc3RbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiZXN0Q29sb3I7XG4gICAgfTtcblxuXG4gICAgLy8gQmlnIExpc3Qgb2YgQ29sb3JzXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gPGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtY29sb3IvI3N2Zy1jb2xvcj5cbiAgICB2YXIgbmFtZXMgPSB0aW55Y29sb3IubmFtZXMgPSB7XG4gICAgICAgIGFsaWNlYmx1ZTogXCJmMGY4ZmZcIixcbiAgICAgICAgYW50aXF1ZXdoaXRlOiBcImZhZWJkN1wiLFxuICAgICAgICBhcXVhOiBcIjBmZlwiLFxuICAgICAgICBhcXVhbWFyaW5lOiBcIjdmZmZkNFwiLFxuICAgICAgICBhenVyZTogXCJmMGZmZmZcIixcbiAgICAgICAgYmVpZ2U6IFwiZjVmNWRjXCIsXG4gICAgICAgIGJpc3F1ZTogXCJmZmU0YzRcIixcbiAgICAgICAgYmxhY2s6IFwiMDAwXCIsXG4gICAgICAgIGJsYW5jaGVkYWxtb25kOiBcImZmZWJjZFwiLFxuICAgICAgICBibHVlOiBcIjAwZlwiLFxuICAgICAgICBibHVldmlvbGV0OiBcIjhhMmJlMlwiLFxuICAgICAgICBicm93bjogXCJhNTJhMmFcIixcbiAgICAgICAgYnVybHl3b29kOiBcImRlYjg4N1wiLFxuICAgICAgICBidXJudHNpZW5uYTogXCJlYTdlNWRcIixcbiAgICAgICAgY2FkZXRibHVlOiBcIjVmOWVhMFwiLFxuICAgICAgICBjaGFydHJldXNlOiBcIjdmZmYwMFwiLFxuICAgICAgICBjaG9jb2xhdGU6IFwiZDI2OTFlXCIsXG4gICAgICAgIGNvcmFsOiBcImZmN2Y1MFwiLFxuICAgICAgICBjb3JuZmxvd2VyYmx1ZTogXCI2NDk1ZWRcIixcbiAgICAgICAgY29ybnNpbGs6IFwiZmZmOGRjXCIsXG4gICAgICAgIGNyaW1zb246IFwiZGMxNDNjXCIsXG4gICAgICAgIGN5YW46IFwiMGZmXCIsXG4gICAgICAgIGRhcmtibHVlOiBcIjAwMDA4YlwiLFxuICAgICAgICBkYXJrY3lhbjogXCIwMDhiOGJcIixcbiAgICAgICAgZGFya2dvbGRlbnJvZDogXCJiODg2MGJcIixcbiAgICAgICAgZGFya2dyYXk6IFwiYTlhOWE5XCIsXG4gICAgICAgIGRhcmtncmVlbjogXCIwMDY0MDBcIixcbiAgICAgICAgZGFya2dyZXk6IFwiYTlhOWE5XCIsXG4gICAgICAgIGRhcmtraGFraTogXCJiZGI3NmJcIixcbiAgICAgICAgZGFya21hZ2VudGE6IFwiOGIwMDhiXCIsXG4gICAgICAgIGRhcmtvbGl2ZWdyZWVuOiBcIjU1NmIyZlwiLFxuICAgICAgICBkYXJrb3JhbmdlOiBcImZmOGMwMFwiLFxuICAgICAgICBkYXJrb3JjaGlkOiBcIjk5MzJjY1wiLFxuICAgICAgICBkYXJrcmVkOiBcIjhiMDAwMFwiLFxuICAgICAgICBkYXJrc2FsbW9uOiBcImU5OTY3YVwiLFxuICAgICAgICBkYXJrc2VhZ3JlZW46IFwiOGZiYzhmXCIsXG4gICAgICAgIGRhcmtzbGF0ZWJsdWU6IFwiNDgzZDhiXCIsXG4gICAgICAgIGRhcmtzbGF0ZWdyYXk6IFwiMmY0ZjRmXCIsXG4gICAgICAgIGRhcmtzbGF0ZWdyZXk6IFwiMmY0ZjRmXCIsXG4gICAgICAgIGRhcmt0dXJxdW9pc2U6IFwiMDBjZWQxXCIsXG4gICAgICAgIGRhcmt2aW9sZXQ6IFwiOTQwMGQzXCIsXG4gICAgICAgIGRlZXBwaW5rOiBcImZmMTQ5M1wiLFxuICAgICAgICBkZWVwc2t5Ymx1ZTogXCIwMGJmZmZcIixcbiAgICAgICAgZGltZ3JheTogXCI2OTY5NjlcIixcbiAgICAgICAgZGltZ3JleTogXCI2OTY5NjlcIixcbiAgICAgICAgZG9kZ2VyYmx1ZTogXCIxZTkwZmZcIixcbiAgICAgICAgZmlyZWJyaWNrOiBcImIyMjIyMlwiLFxuICAgICAgICBmbG9yYWx3aGl0ZTogXCJmZmZhZjBcIixcbiAgICAgICAgZm9yZXN0Z3JlZW46IFwiMjI4YjIyXCIsXG4gICAgICAgIGZ1Y2hzaWE6IFwiZjBmXCIsXG4gICAgICAgIGdhaW5zYm9ybzogXCJkY2RjZGNcIixcbiAgICAgICAgZ2hvc3R3aGl0ZTogXCJmOGY4ZmZcIixcbiAgICAgICAgZ29sZDogXCJmZmQ3MDBcIixcbiAgICAgICAgZ29sZGVucm9kOiBcImRhYTUyMFwiLFxuICAgICAgICBncmF5OiBcIjgwODA4MFwiLFxuICAgICAgICBncmVlbjogXCIwMDgwMDBcIixcbiAgICAgICAgZ3JlZW55ZWxsb3c6IFwiYWRmZjJmXCIsXG4gICAgICAgIGdyZXk6IFwiODA4MDgwXCIsXG4gICAgICAgIGhvbmV5ZGV3OiBcImYwZmZmMFwiLFxuICAgICAgICBob3RwaW5rOiBcImZmNjliNFwiLFxuICAgICAgICBpbmRpYW5yZWQ6IFwiY2Q1YzVjXCIsXG4gICAgICAgIGluZGlnbzogXCI0YjAwODJcIixcbiAgICAgICAgaXZvcnk6IFwiZmZmZmYwXCIsXG4gICAgICAgIGtoYWtpOiBcImYwZTY4Y1wiLFxuICAgICAgICBsYXZlbmRlcjogXCJlNmU2ZmFcIixcbiAgICAgICAgbGF2ZW5kZXJibHVzaDogXCJmZmYwZjVcIixcbiAgICAgICAgbGF3bmdyZWVuOiBcIjdjZmMwMFwiLFxuICAgICAgICBsZW1vbmNoaWZmb246IFwiZmZmYWNkXCIsXG4gICAgICAgIGxpZ2h0Ymx1ZTogXCJhZGQ4ZTZcIixcbiAgICAgICAgbGlnaHRjb3JhbDogXCJmMDgwODBcIixcbiAgICAgICAgbGlnaHRjeWFuOiBcImUwZmZmZlwiLFxuICAgICAgICBsaWdodGdvbGRlbnJvZHllbGxvdzogXCJmYWZhZDJcIixcbiAgICAgICAgbGlnaHRncmF5OiBcImQzZDNkM1wiLFxuICAgICAgICBsaWdodGdyZWVuOiBcIjkwZWU5MFwiLFxuICAgICAgICBsaWdodGdyZXk6IFwiZDNkM2QzXCIsXG4gICAgICAgIGxpZ2h0cGluazogXCJmZmI2YzFcIixcbiAgICAgICAgbGlnaHRzYWxtb246IFwiZmZhMDdhXCIsXG4gICAgICAgIGxpZ2h0c2VhZ3JlZW46IFwiMjBiMmFhXCIsXG4gICAgICAgIGxpZ2h0c2t5Ymx1ZTogXCI4N2NlZmFcIixcbiAgICAgICAgbGlnaHRzbGF0ZWdyYXk6IFwiNzg5XCIsXG4gICAgICAgIGxpZ2h0c2xhdGVncmV5OiBcIjc4OVwiLFxuICAgICAgICBsaWdodHN0ZWVsYmx1ZTogXCJiMGM0ZGVcIixcbiAgICAgICAgbGlnaHR5ZWxsb3c6IFwiZmZmZmUwXCIsXG4gICAgICAgIGxpbWU6IFwiMGYwXCIsXG4gICAgICAgIGxpbWVncmVlbjogXCIzMmNkMzJcIixcbiAgICAgICAgbGluZW46IFwiZmFmMGU2XCIsXG4gICAgICAgIG1hZ2VudGE6IFwiZjBmXCIsXG4gICAgICAgIG1hcm9vbjogXCI4MDAwMDBcIixcbiAgICAgICAgbWVkaXVtYXF1YW1hcmluZTogXCI2NmNkYWFcIixcbiAgICAgICAgbWVkaXVtYmx1ZTogXCIwMDAwY2RcIixcbiAgICAgICAgbWVkaXVtb3JjaGlkOiBcImJhNTVkM1wiLFxuICAgICAgICBtZWRpdW1wdXJwbGU6IFwiOTM3MGRiXCIsXG4gICAgICAgIG1lZGl1bXNlYWdyZWVuOiBcIjNjYjM3MVwiLFxuICAgICAgICBtZWRpdW1zbGF0ZWJsdWU6IFwiN2I2OGVlXCIsXG4gICAgICAgIG1lZGl1bXNwcmluZ2dyZWVuOiBcIjAwZmE5YVwiLFxuICAgICAgICBtZWRpdW10dXJxdW9pc2U6IFwiNDhkMWNjXCIsXG4gICAgICAgIG1lZGl1bXZpb2xldHJlZDogXCJjNzE1ODVcIixcbiAgICAgICAgbWlkbmlnaHRibHVlOiBcIjE5MTk3MFwiLFxuICAgICAgICBtaW50Y3JlYW06IFwiZjVmZmZhXCIsXG4gICAgICAgIG1pc3R5cm9zZTogXCJmZmU0ZTFcIixcbiAgICAgICAgbW9jY2FzaW46IFwiZmZlNGI1XCIsXG4gICAgICAgIG5hdmFqb3doaXRlOiBcImZmZGVhZFwiLFxuICAgICAgICBuYXZ5OiBcIjAwMDA4MFwiLFxuICAgICAgICBvbGRsYWNlOiBcImZkZjVlNlwiLFxuICAgICAgICBvbGl2ZTogXCI4MDgwMDBcIixcbiAgICAgICAgb2xpdmVkcmFiOiBcIjZiOGUyM1wiLFxuICAgICAgICBvcmFuZ2U6IFwiZmZhNTAwXCIsXG4gICAgICAgIG9yYW5nZXJlZDogXCJmZjQ1MDBcIixcbiAgICAgICAgb3JjaGlkOiBcImRhNzBkNlwiLFxuICAgICAgICBwYWxlZ29sZGVucm9kOiBcImVlZThhYVwiLFxuICAgICAgICBwYWxlZ3JlZW46IFwiOThmYjk4XCIsXG4gICAgICAgIHBhbGV0dXJxdW9pc2U6IFwiYWZlZWVlXCIsXG4gICAgICAgIHBhbGV2aW9sZXRyZWQ6IFwiZGI3MDkzXCIsXG4gICAgICAgIHBhcGF5YXdoaXA6IFwiZmZlZmQ1XCIsXG4gICAgICAgIHBlYWNocHVmZjogXCJmZmRhYjlcIixcbiAgICAgICAgcGVydTogXCJjZDg1M2ZcIixcbiAgICAgICAgcGluazogXCJmZmMwY2JcIixcbiAgICAgICAgcGx1bTogXCJkZGEwZGRcIixcbiAgICAgICAgcG93ZGVyYmx1ZTogXCJiMGUwZTZcIixcbiAgICAgICAgcHVycGxlOiBcIjgwMDA4MFwiLFxuICAgICAgICByZWJlY2NhcHVycGxlOiBcIjY2MzM5OVwiLFxuICAgICAgICByZWQ6IFwiZjAwXCIsXG4gICAgICAgIHJvc3licm93bjogXCJiYzhmOGZcIixcbiAgICAgICAgcm95YWxibHVlOiBcIjQxNjllMVwiLFxuICAgICAgICBzYWRkbGVicm93bjogXCI4YjQ1MTNcIixcbiAgICAgICAgc2FsbW9uOiBcImZhODA3MlwiLFxuICAgICAgICBzYW5keWJyb3duOiBcImY0YTQ2MFwiLFxuICAgICAgICBzZWFncmVlbjogXCIyZThiNTdcIixcbiAgICAgICAgc2Vhc2hlbGw6IFwiZmZmNWVlXCIsXG4gICAgICAgIHNpZW5uYTogXCJhMDUyMmRcIixcbiAgICAgICAgc2lsdmVyOiBcImMwYzBjMFwiLFxuICAgICAgICBza3libHVlOiBcIjg3Y2VlYlwiLFxuICAgICAgICBzbGF0ZWJsdWU6IFwiNmE1YWNkXCIsXG4gICAgICAgIHNsYXRlZ3JheTogXCI3MDgwOTBcIixcbiAgICAgICAgc2xhdGVncmV5OiBcIjcwODA5MFwiLFxuICAgICAgICBzbm93OiBcImZmZmFmYVwiLFxuICAgICAgICBzcHJpbmdncmVlbjogXCIwMGZmN2ZcIixcbiAgICAgICAgc3RlZWxibHVlOiBcIjQ2ODJiNFwiLFxuICAgICAgICB0YW46IFwiZDJiNDhjXCIsXG4gICAgICAgIHRlYWw6IFwiMDA4MDgwXCIsXG4gICAgICAgIHRoaXN0bGU6IFwiZDhiZmQ4XCIsXG4gICAgICAgIHRvbWF0bzogXCJmZjYzNDdcIixcbiAgICAgICAgdHVycXVvaXNlOiBcIjQwZTBkMFwiLFxuICAgICAgICB2aW9sZXQ6IFwiZWU4MmVlXCIsXG4gICAgICAgIHdoZWF0OiBcImY1ZGViM1wiLFxuICAgICAgICB3aGl0ZTogXCJmZmZcIixcbiAgICAgICAgd2hpdGVzbW9rZTogXCJmNWY1ZjVcIixcbiAgICAgICAgeWVsbG93OiBcImZmMFwiLFxuICAgICAgICB5ZWxsb3dncmVlbjogXCI5YWNkMzJcIlxuICAgIH07XG5cbiAgICAvLyBNYWtlIGl0IGVhc3kgdG8gYWNjZXNzIGNvbG9ycyB2aWEgYGhleE5hbWVzW2hleF1gXG4gICAgdmFyIGhleE5hbWVzID0gdGlueWNvbG9yLmhleE5hbWVzID0gZmxpcChuYW1lcyk7XG5cblxuICAgIC8vIFV0aWxpdGllc1xuICAgIC8vIC0tLS0tLS0tLVxuXG4gICAgLy8gYHsgJ25hbWUxJzogJ3ZhbDEnIH1gIGJlY29tZXMgYHsgJ3ZhbDEnOiAnbmFtZTEnIH1gXG4gICAgZnVuY3Rpb24gZmxpcChvKSB7XG4gICAgICAgIHZhciBmbGlwcGVkID0geyB9O1xuICAgICAgICBmb3IgKHZhciBpIGluIG8pIHtcbiAgICAgICAgICAgIGlmIChvLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICAgICAgICAgICAgZmxpcHBlZFtvW2ldXSA9IGk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZsaXBwZWQ7XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGEgdmFsaWQgYWxwaGEgdmFsdWUgWzAsMV0gd2l0aCBhbGwgaW52YWxpZCB2YWx1ZXMgYmVpbmcgc2V0IHRvIDFcbiAgICBmdW5jdGlvbiBib3VuZEFscGhhKGEpIHtcbiAgICAgICAgYSA9IHBhcnNlRmxvYXQoYSk7XG5cbiAgICAgICAgaWYgKGlzTmFOKGEpIHx8IGEgPCAwIHx8IGEgPiAxKSB7XG4gICAgICAgICAgICBhID0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhO1xuICAgIH1cblxuICAgIC8vIFRha2UgaW5wdXQgZnJvbSBbMCwgbl0gYW5kIHJldHVybiBpdCBhcyBbMCwgMV1cbiAgICBmdW5jdGlvbiBib3VuZDAxKG4sIG1heCkge1xuICAgICAgICBpZiAoaXNPbmVQb2ludFplcm8obikpIHsgbiA9IFwiMTAwJVwiOyB9XG5cbiAgICAgICAgdmFyIHByb2Nlc3NQZXJjZW50ID0gaXNQZXJjZW50YWdlKG4pO1xuICAgICAgICBuID0gbWF0aE1pbihtYXgsIG1hdGhNYXgoMCwgcGFyc2VGbG9hdChuKSkpO1xuXG4gICAgICAgIC8vIEF1dG9tYXRpY2FsbHkgY29udmVydCBwZXJjZW50YWdlIGludG8gbnVtYmVyXG4gICAgICAgIGlmIChwcm9jZXNzUGVyY2VudCkge1xuICAgICAgICAgICAgbiA9IHBhcnNlSW50KG4gKiBtYXgsIDEwKSAvIDEwMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEhhbmRsZSBmbG9hdGluZyBwb2ludCByb3VuZGluZyBlcnJvcnNcbiAgICAgICAgaWYgKChtYXRoLmFicyhuIC0gbWF4KSA8IDAuMDAwMDAxKSkge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDb252ZXJ0IGludG8gWzAsIDFdIHJhbmdlIGlmIGl0IGlzbid0IGFscmVhZHlcbiAgICAgICAgcmV0dXJuIChuICUgbWF4KSAvIHBhcnNlRmxvYXQobWF4KTtcbiAgICB9XG5cbiAgICAvLyBGb3JjZSBhIG51bWJlciBiZXR3ZWVuIDAgYW5kIDFcbiAgICBmdW5jdGlvbiBjbGFtcDAxKHZhbCkge1xuICAgICAgICByZXR1cm4gbWF0aE1pbigxLCBtYXRoTWF4KDAsIHZhbCkpO1xuICAgIH1cblxuICAgIC8vIFBhcnNlIGEgYmFzZS0xNiBoZXggdmFsdWUgaW50byBhIGJhc2UtMTAgaW50ZWdlclxuICAgIGZ1bmN0aW9uIHBhcnNlSW50RnJvbUhleCh2YWwpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHZhbCwgMTYpO1xuICAgIH1cblxuICAgIC8vIE5lZWQgdG8gaGFuZGxlIDEuMCBhcyAxMDAlLCBzaW5jZSBvbmNlIGl0IGlzIGEgbnVtYmVyLCB0aGVyZSBpcyBubyBkaWZmZXJlbmNlIGJldHdlZW4gaXQgYW5kIDFcbiAgICAvLyA8aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy83NDIyMDcyL2phdmFzY3JpcHQtaG93LXRvLWRldGVjdC1udW1iZXItYXMtYS1kZWNpbWFsLWluY2x1ZGluZy0xLTA+XG4gICAgZnVuY3Rpb24gaXNPbmVQb2ludFplcm8obikge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG4gPT0gXCJzdHJpbmdcIiAmJiBuLmluZGV4T2YoJy4nKSAhPSAtMSAmJiBwYXJzZUZsb2F0KG4pID09PSAxO1xuICAgIH1cblxuICAgIC8vIENoZWNrIHRvIHNlZSBpZiBzdHJpbmcgcGFzc2VkIGluIGlzIGEgcGVyY2VudGFnZVxuICAgIGZ1bmN0aW9uIGlzUGVyY2VudGFnZShuKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgbiA9PT0gXCJzdHJpbmdcIiAmJiBuLmluZGV4T2YoJyUnKSAhPSAtMTtcbiAgICB9XG5cbiAgICAvLyBGb3JjZSBhIGhleCB2YWx1ZSB0byBoYXZlIDIgY2hhcmFjdGVyc1xuICAgIGZ1bmN0aW9uIHBhZDIoYykge1xuICAgICAgICByZXR1cm4gYy5sZW5ndGggPT0gMSA/ICcwJyArIGMgOiAnJyArIGM7XG4gICAgfVxuXG4gICAgLy8gUmVwbGFjZSBhIGRlY2ltYWwgd2l0aCBpdCdzIHBlcmNlbnRhZ2UgdmFsdWVcbiAgICBmdW5jdGlvbiBjb252ZXJ0VG9QZXJjZW50YWdlKG4pIHtcbiAgICAgICAgaWYgKG4gPD0gMSkge1xuICAgICAgICAgICAgbiA9IChuICogMTAwKSArIFwiJVwiO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG47XG4gICAgfVxuXG4gICAgLy8gQ29udmVydHMgYSBkZWNpbWFsIHRvIGEgaGV4IHZhbHVlXG4gICAgZnVuY3Rpb24gY29udmVydERlY2ltYWxUb0hleChkKSB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHBhcnNlRmxvYXQoZCkgKiAyNTUpLnRvU3RyaW5nKDE2KTtcbiAgICB9XG4gICAgLy8gQ29udmVydHMgYSBoZXggdmFsdWUgdG8gYSBkZWNpbWFsXG4gICAgZnVuY3Rpb24gY29udmVydEhleFRvRGVjaW1hbChoKSB7XG4gICAgICAgIHJldHVybiAocGFyc2VJbnRGcm9tSGV4KGgpIC8gMjU1KTtcbiAgICB9XG5cbiAgICB2YXIgbWF0Y2hlcnMgPSAoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgLy8gPGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtdmFsdWVzLyNpbnRlZ2Vycz5cbiAgICAgICAgdmFyIENTU19JTlRFR0VSID0gXCJbLVxcXFwrXT9cXFxcZCslP1wiO1xuXG4gICAgICAgIC8vIDxodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXZhbHVlcy8jbnVtYmVyLXZhbHVlPlxuICAgICAgICB2YXIgQ1NTX05VTUJFUiA9IFwiWy1cXFxcK10/XFxcXGQqXFxcXC5cXFxcZCslP1wiO1xuXG4gICAgICAgIC8vIEFsbG93IHBvc2l0aXZlL25lZ2F0aXZlIGludGVnZXIvbnVtYmVyLiAgRG9uJ3QgY2FwdHVyZSB0aGUgZWl0aGVyL29yLCBqdXN0IHRoZSBlbnRpcmUgb3V0Y29tZS5cbiAgICAgICAgdmFyIENTU19VTklUID0gXCIoPzpcIiArIENTU19OVU1CRVIgKyBcIil8KD86XCIgKyBDU1NfSU5URUdFUiArIFwiKVwiO1xuXG4gICAgICAgIC8vIEFjdHVhbCBtYXRjaGluZy5cbiAgICAgICAgLy8gUGFyZW50aGVzZXMgYW5kIGNvbW1hcyBhcmUgb3B0aW9uYWwsIGJ1dCBub3QgcmVxdWlyZWQuXG4gICAgICAgIC8vIFdoaXRlc3BhY2UgY2FuIHRha2UgdGhlIHBsYWNlIG9mIGNvbW1hcyBvciBvcGVuaW5nIHBhcmVuXG4gICAgICAgIHZhciBQRVJNSVNTSVZFX01BVENIMyA9IFwiW1xcXFxzfFxcXFwoXSsoXCIgKyBDU1NfVU5JVCArIFwiKVssfFxcXFxzXSsoXCIgKyBDU1NfVU5JVCArIFwiKVssfFxcXFxzXSsoXCIgKyBDU1NfVU5JVCArIFwiKVxcXFxzKlxcXFwpP1wiO1xuICAgICAgICB2YXIgUEVSTUlTU0lWRV9NQVRDSDQgPSBcIltcXFxcc3xcXFxcKF0rKFwiICsgQ1NTX1VOSVQgKyBcIilbLHxcXFxcc10rKFwiICsgQ1NTX1VOSVQgKyBcIilbLHxcXFxcc10rKFwiICsgQ1NTX1VOSVQgKyBcIilbLHxcXFxcc10rKFwiICsgQ1NTX1VOSVQgKyBcIilcXFxccypcXFxcKT9cIjtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmdiOiBuZXcgUmVnRXhwKFwicmdiXCIgKyBQRVJNSVNTSVZFX01BVENIMyksXG4gICAgICAgICAgICByZ2JhOiBuZXcgUmVnRXhwKFwicmdiYVwiICsgUEVSTUlTU0lWRV9NQVRDSDQpLFxuICAgICAgICAgICAgaHNsOiBuZXcgUmVnRXhwKFwiaHNsXCIgKyBQRVJNSVNTSVZFX01BVENIMyksXG4gICAgICAgICAgICBoc2xhOiBuZXcgUmVnRXhwKFwiaHNsYVwiICsgUEVSTUlTU0lWRV9NQVRDSDQpLFxuICAgICAgICAgICAgaHN2OiBuZXcgUmVnRXhwKFwiaHN2XCIgKyBQRVJNSVNTSVZFX01BVENIMyksXG4gICAgICAgICAgICBoc3ZhOiBuZXcgUmVnRXhwKFwiaHN2YVwiICsgUEVSTUlTU0lWRV9NQVRDSDQpLFxuICAgICAgICAgICAgaGV4MzogL14oWzAtOWEtZkEtRl17MX0pKFswLTlhLWZBLUZdezF9KShbMC05YS1mQS1GXXsxfSkkLyxcbiAgICAgICAgICAgIGhleDY6IC9eKFswLTlhLWZBLUZdezJ9KShbMC05YS1mQS1GXXsyfSkoWzAtOWEtZkEtRl17Mn0pJC8sXG4gICAgICAgICAgICBoZXg4OiAvXihbMC05YS1mQS1GXXsyfSkoWzAtOWEtZkEtRl17Mn0pKFswLTlhLWZBLUZdezJ9KShbMC05YS1mQS1GXXsyfSkkL1xuICAgICAgICB9O1xuICAgIH0pKCk7XG5cbiAgICAvLyBgc3RyaW5nSW5wdXRUb09iamVjdGBcbiAgICAvLyBQZXJtaXNzaXZlIHN0cmluZyBwYXJzaW5nLiAgVGFrZSBpbiBhIG51bWJlciBvZiBmb3JtYXRzLCBhbmQgb3V0cHV0IGFuIG9iamVjdFxuICAgIC8vIGJhc2VkIG9uIGRldGVjdGVkIGZvcm1hdC4gIFJldHVybnMgYHsgciwgZywgYiB9YCBvciBgeyBoLCBzLCBsIH1gIG9yIGB7IGgsIHMsIHZ9YFxuICAgIGZ1bmN0aW9uIHN0cmluZ0lucHV0VG9PYmplY3QoY29sb3IpIHtcblxuICAgICAgICBjb2xvciA9IGNvbG9yLnJlcGxhY2UodHJpbUxlZnQsJycpLnJlcGxhY2UodHJpbVJpZ2h0LCAnJykudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgdmFyIG5hbWVkID0gZmFsc2U7XG4gICAgICAgIGlmIChuYW1lc1tjb2xvcl0pIHtcbiAgICAgICAgICAgIGNvbG9yID0gbmFtZXNbY29sb3JdO1xuICAgICAgICAgICAgbmFtZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvbG9yID09ICd0cmFuc3BhcmVudCcpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHI6IDAsIGc6IDAsIGI6IDAsIGE6IDAsIGZvcm1hdDogXCJuYW1lXCIgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRyeSB0byBtYXRjaCBzdHJpbmcgaW5wdXQgdXNpbmcgcmVndWxhciBleHByZXNzaW9ucy5cbiAgICAgICAgLy8gS2VlcCBtb3N0IG9mIHRoZSBudW1iZXIgYm91bmRpbmcgb3V0IG9mIHRoaXMgZnVuY3Rpb24gLSBkb24ndCB3b3JyeSBhYm91dCBbMCwxXSBvciBbMCwxMDBdIG9yIFswLDM2MF1cbiAgICAgICAgLy8gSnVzdCByZXR1cm4gYW4gb2JqZWN0IGFuZCBsZXQgdGhlIGNvbnZlcnNpb24gZnVuY3Rpb25zIGhhbmRsZSB0aGF0LlxuICAgICAgICAvLyBUaGlzIHdheSB0aGUgcmVzdWx0IHdpbGwgYmUgdGhlIHNhbWUgd2hldGhlciB0aGUgdGlueWNvbG9yIGlzIGluaXRpYWxpemVkIHdpdGggc3RyaW5nIG9yIG9iamVjdC5cbiAgICAgICAgdmFyIG1hdGNoO1xuICAgICAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMucmdiLmV4ZWMoY29sb3IpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgcjogbWF0Y2hbMV0sIGc6IG1hdGNoWzJdLCBiOiBtYXRjaFszXSB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICgobWF0Y2ggPSBtYXRjaGVycy5yZ2JhLmV4ZWMoY29sb3IpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgcjogbWF0Y2hbMV0sIGc6IG1hdGNoWzJdLCBiOiBtYXRjaFszXSwgYTogbWF0Y2hbNF0gfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaHNsLmV4ZWMoY29sb3IpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCBsOiBtYXRjaFszXSB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICgobWF0Y2ggPSBtYXRjaGVycy5oc2xhLmV4ZWMoY29sb3IpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCBsOiBtYXRjaFszXSwgYTogbWF0Y2hbNF0gfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaHN2LmV4ZWMoY29sb3IpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCB2OiBtYXRjaFszXSB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICgobWF0Y2ggPSBtYXRjaGVycy5oc3ZhLmV4ZWMoY29sb3IpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCB2OiBtYXRjaFszXSwgYTogbWF0Y2hbNF0gfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaGV4OC5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYTogY29udmVydEhleFRvRGVjaW1hbChtYXRjaFsxXSksXG4gICAgICAgICAgICAgICAgcjogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzJdKSxcbiAgICAgICAgICAgICAgICBnOiBwYXJzZUludEZyb21IZXgobWF0Y2hbM10pLFxuICAgICAgICAgICAgICAgIGI6IHBhcnNlSW50RnJvbUhleChtYXRjaFs0XSksXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBuYW1lZCA/IFwibmFtZVwiIDogXCJoZXg4XCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhleDYuZXhlYyhjb2xvcikpKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHI6IHBhcnNlSW50RnJvbUhleChtYXRjaFsxXSksXG4gICAgICAgICAgICAgICAgZzogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzJdKSxcbiAgICAgICAgICAgICAgICBiOiBwYXJzZUludEZyb21IZXgobWF0Y2hbM10pLFxuICAgICAgICAgICAgICAgIGZvcm1hdDogbmFtZWQgPyBcIm5hbWVcIiA6IFwiaGV4XCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhleDMuZXhlYyhjb2xvcikpKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHI6IHBhcnNlSW50RnJvbUhleChtYXRjaFsxXSArICcnICsgbWF0Y2hbMV0pLFxuICAgICAgICAgICAgICAgIGc6IHBhcnNlSW50RnJvbUhleChtYXRjaFsyXSArICcnICsgbWF0Y2hbMl0pLFxuICAgICAgICAgICAgICAgIGI6IHBhcnNlSW50RnJvbUhleChtYXRjaFszXSArICcnICsgbWF0Y2hbM10pLFxuICAgICAgICAgICAgICAgIGZvcm1hdDogbmFtZWQgPyBcIm5hbWVcIiA6IFwiaGV4XCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgd2luZG93LnRpbnljb2xvciA9IHRpbnljb2xvcjtcbiAgICB9KSgpO1xuXG4gICAgJChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICgkLmZuLnNwZWN0cnVtLmxvYWQpIHtcbiAgICAgICAgICAgICQuZm4uc3BlY3RydW0ucHJvY2Vzc05hdGl2ZUNvbG9ySW5wdXRzKCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxufSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QganF1ZXJ5XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImpxdWVyeVwiKSk7XG5jb25zdCBtYXRlcmlhbGl6ZV9jc3NfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwibWF0ZXJpYWxpemUtY3NzXCIpKTtcbnJlcXVpcmUoXCJzcGVjdHJ1bS1jb2xvcnBpY2tlclwiKTtcbmNvbnN0IGFuYWx5dGljc18xID0gcmVxdWlyZShcIi4vdXRpbHMvYW5hbHl0aWNzXCIpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi91dGlscy9jb25zdGFudHNcIik7XG5jb25zdCBkZWZhdWx0X2ljb25zXzEgPSByZXF1aXJlKFwiLi91dGlscy9kZWZhdWx0LWljb25zXCIpO1xuY29uc3QgZGVmYXVsdF90aGVtZXNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzL2RlZmF1bHQtdGhlbWVzXCIpO1xuY29uc3QgZG9tXzEgPSByZXF1aXJlKFwiLi91dGlscy9kb21cIik7XG5jb25zdCBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL3V0aWxzL2xvZ2dlclwiKTtcbmNvbnN0IHRoZW1lX21vZGVsXzEgPSByZXF1aXJlKFwiLi91dGlscy90aGVtZS1tb2RlbFwiKTtcbmNvbnN0IHNjaG9vbG9neVBsdXNMb2dvSW1hZ2VVcmwgPSBjaHJvbWUucnVudGltZS5nZXRVUkwoXCIvaW1ncy9zY2hvb2xvZ3ktcGx1cy13aWRlLnN2Z1wiKTtcbmNvbnN0IHNjaG9vbG9neUxvZ29JbWFnZVVybCA9IFwiaHR0cHM6Ly91aS5zY2hvb2xvZ3kuY29tL2Rlc2lnbi1zeXN0ZW0vYXNzZXRzL3NjaG9vbG9neS1sb2dvLWhvcml6b250YWwtd2hpdGUuODg0ZmJlNTU5YzY2ZTA2ZDI4YzVjZmNiZDQwNDRmMGUuc3ZnXCI7XG5jb25zdCBsYXVzZExlZ2FjeUltYWdlVXJsID0gY2hyb21lLnJ1bnRpbWUuZ2V0VVJMKFwiL2ltZ3MvbGF1c2QtbGVnYWN5LnBuZ1wiKTtcbmNvbnN0IGxhdXNkMjAxOUltYWdlVXJsID0gY2hyb21lLnJ1bnRpbWUuZ2V0VVJMKFwiL2ltZ3MvbGF1c2QtMjAxOS5wbmdcIik7XG5jb25zdCBsYXVzZDIwMjJJbWFnZVVybCA9IGNocm9tZS5ydW50aW1lLmdldFVSTChcIi9pbWdzL2xhdXNkLTIwMjIucG5nXCIpO1xuY29uc3QgQ1VSUkVOVF9WRVJTSU9OID0gdGhlbWVfbW9kZWxfMS5TY2hvb2xvZ3lUaGVtZS5DVVJSRU5UX1ZFUlNJT047XG5jb25zdCBwbGFjZWhvbGRlclVybCA9IFwiaHR0cHM6Ly92aWEucGxhY2Vob2xkZXIuY29tLzIwMHg1MD90ZXh0PVNjaG9vbCtMb2dvXCI7XG52YXIgZGVmYXVsdERvbWFpbiA9IFwiYXBwLnNjaG9vbG9neS5jb21cIjtcbnZhciBfX3N0b3JhZ2UgPSB7fTtcbmZ1bmN0aW9uIGxvYWQoKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgICAgICBfX3N0b3JhZ2UgPSB5aWVsZCBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldChudWxsKTtcbiAgICAgICAgeWllbGQgKDAsIGFuYWx5dGljc18xLmluaXRpYWxpemVBbmFseXRpY3MpKHtcbiAgICAgICAgICAgIGRvY3VtZW50Q29udGV4dDogdHJ1ZSxcbiAgICAgICAgICAgIGlzQW5hbHl0aWNzRW5hYmxlZDogKDAsIGRvbV8xLmdldEJyb3dzZXIpKCkgIT09IFwiRmlyZWZveFwiICYmIF9fc3RvcmFnZS5hbmFseXRpY3MgIT09IFwiZGlzYWJsZWRcIixcbiAgICAgICAgICAgIHNlbGVjdGVkVGhlbWU6IChfYSA9IF9fc3RvcmFnZS50aGVtZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCI8dW5zZXQ+XCIsXG4gICAgICAgICAgICBzZWxlY3RlZEJldGE6IChfYiA9IF9fc3RvcmFnZS5iZXRhKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBcIjx1bnNldD5cIixcbiAgICAgICAgICAgIGN1cnJlbnRWZXJzaW9uOiBjaHJvbWUucnVudGltZS5nZXRNYW5pZmVzdCgpLnZlcnNpb24sXG4gICAgICAgICAgICBuZXdWZXJzaW9uOiAoX2MgPSBfX3N0b3JhZ2UubmV3VmVyc2lvbikgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogXCI8dW5zZXQ+XCIsXG4gICAgICAgICAgICByYW5kb21Vc2VySWQ6IHlpZWxkICgwLCBhbmFseXRpY3NfMS5nZXRBbmFseXRpY3NVc2VySWQpKCksXG4gICAgICAgICAgICB0aGVtZUlzTW9kZXJuOiAoX2QgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKFwibW9kZXJuXCIpKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBcImZhbHNlXCIsXG4gICAgICAgIH0pO1xuICAgICAgICBkZWZhdWx0RG9tYWluID0gX19zdG9yYWdlLmRlZmF1bHREb21haW4gfHwgXCJhcHAuc2Nob29sb2d5LmNvbVwiO1xuICAgICAgICBpZiAoaXNMQVVTRCgpKSB7XG4gICAgICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwibGF1c2QtdmlzaWJsZVwiLCBcImJsb2NrXCIpO1xuICAgICAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImxhdXNkLWhpZGRlblwiLCBcIm5vbmVcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwibGF1c2QtdmlzaWJsZVwiLCBcIm5vbmVcIik7XG4gICAgICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwibGF1c2QtaGlkZGVuXCIsIFwiYmxvY2tcIik7XG4gICAgICAgIH1cbiAgICAgICAganF1ZXJ5XzEuZGVmYXVsdC5mbi5yb3VuZFNsaWRlci5wcm90b3R5cGUuX2ludmVydFJhbmdlID0gdHJ1ZTtcbiAgICAgICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKFwiI3RoZW1lLWh1ZVwiKS5zbGlkZXIoe1xuICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgbWF4OiAzNTksXG4gICAgICAgICAgICBzbGlkZTogaHVlU2xpZGVyRXZlbnQsXG4gICAgICAgICAgICBzdG9wOiBodWVTbGlkZXJFdmVudCxcbiAgICAgICAgICAgIGNoYW5nZTogaHVlU2xpZGVyRXZlbnQsXG4gICAgICAgIH0pO1xuICAgICAgICAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoY29sb3JSYWluYm93SHVlVmFsdWUpLnNsaWRlcih7XG4gICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICBtYXg6IDM1OSxcbiAgICAgICAgICAgIHNsaWRlOiBodWVTbGlkZXJFdmVudCxcbiAgICAgICAgICAgIHN0b3A6IGh1ZVNsaWRlckV2ZW50LFxuICAgICAgICAgICAgY2hhbmdlOiBodWVTbGlkZXJFdmVudCxcbiAgICAgICAgfSk7XG4gICAgICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KShcIiNjb2xvci1yYWluYm93LWh1ZS1yYW5nZVwiKS5yb3VuZFNsaWRlcih7XG4gICAgICAgICAgICBzbGlkZXJUeXBlOiBcInJhbmdlXCIsXG4gICAgICAgICAgICBoYW5kbGVTaGFwZTogXCJyb3VuZFwiLFxuICAgICAgICAgICAgd2lkdGg6IDE1LFxuICAgICAgICAgICAgcmFkaXVzOiA3NSxcbiAgICAgICAgICAgIHZhbHVlOiBcIjAsMzU5XCIsXG4gICAgICAgICAgICBtYXg6IDM1OSxcbiAgICAgICAgICAgIHN0YXJ0QW5nbGU6IDkwLFxuICAgICAgICAgICAgZHJhZzogY2lyY2xlUmFuZ2VTbGlkZXJFdmVudCxcbiAgICAgICAgICAgIHN0b3A6IGNpcmNsZVJhbmdlU2xpZGVyRXZlbnQsXG4gICAgICAgICAgICBjaGFuZ2U6IGNpcmNsZVJhbmdlU2xpZGVyRXZlbnQsXG4gICAgICAgIH0pO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJzLXRvb2x0aXBcIikuc3R5bGUubWFyZ2luID0gXCItMTUuNXB4IDAgMCAtMzMuMDU0N3B4XCI7XG4gICAgICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KShcIiNjb2xvci1yYWluYm93LXNhdHVyYXRpb24tcmFuZ2VcIikuc2xpZGVyKHtcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgIG1heDogMTAwLFxuICAgICAgICAgICAgcmFuZ2U6IHRydWUsXG4gICAgICAgICAgICBzbGlkZTogcmFuZ2VTbGlkZXJFdmVudCxcbiAgICAgICAgICAgIHN0b3A6IHJhbmdlU2xpZGVyRXZlbnQsXG4gICAgICAgICAgICBjaGFuZ2U6IHJhbmdlU2xpZGVyRXZlbnQsXG4gICAgICAgICAgICB2YWx1ZXM6IFswLCAxMDBdLFxuICAgICAgICB9KTtcbiAgICAgICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKFwiI2NvbG9yLXJhaW5ib3ctbGlnaHRuZXNzLXJhbmdlXCIpLnNsaWRlcih7XG4gICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICBtYXg6IDEwMCxcbiAgICAgICAgICAgIHJhbmdlOiB0cnVlLFxuICAgICAgICAgICAgc2xpZGU6IHJhbmdlU2xpZGVyRXZlbnQsXG4gICAgICAgICAgICBzdG9wOiByYW5nZVNsaWRlckV2ZW50LFxuICAgICAgICAgICAgY2hhbmdlOiByYW5nZVNsaWRlckV2ZW50LFxuICAgICAgICAgICAgdmFsdWVzOiBbMCwgMTAwXSxcbiAgICAgICAgfSk7XG4gICAgICAgIGluaXRpYWxpemVEcmFnQW5kRHJvcCh0aGVtZUN1cnNvciwgbnVsbCwgXCJ2YWx1ZVwiKTtcbiAgICAgICAgaW5pdGlhbGl6ZURyYWdBbmREcm9wKHRoZW1lTG9nbywgbnVsbCwgXCJ2YWx1ZVwiKTtcbiAgICAgICAgdGhlbWVDdXJzb3IuYWRkRXZlbnRMaXN0ZW5lcihcInBhc3RlXCIsIHVwbG9hZEFuZFBhc3RlKTtcbiAgICAgICAgdGhlbWVMb2dvLmFkZEV2ZW50TGlzdGVuZXIoXCJwYXN0ZVwiLCB1cGxvYWRBbmRQYXN0ZSk7XG4gICAgICAgIGxldCBvbmlucHV0ID0gKGUpID0+IChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlLnRhcmdldC5kYXRhc2V0LmxhYmVsKS50ZXh0Q29udGVudCA9IGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgZm9yIChsZXQgaW5wdXQgb2YgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImlucHV0W3R5cGU9cmFuZ2VdW2RhdGEtbGFiZWxdXCIpKSB7XG4gICAgICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgb25pbnB1dCk7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpbnB1dC5kYXRhc2V0LmxhYmVsKS50ZXh0Q29udGVudCA9IGlucHV0LnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IHQgb2YgZGVmYXVsdF90aGVtZXNfMS5ERUZBVUxUX1RIRU1FUykge1xuICAgICAgICAgICAgZGVmYXVsdFRoZW1lcy5wdXNoKHQubmFtZSk7XG4gICAgICAgICAgICBpZiAoIWlzTEFVU0QoKSAmJiBkZWZhdWx0X3RoZW1lc18xLkxBVVNEX1RIRU1FUy5pbmNsdWRlcyh0Lm5hbWUpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhbGxUaGVtZXNbdC5uYW1lXSA9IHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoW1widGhlbWVcIiwgXCJ0aGVtZXNcIl0sIHMgPT4ge1xuICAgICAgICAgICAgLy8gZGVmYXVsdCB0aGVtZSBpcyBcIlNjaG9vbG9neSBQbHVzXCJcbiAgICAgICAgICAgIHMudGhlbWUgPSBzLnRoZW1lIHx8IGNvbnN0YW50c18xLkRFRkFVTFRfVEhFTUVfTkFNRTtcbiAgICAgICAgICAgIGZvciAobGV0IHQgb2Ygcy50aGVtZXMgfHwgW10pIHtcbiAgICAgICAgICAgICAgICBhbGxUaGVtZXNbdC5uYW1lXSA9IHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGxldCB0IGluIGFsbFRoZW1lcykge1xuICAgICAgICAgICAgICAgIGxldCB0aGVtZUl0ZW0gPSAoMCwgZG9tXzEuY3JlYXRlRWxlbWVudCkoXCJhXCIsIFtcImNvbGxlY3Rpb24taXRlbVwiLCBcInRoZW1lLWl0ZW1cIl0sIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YXNldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhlbWU6IHQsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uY2xpY2s6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGx5VGhlbWUodCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBlbGVtIG9mIChfYiA9IChfYSA9IHRoZW1lSXRlbS5wYXJlbnRFbGVtZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2hpbGRyZW4pICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFtdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhlbWVJdGVtLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSwgW1xuICAgICAgICAgICAgICAgICAgICAoMCwgZG9tXzEuY3JlYXRlRWxlbWVudCkoXCJzcGFuXCIsIFtcInRvb2x0aXBwZWRcIl0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRDb250ZW50OiB0ICsgKGRlZmF1bHRfdGhlbWVzXzEuQ0xBU1NJQ19USEVNRVMuaW5jbHVkZXModCkgPyBcIiAoQ2xhc3NpYylcIiA6IFwiXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXA6IHQgKyAoZGVmYXVsdF90aGVtZXNfMS5DTEFTU0lDX1RIRU1FUy5pbmNsdWRlcyh0KSA/IFwiIChDbGFzc2ljKVwiIDogXCJcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgICAgICBsZXQgcHJvcHMgPSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHRDb250ZW50OiBcImNoZWNrXCIsXG4gICAgICAgICAgICAgICAgICAgIGRhdGFzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXA6IFwiQXBwbHkgVGhlbWVcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25jbGljazogKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBDb25maXJtTW9kYWwub3BlbihcIkFwcGx5IFRoZW1lP1wiLCBgQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGFwcGx5IHRoZSB0aGVtZSAke3R9P2AsIFtcIkFwcGx5XCIsIFwiQ2FuY2VsXCJdLCBiID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYiA9PT0gXCJBcHBseVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgwLCBhbmFseXRpY3NfMS50cmFja0V2ZW50KShcImJ1dHRvbl9jbGlja1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJhcHBseS10aGVtZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogXCJUaGVtZSBMaXN0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZ2FjeVRhcmdldDogYFRoZW1lOiAke3R9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZ2FjeUFjdGlvbjogXCJhcHBseVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVnYWN5TGFiZWw6IFwiVGhlbWUgTGlzdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyB0aGVtZTogdCB9LCAoKSA9PiAobG9jYXRpb24uaHJlZiA9IGBodHRwczovLyR7ZGVmYXVsdERvbWFpbn1gKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBsZXQgYXBwbGllZFByb3BzID0ge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogXCJzdGFyXCIsXG4gICAgICAgICAgICAgICAgICAgIGRhdGFzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXA6IFwiVGhlbWUgQXBwbGllZFwiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvbmNsaWNrOiAoKSA9PiAobG9jYXRpb24uaHJlZiA9IGBodHRwczovLyR7ZGVmYXVsdERvbWFpbn1gKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUFjdGlvbkJ1dHRvbihwcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoMCwgZG9tXzEuY3JlYXRlRWxlbWVudCkoXCJpXCIsIFtcIm1hdGVyaWFsLWljb25zXCIsIFwicmlnaHRcIiwgXCJ0b29sdGlwcGVkXCJdLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IGJ1dHRvbnNEaXYgPSAoMCwgZG9tXzEuY3JlYXRlRWxlbWVudCkoXCJkaXZcIiwgW1wicmlnaHRcIl0pO1xuICAgICAgICAgICAgICAgIGJ1dHRvbnNEaXYuc3R5bGUud2lkdGggPSBcIjE2MHB4XCI7XG4gICAgICAgICAgICAgICAgdGhlbWVJdGVtLmFwcGVuZENoaWxkKGJ1dHRvbnNEaXYpO1xuICAgICAgICAgICAgICAgIGJ1dHRvbnNEaXYuYXBwZW5kQ2hpbGQoY3JlYXRlQWN0aW9uQnV0dG9uKHQgPT0gcy50aGVtZSA/IGFwcGxpZWRQcm9wcyA6IHByb3BzKSk7XG4gICAgICAgICAgICAgICAgbGV0IHNoYXJlQnV0dG9uID0gY3JlYXRlQWN0aW9uQnV0dG9uKHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dENvbnRlbnQ6IFwiY29udGVudF9jb3B5XCIsXG4gICAgICAgICAgICAgICAgICAgIGRhdGFzZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXA6IFwiQ29weSBUaGVtZSB0byBDbGlwYm9hcmRcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBzaGFyZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvcHlUaGVtZVRvQ2xpcGJvYXJkKHQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJ1dHRvbnNEaXYuYXBwZW5kQ2hpbGQoc2hhcmVCdXR0b24pO1xuICAgICAgICAgICAgICAgIGlmICghZGVmYXVsdFRoZW1lcy5pbmNsdWRlcyh0KSkge1xuICAgICAgICAgICAgICAgICAgICBidXR0b25zRGl2LmFwcGVuZENoaWxkKGNyZWF0ZUFjdGlvbkJ1dHRvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogXCJkZWxldGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFzZXQ6IHsgdG9vbHRpcDogXCJEZWxldGUgVGhlbWVcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljazogZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlVGhlbWUodCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uc0Rpdi5hcHBlbmRDaGlsZChjcmVhdGVBY3Rpb25CdXR0b24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dENvbnRlbnQ6IFwiZWRpdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNldDogeyB0b29sdGlwOiBcIkVkaXQgVGhlbWVcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljazogKCkgPT4gZWRpdFRoZW1lKHQpLFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoZW1lc0xpc3QuYXBwZW5kQ2hpbGQodGhlbWVJdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBzZWxlY3RlZCA9IEFycmF5LmZyb20odGhlbWVzTGlzdC5jaGlsZHJlbikuZmluZCh4ID0+IHguZGF0YXNldC50aGVtZSA9PSBzLnRoZW1lKTtcbiAgICAgICAgICAgIChzZWxlY3RlZCB8fCB0aGVtZXNMaXN0LmZpcnN0RWxlbWVudENoaWxkKS5jbGljaygpO1xuICAgICAgICAgICAgbWF0ZXJpYWxpemVfY3NzXzEuZGVmYXVsdC5Ub29sdGlwLmluaXQoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50b29sdGlwcGVkXCIpLCB7XG4gICAgICAgICAgICAgICAgb3V0RHVyYXRpb246IDAsXG4gICAgICAgICAgICAgICAgaW5EdXJhdGlvbjogMzAwLFxuICAgICAgICAgICAgICAgIGVudGVyRGVsYXk6IDAsXG4gICAgICAgICAgICAgICAgZXhpdERlbGF5OiAxMCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIGVsZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5maXhlZC1hY3Rpb24tYnRuXCIpO1xuICAgICAgICAgICAgbWF0ZXJpYWxpemVfY3NzXzEuZGVmYXVsdC5GbG9hdGluZ0FjdGlvbkJ1dHRvbi5pbml0KGVsZW1zLCB7IGRpcmVjdGlvbjogXCJsZWZ0XCIsIGhvdmVyRW5hYmxlZDogZmFsc2UgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxubG9hZCgpO1xuZnVuY3Rpb24gaXNMQVVTRCgpIHtcbiAgICByZXR1cm4gZGVmYXVsdERvbWFpbiA9PT0gXCJsbXMubGF1c2QubmV0XCI7XG59XG52YXIgYWxsVGhlbWVzID0ge307XG52YXIgZGVmYXVsdFRoZW1lcyA9IFtdO1xudmFyIHJhaW5ib3dJbnRlcnZhbCA9IHVuZGVmaW5lZDtcbnZhciB0aGVtZU5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLW5hbWVcIik7XG52YXIgdGhlbWVIdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLWh1ZVwiKTtcbnZhciB0aGVtZVByaW1hcnlDb2xvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtcHJpbWFyeS1jb2xvclwiKTtcbnZhciB0aGVtZVNlY29uZGFyeUNvbG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGVtZS1zZWNvbmRhcnktY29sb3JcIik7XG52YXIgdGhlbWVCYWNrZ3JvdW5kQ29sb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLWJhY2tncm91bmQtY29sb3JcIik7XG52YXIgdGhlbWVCb3JkZXJDb2xvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtYm9yZGVyLWNvbG9yXCIpO1xudmFyIHRoZW1lTGlua0NvbG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGVtZS1saW5rLWNvbG9yXCIpO1xudmFyIHRoZW1lU2Nob29sb2d5UGx1c0xvZ28gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLXNjaG9vbG9neS1wbHVzLWxvZ29cIik7XG52YXIgdGhlbWVTY2hvb2xvZ3lMb2dvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGVtZS1zY2hvb2xvZ3ktbG9nb1wiKTtcbnZhciB0aGVtZUxBVVNETG9nbzIwMjIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLWxhdXNkLWxvZ28tMjAyMlwiKTtcbnZhciB0aGVtZU5ld0xBVVNETG9nbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtbmV3LWxhdXNkLWxvZ29cIik7XG52YXIgdGhlbWVMQVVTRExvZ28gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLWxhdXNkLWxvZ29cIik7XG52YXIgdGhlbWVEZWZhdWx0TG9nbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtZGVmYXVsdC1sb2dvXCIpO1xudmFyIHRoZW1lQ3VzdG9tTG9nbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtY3VzdG9tLWxvZ29cIik7XG52YXIgdGhlbWVMb2dvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGVtZS1sb2dvXCIpO1xudmFyIHRoZW1lQ3Vyc29yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGVtZS1jdXJzb3JcIik7XG52YXIgdGhlbWVDb2xvckh1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtY29sb3ItaHVlXCIpO1xudmFyIHRoZW1lQ29sb3JDdXN0b20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLWNvbG9yLWN1c3RvbVwiKTtcbnZhciB0aGVtZUNvbG9yUmFpbmJvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtY29sb3ItcmFpbmJvd1wiKTtcbnZhciB0aGVtZUNvbG9yQ3VzdG9tV3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtY29sb3ItY3VzdG9tLXdyYXBwZXJcIik7XG52YXIgdGhlbWVDb2xvclJhaW5ib3dXcmFwcGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGVtZS1jb2xvci1yYWluYm93LXdyYXBwZXJcIik7XG52YXIgY29sb3JSYWluYm93SHVlQW5pbWF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1odWUtYW5pbWF0ZVwiKTtcbnZhciBjb2xvclJhaW5ib3dTYXR1cmF0aW9uQW5pbWF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1zYXR1cmF0aW9uLWFuaW1hdGVcIik7XG52YXIgY29sb3JSYWluYm93TGlnaHRuZXNzQW5pbWF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1saWdodG5lc3MtYW5pbWF0ZVwiKTtcbnZhciBjb2xvclJhaW5ib3dIdWVBbmltYXRlV3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1odWUtYW5pbWF0ZS13cmFwcGVyXCIpO1xudmFyIGNvbG9yUmFpbmJvd1NhdHVyYXRpb25BbmltYXRlV3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1zYXR1cmF0aW9uLWFuaW1hdGUtd3JhcHBlclwiKTtcbnZhciBjb2xvclJhaW5ib3dMaWdodG5lc3NBbmltYXRlV3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1saWdodG5lc3MtYW5pbWF0ZS13cmFwcGVyXCIpO1xudmFyIGNvbG9yUmFpbmJvd0h1ZVNwZWVkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb2xvci1yYWluYm93LWh1ZS1zcGVlZFwiKTtcbnZhciBjb2xvclJhaW5ib3dIdWVWYWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1odWUtdmFsdWVcIik7XG52YXIgY29sb3JSYWluYm93SHVlUHJldmlldyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1odWUtcHJldmlld1wiKTtcbnZhciBjb2xvclJhaW5ib3dTYXR1cmF0aW9uU3BlZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG9yLXJhaW5ib3ctc2F0dXJhdGlvbi1zcGVlZFwiKTtcbnZhciBjb2xvclJhaW5ib3dTYXR1cmF0aW9uVmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG9yLXJhaW5ib3ctc2F0dXJhdGlvbi12YWx1ZVwiKTtcbnZhciBjb2xvclJhaW5ib3dMaWdodG5lc3NTcGVlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1saWdodG5lc3Mtc3BlZWRcIik7XG52YXIgY29sb3JSYWluYm93TGlnaHRuZXNzVmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG9yLXJhaW5ib3ctbGlnaHRuZXNzLXZhbHVlXCIpO1xudmFyIGNvbG9yUmFpbmJvd0h1ZUFsdGVybmF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1odWUtYWx0ZXJuYXRlXCIpO1xudmFyIGNvbG9yUmFpbmJvd1NhdHVyYXRpb25BbHRlcm5hdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG9yLXJhaW5ib3ctc2F0dXJhdGlvbi1hbHRlcm5hdGVcIik7XG52YXIgY29sb3JSYWluYm93TGlnaHRuZXNzQWx0ZXJuYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb2xvci1yYWluYm93LWxpZ2h0bmVzcy1hbHRlcm5hdGVcIik7XG52YXIgY29sb3JSYWluYm93SHVlUmFuZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG9yLXJhaW5ib3ctaHVlLXJhbmdlXCIpO1xudmFyIGNvbG9yUmFpbmJvd1NhdHVyYXRpb25SYW5nZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItcmFpbmJvdy1zYXR1cmF0aW9uLXJhbmdlXCIpO1xudmFyIGNvbG9yUmFpbmJvd0xpZ2h0bmVzc1JhbmdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb2xvci1yYWluYm93LWxpZ2h0bmVzcy1yYW5nZVwiKTtcbnZhciB0aGVtZUh1ZVdyYXBwZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLWh1ZS13cmFwcGVyXCIpO1xudmFyIHRoZW1lTG9nb1dyYXBwZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lLWxvZ28td3JhcHBlclwiKTtcbnZhciBwcmV2aWV3U2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJldmlldy1zZWN0aW9uXCIpO1xudmFyIHRoZW1lc0xpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRoZW1lcy1saXN0XCIpO1xudmFyIHRoZW1lc0xpc3RTZWN0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aGVtZXMtbGlzdC1zZWN0aW9uXCIpO1xudmFyIHRoZW1lRWRpdG9yU2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGhlbWUtZWRpdG9yLXNlY3Rpb25cIik7XG52YXIgdGVzdEljb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlc3QtaWNvblwiKTtcbnZhciBpY29uTGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaWNvbi1saXN0XCIpO1xudmFyIHRhYkljb25zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWItaWNvbnNcIik7XG4vKiogQHR5cGUge0hUTUxUYWJsZUVsZW1lbnR9ICovXG52YXIgaWNvbkxpc3RUYWJsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaWNvbi1saXN0LXRhYmxlXCIpO1xudmFyIG5ld0ljb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldy1pY29uXCIpO1xubmV3SWNvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYWRkSWNvbik7XG52YXIgaWNvblRlc3RUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpY29uLXRlc3QtdGV4dFwiKTtcbmljb25UZXN0VGV4dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgaWNvblByZXZpZXcpO1xudmFyIHNhdmVCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNhdmUtYnV0dG9uXCIpO1xuc2F2ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB0cnlTYXZlVGhlbWUoKSk7XG52YXIgc2F2ZUNsb3NlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzYXZlLWNsb3NlLWJ1dHRvblwiKTtcbnNhdmVDbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB0cnlTYXZlVGhlbWUodHJ1ZSkpO1xudmFyIGRpc2NhcmRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRpc2NhcmQtYnV0dG9uXCIpO1xuZGlzY2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiBDb25maXJtTW9kYWwub3BlbihcIkRpc2NhcmQgQ2hhbmdlcz9cIiwgXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGlzY2FyZCBjaGFuZ2VzPyBBbGwgdW5zYXZlZCBlZGl0cyB3aWxsIGJlIHBlcm1hbmVudGx5IGxvc3QuXCIsIFtcIkRpc2NhcmRcIiwgXCJDYW5jZWxcIl0sIGIgPT4gYiA9PT0gXCJEaXNjYXJkXCIgJiYgbG9jYXRpb24ucmVsb2FkKCkpKTtcbnZhciBjbG9zZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2xvc2UtYnV0dG9uXCIpO1xuY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4gKCFpbkVkaXRNb2RlKCkgJiYgKGxvY2F0aW9uLmhyZWYgPSBgaHR0cHM6Ly8ke2RlZmF1bHREb21haW59YCkpIHx8XG4gICAgQ29uZmlybU1vZGFsLm9wZW4oXCJEaXNjYXJkIENoYW5nZXM/XCIsIFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGNsb3NlIHdpdGhvdXQgc2F2aW5nPyBBbGwgdW5zYXZlZCBlZGl0cyB3aWxsIGJlIHBlcm1hbmVudGx5IGxvc3QuXCIsIFtcIkRpc2NhcmRcIiwgXCJDYW5jZWxcIl0sIGIgPT4gYiA9PT0gXCJEaXNjYXJkXCIgJiYgKGxvY2F0aW9uLmhyZWYgPSBgaHR0cHM6Ly8ke2RlZmF1bHREb21haW59YCkpKTtcbnZhciBzZXR0aW5nc0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2V0dGluZ3MtYnV0dG9uXCIpO1xuc2V0dGluZ3NCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4gU2V0dGluZ3NNb2RhbC5vcGVuKCkpO1xudmFyIGltcG9ydEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW1wb3J0LWJ1dHRvblwiKTtcbmltcG9ydEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiBpbXBvcnRUaGVtZSgpKTtcbnZhciBjcmVhdGVQcmVzZXREYXJrVGhlbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNyZWF0ZS1wcmVzZXQtZGFyay10aGVtZVwiKTtcbmNyZWF0ZVByZXNldERhcmtUaGVtZSA9PT0gbnVsbCB8fCBjcmVhdGVQcmVzZXREYXJrVGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNyZWF0ZVByZXNldERhcmtUaGVtZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiBlZGl0VGhlbWUoXCJTY2hvb2xvZ3kgUGx1cyBNb2Rlcm4gRGFya1wiLCBcIk15IERhcmsgVGhlbWVcIikpO1xudmFyIGNyZWF0ZVByZXNldExpZ2h0VGhlbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNyZWF0ZS1wcmVzZXQtbGlnaHQtdGhlbWVcIik7XG5jcmVhdGVQcmVzZXRMaWdodFRoZW1lID09PSBudWxsIHx8IGNyZWF0ZVByZXNldExpZ2h0VGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNyZWF0ZVByZXNldExpZ2h0VGhlbWUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4gZWRpdFRoZW1lKFwiU2Nob29sb2d5IFBsdXMgTW9kZXJuIExpZ2h0XCIsIFwiTXkgTGlnaHQgVGhlbWVcIikpO1xudmFyIGNyZWF0ZVByZXNldFJhaW5ib3dUaGVtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY3JlYXRlLXByZXNldC1yYWluYm93LXRoZW1lXCIpO1xuY3JlYXRlUHJlc2V0UmFpbmJvd1RoZW1lID09PSBudWxsIHx8IGNyZWF0ZVByZXNldFJhaW5ib3dUaGVtZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogY3JlYXRlUHJlc2V0UmFpbmJvd1RoZW1lLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IGVkaXRUaGVtZShcIlJhaW5ib3cgTW9kZXJuXCIsIFwiTXkgUmFpbmJvdyBUaGVtZVwiKSk7XG52YXIgY3JlYXRlUHJlc2V0Q2xhc3NpY1RoZW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjcmVhdGUtcHJlc2V0LWNsYXNzaWMtdGhlbWVcIik7XG5jcmVhdGVQcmVzZXRDbGFzc2ljVGhlbWUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4gZWRpdFRoZW1lKFwiU2Nob29sb2d5IFBsdXNcIiwgXCJNeSBDbGFzc2ljIFRoZW1lXCIpKTtcbnZhciBwcmV2aWV3TmF2YmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmV2aWV3LW5hdmJhclwiKTtcbnZhciBwcmV2aWV3TG9nbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJldmlldy1sb2dvXCIpO1xudmFyIHByZXZpZXdQYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmV2aWV3LXBhZ2VcIik7XG52YXIgbGFzdFNlbGVjdGVkVGVtcGxhdGUgPSBudWxsO1xudmFyIG1vZGVybkVuYWJsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kZXJuLWVuYWJsZVwiKTtcbm1vZGVybkVuYWJsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiAoMCwgYW5hbHl0aWNzXzEudHJhY2tFdmVudCkoXCJ1cGRhdGVfc2V0dGluZ1wiLCB7XG4gICAgaWQ6IFwibW9kZXJuLWVuYWJsZVwiLFxuICAgIGNvbnRleHQ6IFwiVGhlbWUgRWRpdG9yXCIsXG4gICAgdmFsdWU6IG1vZGVybkVuYWJsZS5jaGVja2VkLnRvU3RyaW5nKCksXG4gICAgbGVnYWN5VGFyZ2V0OiBcIm1vZGVybi1lbmFibGVcIixcbiAgICBsZWdhY3lBY3Rpb246IG1vZGVybkVuYWJsZS5jaGVja2VkLnRvU3RyaW5nKCksXG4gICAgbGVnYWN5TGFiZWw6IFwiVGhlbWUgRWRpdG9yXCIsXG59KSk7XG52YXIgbW9kZXJuV3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kZXJuLXdyYXBwZXJcIik7XG52YXIgbW9kZXJuQm9yZGVyUmFkaXVzVmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGVybi1ib3JkZXItcmFkaXVzLXZhbHVlXCIpO1xudmFyIG1vZGVybkJvcmRlclNpemVWYWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kZXJuLWJvcmRlci1zaXplLXZhbHVlXCIpO1xudmFyIG1vZGVyblBhZGRpbmdWYWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kZXJuLXBhZGRpbmctdmFsdWVcIik7XG52YXIgcHJldmlld01vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmV2aWV3LW1vZGFsXCIpO1xudmFyIHNwbHVzTW9kYWxDbG9zZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3BsdXMtbW9kYWwtY2xvc2VcIik7XG5zcGx1c01vZGFsQ2xvc2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgcHJldmlld01vZGFsLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgcHJldmlld1BhZ2UuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcbiAgICAoMCwgYW5hbHl0aWNzXzEudHJhY2tFdmVudCkoXCJidXR0b25fY2xpY2tcIiwge1xuICAgICAgICBpZDogXCJjbG9zZS1wcmV2aWV3LW1vZGFsXCIsXG4gICAgICAgIGNvbnRleHQ6IFwiVGhlbWUgRWRpdG9yXCIsXG4gICAgICAgIGxlZ2FjeVRhcmdldDogXCJzcGx1cy1tb2RhbC1jbG9zZVwiLFxuICAgICAgICBsZWdhY3lBY3Rpb246IFwiY2xpY2tcIixcbiAgICAgICAgbGVnYWN5TGFiZWw6IFwiVGhlbWUgRWRpdG9yXCIsXG4gICAgfSk7XG59KTtcbnZhciBwcmV2aWV3U1BsdXNCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByZXZpZXctc3BsdXMtYnV0dG9uXCIpO1xucHJldmlld1NQbHVzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHByZXZpZXdNb2RhbC5jbGFzc0xpc3QudG9nZ2xlKFwiaGlkZGVuXCIpO1xuICAgIHByZXZpZXdQYWdlLmNsYXNzTGlzdC50b2dnbGUoXCJoaWRkZW5cIik7XG4gICAgKDAsIGFuYWx5dGljc18xLnRyYWNrRXZlbnQpKFwiYnV0dG9uX2NsaWNrXCIsIHtcbiAgICAgICAgaWQ6IFwicHJldmlldy1zcGx1cy1idXR0b25cIixcbiAgICAgICAgY29udGV4dDogXCJUaGVtZSBFZGl0b3JcIixcbiAgICAgICAgbGVnYWN5VGFyZ2V0OiBcInByZXZpZXctc3BsdXMtYnV0dG9uXCIsXG4gICAgICAgIGxlZ2FjeUFjdGlvbjogXCJjbGlja1wiLFxuICAgICAgICBsZWdhY3lMYWJlbDogXCJUaGVtZSBFZGl0b3JcIixcbiAgICB9KTtcbn0pO1xuY2xhc3MgVGhlbWVFZGl0b3JNb2RhbCB7XG4gICAgc3RhdGljIGdldCBFTEVNRU5UKCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbFwiKTtcbiAgICB9XG4gICAgc3RhdGljIGdldCBDT05URU5UX0NPTlRBSU5FUigpIHtcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kYWwtY29udGVudFwiKTtcbiAgICB9XG4gICAgc3RhdGljIGdldCBCVVRUT05TX0NPTlRBSU5FUigpIHtcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kYWwtYnV0dG9uc1wiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGlzcGxheXMgYSBtb2RhbCB3aXRoIHRoZSBnaXZlbiBjb250ZW50IGFuZCBidXR0b25zLCBjYWxsaW5nIGNhbGxiYWNrIG9uIGNsb3NlXG4gICAgICogQHBhcmFtIHtOb2RlfSBjb250ZW50IFRoZSBjb250ZW50IG9mIHRoZSBtb2RhbFxuICAgICAqIEBwYXJhbSB7c3RyaW5nW119IGJ1dHRvbnMgQnV0dG9ucyB0byBzaG93IGluIHRoZSBtb2RhbCBmb290ZXJcbiAgICAgKiBAcGFyYW0geyhidXR0b246c3RyaW5nKT0+dm9pZH0gY2FsbGJhY2sgQ2FsbGVkIG9uIGNsb3NlIHdpdGggdGhlIHNlbGVjdGVkIGJ1dHRvbiAob3IgYG51bGxgIGlmIG5vbmUgc2VsZWN0ZWQpXG4gICAgICovXG4gICAgc3RhdGljIG9wZW4oY29udGVudCwgYnV0dG9ucyA9IFtcIk9LXCJdLCBjYWxsYmFjaykge1xuICAgICAgICBUaGVtZUVkaXRvck1vZGFsLkNPTlRFTlRfQ09OVEFJTkVSLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgIFRoZW1lRWRpdG9yTW9kYWwuQlVUVE9OU19DT05UQUlORVIuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgdmFyIHNlbGVjdGVkID0gbnVsbDtcbiAgICAgICAgVGhlbWVFZGl0b3JNb2RhbC5DT05URU5UX0NPTlRBSU5FUi5hcHBlbmRDaGlsZChjb250ZW50KTtcbiAgICAgICAgZm9yIChsZXQgYiBvZiBidXR0b25zKSB7XG4gICAgICAgICAgICBUaGVtZUVkaXRvck1vZGFsLkJVVFRPTlNfQ09OVEFJTkVSLmFwcGVuZENoaWxkKCgwLCBkb21fMS5jcmVhdGVFbGVtZW50KShcImFcIiwgW1wibW9kYWwtY2xvc2VcIiwgXCJ3YXZlcy1lZmZlY3RcIiwgXCJ3YXZlcy1kYXJrXCIsIFwiYnRuLWZsYXRcIl0sIHtcbiAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogYixcbiAgICAgICAgICAgICAgICBvbmNsaWNrOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgKDAsIGFuYWx5dGljc18xLnRyYWNrRXZlbnQpKFwiYnV0dG9uX2NsaWNrXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcIm1vZGFsLWJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogXCJUaGVtZSBFZGl0b3JcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBiLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGVnYWN5VGFyZ2V0OiBcIk1vZGFsIEJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGVnYWN5QWN0aW9uOiBiLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGVnYWN5TGFiZWw6IFwiVGhlbWUgRWRpdG9yXCIsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IGI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgY29udHJvbGxlciA9IG1hdGVyaWFsaXplX2Nzc18xLmRlZmF1bHQuTW9kYWwuaW5pdChUaGVtZUVkaXRvck1vZGFsLkVMRU1FTlQsIHtcbiAgICAgICAgICAgIG9uQ2xvc2VFbmQ6ICgpID0+IGNhbGxiYWNrICYmIGNhbGxiYWNrKHNlbGVjdGVkKSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnRyb2xsZXIub3BlbigpO1xuICAgIH1cbn1cbmNsYXNzIFByb21wdE1vZGFsIHtcbiAgICAvKipcbiAgICAgKiBPcGVucyBhIG1vZGFsIHJlcXVlc3RpbmcgdXNlciBpbnB1dFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZSBUaGUgdGl0bGUgb2YgdGhlIG1vZGFsXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHBsYWNlaG9sZGVyIFRleHQgZGlzcGxheWVkIGFzIGEgcGxhY2Vob2xkZXIgaW4gdGhlIHRleHRib3hcbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBidXR0b25zIEJ1dHRvbnMgdG8gZGlzcGxheSBpbiB0aGUgbW9kYWwgZm9vdGVyXG4gICAgICogQHBhcmFtIHsoYnV0dG9uOnN0cmluZyx0ZXh0OnN0cmluZyk9PnZvaWR9IGNhbGxiYWNrIENhbGxlZCBvbiBjbG9zZSB3aXRoIHRoZSBzZWxlY3RlZCBidXR0b24gKG9yIGBudWxsYCBpZiBub25lIHNlbGVjdGVkKSBhbmQgdGhlIHRleHQgaW4gdGhlIHRleHRib3hcbiAgICAgKi9cbiAgICBzdGF0aWMgb3Blbih0aXRsZSwgcGxhY2Vob2xkZXIsIGJ1dHRvbnMsIGNhbGxiYWNrLCBjbGFzc05hbWUpIHtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBodG1sVG9FbGVtZW50KGBcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxoND4ke3RpdGxlfTwvaDQ+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZmllbGRcIj5cbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9XCJwcm9tcHQtbW9kYWwtdGV4dGFyZWFcIiBjbGFzcz1cIm1hdGVyaWFsaXplLXRleHRhcmVhICR7Y2xhc3NOYW1lfVwiPjwvdGV4dGFyZWE+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInByb21wdC1tb2RhbC10ZXh0YXJlYVwiPiR7cGxhY2Vob2xkZXJ9PC9sYWJlbD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgYCk7XG4gICAgICAgIFRoZW1lRWRpdG9yTW9kYWwub3Blbihjb250ZW50LCBidXR0b25zLCBidXR0b24gPT4gY2FsbGJhY2soYnV0dG9uLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb21wdC1tb2RhbC10ZXh0YXJlYVwiKS52YWx1ZSkpO1xuICAgIH1cbn1cbmNsYXNzIENvbmZpcm1Nb2RhbCB7XG4gICAgLyoqXG4gICAgICogT3BlbnMgYSBtb2RhbCByZXF1ZXN0aW5nIHVzZXIgY29uZmlybWF0aW9uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlIFRoZSB0aXRsZSBvZiB0aGUgbW9kYWxcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBJbmZvcm1hdGl2ZSB0ZXh0IGRldGFpbGluZyB0aGUgcXVlc3Rpb25cbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBidXR0b25zIEJ1dHRvbnMgdG8gZGlzcGxheSBpbiB0aGUgbW9kYWwgZm9vdGVyXG4gICAgICogQHBhcmFtIHsoYnV0dG9uOnN0cmluZyk9PnZvaWR9IGNhbGxiYWNrIENhbGxlZCBvbiBjbG9zZSB3aXRoIHRoZSBzZWxlY3RlZCBidXR0b24gKG9yIGBudWxsYCBpZiBub25lIHNlbGVjdGVkKVxuICAgICAqL1xuICAgIHN0YXRpYyBvcGVuKHRpdGxlLCB0ZXh0LCBidXR0b25zLCBjYWxsYmFjaykge1xuICAgICAgICBsZXQgY29udGVudCA9IGh0bWxUb0VsZW1lbnQoYFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGg0PiR7dGl0bGV9PC9oND5cbiAgICAgICAgICAgIDxwPiR7dGV4dH08L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICBgKTtcbiAgICAgICAgVGhlbWVFZGl0b3JNb2RhbC5vcGVuKGNvbnRlbnQsIGJ1dHRvbnMsIGNhbGxiYWNrKTtcbiAgICB9XG59XG5jbGFzcyBTZXR0aW5nc01vZGFsIHtcbiAgICAvKipcbiAgICAgKiBPcGVucyB0aGUgc2V0dGluZ3MgbW9kYWxcbiAgICAgKi9cbiAgICBzdGF0aWMgb3BlbigpIHtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBodG1sVG9FbGVtZW50KGBcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxoND5TZXR0aW5nczwvaDQ+XG4gICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICBOb3RoaW5nIHRvIHNlZSBoZXJlIHlldCEgVGhlbWUgZWRpdG9yIHNldHRpbmdzIGNvbWluZyBzb29uJnRyYWRlOy5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIGApO1xuICAgICAgICBUaGVtZUVkaXRvck1vZGFsLm9wZW4oY29udGVudCwgW1wiQ2FuY2VsXCIsIFwiU2F2ZVwiXSwgYnV0dG9uID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAoYnV0dG9uKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcIlNhdmVcIjpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcIkNhbmNlbFwiOlxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG52YXIgb3JpZ1RoZW1lTmFtZSA9IHVuZGVmaW5lZDtcbmxldCB3YXJuaW5ncyA9IFtdO1xubGV0IGVycm9ycyA9IFtdO1xubGV0IHRoZW1lID0gbnVsbDtcbnZhciBvdXRwdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImpzb24tb3V0cHV0XCIpO1xub3V0cHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCBpbXBvcnRUaGVtZUZyb21PdXRwdXQpO1xub3V0cHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJwYXN0ZVwiLCBlID0+IHtcbiAgICBpZiAoaW5FZGl0TW9kZSgpKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgbGV0IHQgPSBlLmNsaXBib2FyZERhdGEuZ2V0RGF0YShcInRleHRcIik7XG4gICAgICAgIG91dHB1dC52YWx1ZSA9IHQ7XG4gICAgICAgIGltcG9ydFRoZW1lRnJvbU91dHB1dCgpO1xuICAgIH1cbn0pO1xuZm9yIChsZXQgZSBvZiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3RoZW1lLWVkaXRvci1zZWN0aW9uIGlucHV0XCIpKSB7XG4gICAgZS5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHVwZGF0ZU91dHB1dCgpO1xuICAgIH0pO1xufVxudmFyIG1UYWJzID0gbWF0ZXJpYWxpemVfY3NzXzEuZGVmYXVsdC5UYWJzLmluaXQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YWJzXCIpLCB7XG4gICAgb25TaG93OiBmdW5jdGlvbiAobmV3dGFiKSB7XG4gICAgICAgIGlmIChuZXd0YWIuaWQgPT0gXCJ0YWItcHJldmlld1wiKSB7XG4gICAgICAgICAgICBwcmV2aWV3U2VjdGlvbi5jbGFzc0xpc3QuYWRkKFwiZml4ZWQtb24tbGFyZ2UtYW5kLXVwXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHJldmlld1NlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZShcImZpeGVkLW9uLWxhcmdlLWFuZC11cFwiKTtcbiAgICAgICAgfVxuICAgIH0sXG59KTtcbnZhciBlbGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZHJvcGRvd24tdHJpZ2dlclwiKTtcbnZhciBpbnN0YW5jZXMgPSBtYXRlcmlhbGl6ZV9jc3NfMS5kZWZhdWx0LkRyb3Bkb3duLmluaXQoZWxlbXMsIHsgY29uc3RyYWluV2lkdGg6IGZhbHNlIH0pO1xuLyoqXG4gKiBSZXR1cm5zIGEgbGlzdCBvZiBlcnJvcnMgZm9yIHRoZSBnaXZlbiB0aGVtZVxuICogQHBhcmFtIHsqfSBqIFRoZW1lIEpTT04gb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlRXJyb3JzKGopIHtcbiAgICBsZXQgdyA9IFtdO1xuICAgIHN3aXRjaCAoai52ZXJzaW9uKSB7XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIGlmICghai5uYW1lKVxuICAgICAgICAgICAgICAgIHcucHVzaChcIlRoZW1lIG11c3QgaGF2ZSBhIG5hbWVcIik7XG4gICAgICAgICAgICBpZiAoIWouY29sb3IpXG4gICAgICAgICAgICAgICAgdy5wdXNoKFwiVGhlbWUgbXVzdCBoYXZlIGEgY29sb3Igb2JqZWN0XCIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiB3O1xufVxuLyoqXG4gKiBMb2FkcyBhIHRoZW1lIGZyb20gdGhlIEpTT04gdGV4dCBkaXNwbGF5ZWQgaW4gdGhlIG91dHB1dCB0ZXh0YXJlYSBlbGVtZW50XG4gKi9cbmZ1bmN0aW9uIGltcG9ydFRoZW1lRnJvbU91dHB1dCgpIHtcbiAgICBpbXBvcnRBbmRSZW5kZXIocGFyc2VKU09OT2JqZWN0KG91dHB1dC52YWx1ZSkpO1xufVxuLyoqXG4gKiBMb2FkcyBhIHRoZW1lIGZyb20gYW4gb2JqZWN0IGFuZCByZW5kZXJzIGl0XG4gKiBAcGFyYW0geyp9IG9iamVjdCBKU09OIG9iamVjdCByZXByZXNlbnRhdGlvbiBvZiBhIHRoZW1lXG4gKi9cbmZ1bmN0aW9uIGltcG9ydEFuZFJlbmRlcihvYmplY3QpIHtcbiAgICBlcnJvcnMgPSBbXTtcbiAgICB3YXJuaW5ncyA9IFtdO1xuICAgIHJlbmRlclRoZW1lKGltcG9ydFRoZW1lRnJvbU9iamVjdChvYmplY3QpKTtcbn1cbi8qKlxuICogTWlncmF0ZXMgYSB0aGVtZSB0byB0aGUgbmV3ZXN0IHZlcnNpb24gb2YgdGhlIHRoZW1lIHNwZWNpZmljYXRpb25cbiAqIEBwYXJhbSB7Kn0gdCBUaGVtZSBKU09OIG9iamVjdFxuICovXG5mdW5jdGlvbiBtaWdyYXRlVGhlbWUodCkge1xuICAgIHN3aXRjaCAodC52ZXJzaW9uKSB7XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgZXJyb3JzLnB1c2goXCJUaGUgdGhlbWUgdmVyc2lvbiBpcyBub3Qgc3VwcG9ydGVkXCIpO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHRoZW1lIHZlcnNpb24gaXMgbm90IHN1cHBvcnRlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHQudmVyc2lvbiA9PSBDVVJSRU5UX1ZFUlNJT04gPyB0IDogbWlncmF0ZVRoZW1lKHQpO1xufVxuLyoqXG4gKiBGaWxscyBvdXQgZm9ybSBlbGVtZW50cyB3aXRoIHRoZSBkYXRhIGNvbnRhaW5lZCBpbiB0aGUgcHJvdmlkZWQgVGhlbWUgb2JqZWN0XG4gKiBAcGFyYW0ge1NjaG9vbG9neVRoZW1lVjJ9IGogQSBTY2hvb2xvZ3lQbHVzIHRoZW1lIG9iamVjdFxuICovXG5mdW5jdGlvbiBpbXBvcnRUaGVtZUZyb21PYmplY3Qoaikge1xuICAgIGlmICghaikge1xuICAgICAgICBlcnJvcnMucHVzaChcIlRoZSBKU09OIHlvdSBoYXZlIGVudGVyZWQgaXMgbm90IHZhbGlkXCIpO1xuICAgICAgICB1cGRhdGVQcmV2aWV3KGZhbHNlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBlcnJvcnMgPSBnZW5lcmF0ZUVycm9ycyhqKTtcbiAgICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdXBkYXRlUHJldmlldyhmYWxzZSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IG1pZ3JhdGVkVGhlbWUgPSBtaWdyYXRlVGhlbWUoaik7XG4gICAgcmV0dXJuIHRoZW1lX21vZGVsXzEuU2Nob29sb2d5VGhlbWUubG9hZEZyb21PYmplY3QobWlncmF0ZWRUaGVtZSk7XG59XG4vKipcbiAqIFVwZGF0ZXMgZm9ybSBlbGVtZW50cyB3aXRoIHZhbHVlcyBmcm9tIHRoZSBwcm92aWRlZCB0aGVtZVxuICogQHBhcmFtIHtTY2hvb2xvZ3lUaGVtZX0gdCBUaGUgdGhlbWUgdG8gcmVuZGVyXG4gKi9cbmZ1bmN0aW9uIHJlbmRlclRoZW1lKHQpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaiwgX2ssIF9sLCBfbSwgX28sIF9wLCBfcSwgX3IsIF9zLCBfdCwgX3UsIF92LCBfdywgX3gsIF95LCBfeiwgXzAsIF8xO1xuICAgIGlmICghdCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoZW1lTmFtZS52YWx1ZSA9IHQubmFtZTtcbiAgICB0aGVtZUxvZ28udmFsdWUgPSBcIlwiO1xuICAgIHN3aXRjaCAoKF9hID0gdC5sb2dvKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucHJlc2V0KSB7XG4gICAgICAgIGNhc2UgXCJzY2hvb2xvZ3lfcGx1c1wiOlxuICAgICAgICAgICAgdGhlbWVTY2hvb2xvZ3lQbHVzTG9nby5jbGljaygpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJzY2hvb2xvZ3lfbG9nb1wiOlxuICAgICAgICAgICAgdGhlbWVTY2hvb2xvZ3lMb2dvLmNsaWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImxhdXNkX2xlZ2FjeVwiOlxuICAgICAgICAgICAgdGhlbWVMQVVTRExvZ28uY2xpY2soKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwibGF1c2RfMjAxOVwiOlxuICAgICAgICAgICAgdGhlbWVOZXdMQVVTRExvZ28uY2xpY2soKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwibGF1c2RfMjAyMlwiOlxuICAgICAgICAgICAgdGhlbWVMQVVTRExvZ28yMDIyLmNsaWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImRlZmF1bHRcIjpcbiAgICAgICAgICAgIHRoZW1lRGVmYXVsdExvZ28uY2xpY2soKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhlbWVMb2dvLnZhbHVlID0gKF9jID0gKF9iID0gdC5sb2dvKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudXJsKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBcIlwiO1xuICAgICAgICAgICAgdGhlbWVDdXN0b21Mb2dvLmNsaWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG4gICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKHRoZW1lSHVlKS5zbGlkZXIoXCJ2YWx1ZVwiLCB0LmNvbG9yLmh1ZSB8fCAyMDApO1xuICAgIGNvbG9yUmFpbmJvd0h1ZUFuaW1hdGUuY2hlY2tlZCA9IGZhbHNlO1xuICAgIGNvbG9yUmFpbmJvd0h1ZVNwZWVkLnZhbHVlID0gXCI1MFwiO1xuICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KShjb2xvclJhaW5ib3dIdWVSYW5nZSkucm91bmRTbGlkZXIoXCJzZXRWYWx1ZVwiLCBcIjAsMzU5XCIpO1xuICAgIGNvbG9yUmFpbmJvd0h1ZUFsdGVybmF0ZS5jaGVja2VkID0gZmFsc2U7XG4gICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGNvbG9yUmFpbmJvd0h1ZVZhbHVlKS5zbGlkZXIoXCJ2YWx1ZVwiLCAxODApO1xuICAgIGNvbG9yUmFpbmJvd1NhdHVyYXRpb25BbmltYXRlLmNoZWNrZWQgPSBmYWxzZTtcbiAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uU3BlZWQudmFsdWUgPSBcIjUwXCI7XG4gICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGNvbG9yUmFpbmJvd1NhdHVyYXRpb25SYW5nZSkuc2xpZGVyKFwidmFsdWVzXCIsIFswLCAxMDBdKTtcbiAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uQWx0ZXJuYXRlLmNoZWNrZWQgPSBmYWxzZTtcbiAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uVmFsdWUudmFsdWUgPSBcIjUwXCI7XG4gICAgY29sb3JSYWluYm93TGlnaHRuZXNzQW5pbWF0ZS5jaGVja2VkID0gZmFsc2U7XG4gICAgY29sb3JSYWluYm93TGlnaHRuZXNzU3BlZWQudmFsdWUgPSBcIjUwXCI7XG4gICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGNvbG9yUmFpbmJvd0xpZ2h0bmVzc1JhbmdlKS5zbGlkZXIoXCJ2YWx1ZXNcIiwgWzAsIDEwMF0pO1xuICAgIGNvbG9yUmFpbmJvd0xpZ2h0bmVzc0FsdGVybmF0ZS5jaGVja2VkID0gZmFsc2U7XG4gICAgY29sb3JSYWluYm93TGlnaHRuZXNzVmFsdWUudmFsdWUgPSBcIjUwXCI7XG4gICAgaWYgKHQuY29sb3IuaHVlIHx8IHQuY29sb3IuaHVlID09PSAwKSB7XG4gICAgICAgIHRoZW1lQ29sb3JIdWUuY2xpY2soKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodC5jb2xvci5jdXN0b20pIHtcbiAgICAgICAgbGV0IG1hcCA9IHtcbiAgICAgICAgICAgIFwiI3RoZW1lLXByaW1hcnktY29sb3JcIjogXCJwcmltYXJ5XCIsXG4gICAgICAgICAgICBcIiN0aGVtZS1iYWNrZ3JvdW5kLWNvbG9yXCI6IFwiYmFja2dyb3VuZFwiLFxuICAgICAgICAgICAgXCIjdGhlbWUtc2Vjb25kYXJ5LWNvbG9yXCI6IFwiaG92ZXJcIixcbiAgICAgICAgICAgIFwiI3RoZW1lLWJvcmRlci1jb2xvclwiOiBcImJvcmRlclwiLFxuICAgICAgICAgICAgXCIjdGhlbWUtbGluay1jb2xvclwiOiBcImxpbmtcIixcbiAgICAgICAgfTtcbiAgICAgICAgT2JqZWN0LmtleXMobWFwKS5tYXAoeCA9PiAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoeCkuc3BlY3RydW0oXCJzZXRcIiwgdC5jb2xvci5jdXN0b21bbWFwW3hdXSkpO1xuICAgICAgICB0aGVtZUNvbG9yQ3VzdG9tLmNsaWNrKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHQuY29sb3IucmFpbmJvdykge1xuICAgICAgICB0aGVtZUNvbG9yUmFpbmJvdy5jbGljaygpO1xuICAgICAgICBpZiAoISEoKF9kID0gdC5jb2xvci5yYWluYm93Lmh1ZSkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmFuaW1hdGUpICE9PSBjb2xvclJhaW5ib3dIdWVBbmltYXRlLmNoZWNrZWQpIHtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0h1ZUFuaW1hdGUuY2xpY2soKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKF9lID0gdC5jb2xvci5yYWluYm93Lmh1ZSkgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLmFuaW1hdGUpIHtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0h1ZVNwZWVkLnZhbHVlID0gdC5jb2xvci5yYWluYm93Lmh1ZS5hbmltYXRlLnNwZWVkLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoY29sb3JSYWluYm93SHVlVmFsdWUpLnNsaWRlcihcInZhbHVlXCIsIHQuY29sb3IucmFpbmJvdy5odWUuYW5pbWF0ZS5vZmZzZXQpO1xuICAgICAgICAgICAgaWYgKCEhdC5jb2xvci5yYWluYm93Lmh1ZS5hbmltYXRlLmFsdGVybmF0ZSAhPT0gY29sb3JSYWluYm93SHVlQWx0ZXJuYXRlLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICBjb2xvclJhaW5ib3dIdWVBbHRlcm5hdGUuY2xpY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBsID0gdC5jb2xvci5yYWluYm93Lmh1ZS5hbmltYXRlLm1pbiB8fFxuICAgICAgICAgICAgICAgICgwICYmXG4gICAgICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5odWUuYW5pbWF0ZS5taW4gPj0gMCAmJlxuICAgICAgICAgICAgICAgICAgICB0LmNvbG9yLnJhaW5ib3cuaHVlLmFuaW1hdGUubWluIDw9IDM1OSlcbiAgICAgICAgICAgICAgICA/IHQuY29sb3IucmFpbmJvdy5odWUuYW5pbWF0ZS5taW5cbiAgICAgICAgICAgICAgICA6IDA7XG4gICAgICAgICAgICBsZXQgdSA9IHQuY29sb3IucmFpbmJvdy5odWUuYW5pbWF0ZS5tYXggJiZcbiAgICAgICAgICAgICAgICB0LmNvbG9yLnJhaW5ib3cuaHVlLmFuaW1hdGUubWF4ID49IDAgJiZcbiAgICAgICAgICAgICAgICB0LmNvbG9yLnJhaW5ib3cuaHVlLmFuaW1hdGUubWF4IDw9IDM1OVxuICAgICAgICAgICAgICAgID8gdC5jb2xvci5yYWluYm93Lmh1ZS5hbmltYXRlLm1heFxuICAgICAgICAgICAgICAgIDogMzU5O1xuICAgICAgICAgICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGNvbG9yUmFpbmJvd0h1ZVJhbmdlKS5yb3VuZFNsaWRlcihcInNldFZhbHVlXCIsIGAke2x9LCR7dX1gKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KShjb2xvclJhaW5ib3dIdWVWYWx1ZSkuc2xpZGVyKFwidmFsdWVcIiwgKF9nID0gKF9mID0gdC5jb2xvci5yYWluYm93Lmh1ZSkgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLnZhbHVlKSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISEoKF9oID0gdC5jb2xvci5yYWluYm93LnNhdHVyYXRpb24pID09PSBudWxsIHx8IF9oID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfaC5hbmltYXRlKSAhPT0gY29sb3JSYWluYm93U2F0dXJhdGlvbkFuaW1hdGUuY2hlY2tlZCkge1xuICAgICAgICAgICAgY29sb3JSYWluYm93U2F0dXJhdGlvbkFuaW1hdGUuY2xpY2soKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKF9qID0gdC5jb2xvci5yYWluYm93LnNhdHVyYXRpb24pID09PSBudWxsIHx8IF9qID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfai5hbmltYXRlKSB7XG4gICAgICAgICAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uU3BlZWQudmFsdWUgPSB0LmNvbG9yLnJhaW5ib3cuc2F0dXJhdGlvbi5hbmltYXRlLnNwZWVkLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uVmFsdWUudmFsdWUgPVxuICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5zYXR1cmF0aW9uLmFuaW1hdGUub2Zmc2V0LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBpZiAoISF0LmNvbG9yLnJhaW5ib3cuc2F0dXJhdGlvbi5hbmltYXRlLmFsdGVybmF0ZSAhPT1cbiAgICAgICAgICAgICAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uQWx0ZXJuYXRlLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uQWx0ZXJuYXRlLmNsaWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoY29sb3JSYWluYm93U2F0dXJhdGlvblJhbmdlKS5zbGlkZXIoXCJ2YWx1ZXNcIiwgW1xuICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5zYXR1cmF0aW9uLmFuaW1hdGUubWluICYmXG4gICAgICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5zYXR1cmF0aW9uLmFuaW1hdGUubWluIDwgdC5jb2xvci5yYWluYm93LnNhdHVyYXRpb24uYW5pbWF0ZS5tYXggJiZcbiAgICAgICAgICAgICAgICAgICAgdC5jb2xvci5yYWluYm93LnNhdHVyYXRpb24uYW5pbWF0ZS5taW4gPj0gMCAmJlxuICAgICAgICAgICAgICAgICAgICB0LmNvbG9yLnJhaW5ib3cuc2F0dXJhdGlvbi5hbmltYXRlLm1pbiA8PSAxMDBcbiAgICAgICAgICAgICAgICAgICAgPyB0LmNvbG9yLnJhaW5ib3cuc2F0dXJhdGlvbi5hbmltYXRlLm1pblxuICAgICAgICAgICAgICAgICAgICA6IDAsXG4gICAgICAgICAgICAgICAgdC5jb2xvci5yYWluYm93LnNhdHVyYXRpb24uYW5pbWF0ZS5tYXggJiZcbiAgICAgICAgICAgICAgICAgICAgdC5jb2xvci5yYWluYm93LnNhdHVyYXRpb24uYW5pbWF0ZS5tYXggPiB0LmNvbG9yLnJhaW5ib3cuc2F0dXJhdGlvbi5hbmltYXRlLm1pbiAmJlxuICAgICAgICAgICAgICAgICAgICB0LmNvbG9yLnJhaW5ib3cuc2F0dXJhdGlvbi5hbmltYXRlLm1heCA+PSAwICYmXG4gICAgICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5zYXR1cmF0aW9uLmFuaW1hdGUubWF4IDw9IDEwMFxuICAgICAgICAgICAgICAgICAgICA/IHQuY29sb3IucmFpbmJvdy5zYXR1cmF0aW9uLmFuaW1hdGUubWF4XG4gICAgICAgICAgICAgICAgICAgIDogMTAwLFxuICAgICAgICAgICAgXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb2xvclJhaW5ib3dTYXR1cmF0aW9uVmFsdWUudmFsdWUgPVxuICAgICAgICAgICAgICAgIChfbSA9IChfbCA9IChfayA9IHQuY29sb3IucmFpbmJvdy5zYXR1cmF0aW9uKSA9PT0gbnVsbCB8fCBfayA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2sudmFsdWUpID09PSBudWxsIHx8IF9sID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbC50b1N0cmluZygpKSAhPT0gbnVsbCAmJiBfbSAhPT0gdm9pZCAwID8gX20gOiBcIjBcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISEoKF9vID0gdC5jb2xvci5yYWluYm93LmxpZ2h0bmVzcykgPT09IG51bGwgfHwgX28gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vLmFuaW1hdGUpICE9PSBjb2xvclJhaW5ib3dMaWdodG5lc3NBbmltYXRlLmNoZWNrZWQpIHtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0xpZ2h0bmVzc0FuaW1hdGUuY2xpY2soKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKF9wID0gdC5jb2xvci5yYWluYm93LmxpZ2h0bmVzcykgPT09IG51bGwgfHwgX3AgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wLmFuaW1hdGUpIHtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0xpZ2h0bmVzc1NwZWVkLnZhbHVlID0gdC5jb2xvci5yYWluYm93LmxpZ2h0bmVzcy5hbmltYXRlLnNwZWVkLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBjb2xvclJhaW5ib3dMaWdodG5lc3NWYWx1ZS52YWx1ZSA9IHQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5vZmZzZXQudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGlmICghIXQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5hbHRlcm5hdGUgIT09XG4gICAgICAgICAgICAgICAgY29sb3JSYWluYm93TGlnaHRuZXNzQWx0ZXJuYXRlLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICBjb2xvclJhaW5ib3dMaWdodG5lc3NBbHRlcm5hdGUuY2xpY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KShjb2xvclJhaW5ib3dMaWdodG5lc3NSYW5nZSkuc2xpZGVyKFwidmFsdWVzXCIsIFtcbiAgICAgICAgICAgICAgICB0LmNvbG9yLnJhaW5ib3cubGlnaHRuZXNzLmFuaW1hdGUubWluICYmXG4gICAgICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5taW4gPCB0LmNvbG9yLnJhaW5ib3cubGlnaHRuZXNzLmFuaW1hdGUubWF4ICYmXG4gICAgICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5taW4gPj0gMCAmJlxuICAgICAgICAgICAgICAgICAgICB0LmNvbG9yLnJhaW5ib3cubGlnaHRuZXNzLmFuaW1hdGUubWluIDw9IDEwMFxuICAgICAgICAgICAgICAgICAgICA/IHQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5taW5cbiAgICAgICAgICAgICAgICAgICAgOiAwLFxuICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5tYXggJiZcbiAgICAgICAgICAgICAgICAgICAgdC5jb2xvci5yYWluYm93LmxpZ2h0bmVzcy5hbmltYXRlLm1heCA+IHQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5taW4gJiZcbiAgICAgICAgICAgICAgICAgICAgdC5jb2xvci5yYWluYm93LmxpZ2h0bmVzcy5hbmltYXRlLm1heCA+PSAwICYmXG4gICAgICAgICAgICAgICAgICAgIHQuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZS5tYXggPD0gMTAwXG4gICAgICAgICAgICAgICAgICAgID8gdC5jb2xvci5yYWluYm93LmxpZ2h0bmVzcy5hbmltYXRlLm1heFxuICAgICAgICAgICAgICAgICAgICA6IDEwMCxcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29sb3JSYWluYm93TGlnaHRuZXNzVmFsdWUudmFsdWUgPSAoX3MgPSAoX3IgPSAoX3EgPSB0LmNvbG9yLnJhaW5ib3cubGlnaHRuZXNzKSA9PT0gbnVsbCB8fCBfcSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3EudmFsdWUpID09PSBudWxsIHx8IF9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfci50b1N0cmluZygpKSAhPT0gbnVsbCAmJiBfcyAhPT0gdm9pZCAwID8gX3MgOiBcIjBcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodC5jb2xvci5tb2Rlcm4pIHtcbiAgICAgICAgbW9kZXJuRW5hYmxlLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICBPYmplY3Qua2V5cyhtb2Rlcm5Db2xvck1hcCkubWFwKHggPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgbGV0IG1vZGVybk9wdGlvbiA9IHQuY29sb3IubW9kZXJuW21vZGVybkNvbG9yTWFwW3hdWzBdXTtcbiAgICAgICAgICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KSh4KS5zcGVjdHJ1bShcInNldFwiLCAoX2EgPSBtb2Rlcm5PcHRpb24gPT09IG51bGwgfHwgbW9kZXJuT3B0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtb2Rlcm5PcHRpb25bbW9kZXJuQ29sb3JNYXBbeF1bMV1dKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIiMwMERFQURcIik7XG4gICAgICAgIH0pO1xuICAgICAgICBtb2Rlcm5Cb3JkZXJSYWRpdXNWYWx1ZS52YWx1ZSA9IChfdiA9IChfdSA9IChfdCA9IHQuY29sb3IubW9kZXJuLm9wdGlvbnMpID09PSBudWxsIHx8IF90ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdC5ib3JkZXJSYWRpdXMpID09PSBudWxsIHx8IF91ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdS50b1N0cmluZygpKSAhPT0gbnVsbCAmJiBfdiAhPT0gdm9pZCAwID8gX3YgOiBcIjVcIjtcbiAgICAgICAgbW9kZXJuQm9yZGVyU2l6ZVZhbHVlLnZhbHVlID0gKF95ID0gKF94ID0gKF93ID0gdC5jb2xvci5tb2Rlcm4ub3B0aW9ucykgPT09IG51bGwgfHwgX3cgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF93LmJvcmRlclNpemUpID09PSBudWxsIHx8IF94ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfeC50b1N0cmluZygpKSAhPT0gbnVsbCAmJiBfeSAhPT0gdm9pZCAwID8gX3kgOiBcIjFcIjtcbiAgICAgICAgbW9kZXJuUGFkZGluZ1ZhbHVlLnZhbHVlID0gKF8xID0gKF8wID0gKF96ID0gdC5jb2xvci5tb2Rlcm4ub3B0aW9ucykgPT09IG51bGwgfHwgX3ogPT09IHZvaWQgMCA/IHZvaWQgMCA6IF96LnBhZGRpbmcpID09PSBudWxsIHx8IF8wID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfMC50b1N0cmluZygpKSAhPT0gbnVsbCAmJiBfMSAhPT0gdm9pZCAwID8gXzEgOiBcIjVcIjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG1vZGVybkVuYWJsZS5jaGVja2VkID0gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGVsIG9mIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFt0eXBlPXJhbmdlXVtkYXRhLWxhYmVsXVwiKSkge1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbC5kYXRhc2V0LmxhYmVsKS50ZXh0Q29udGVudCA9IGVsLnZhbHVlO1xuICAgIH1cbiAgICBmb3IgKGxldCBlbCBvZiBbY29sb3JSYWluYm93U2F0dXJhdGlvblJhbmdlLCBjb2xvclJhaW5ib3dMaWdodG5lc3NSYW5nZV0pIHtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWwuaWQgKyBcIi1kaXNwbGF5XCIpLnRleHRDb250ZW50ID0gYCR7KDAsIGpxdWVyeV8xLmRlZmF1bHQpKGVsKS5zbGlkZXIoXCJ2YWx1ZXNcIilbMF19IC0gJHsoMCwganF1ZXJ5XzEuZGVmYXVsdCkoZWwpLnNsaWRlcihcInZhbHVlc1wiKVsxXX1gO1xuICAgIH1cbiAgICBpY29uTGlzdC5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGlmICh0Lmljb25zKSB7XG4gICAgICAgIGZvciAobGV0IGkgb2YgdC5pY29ucykge1xuICAgICAgICAgICAgbGV0IHJvdyA9IGFkZEljb24oKTtcbiAgICAgICAgICAgIHJvdy5xdWVyeVNlbGVjdG9yKFwiLmNsYXNzLW5hbWVcIikudGV4dENvbnRlbnQgPSBpLnJlZ2V4LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICByb3cucXVlcnlTZWxlY3RvcihcIi5pY29uLXVybFwiKS50ZXh0Q29udGVudCA9IGkudXJsO1xuICAgICAgICAgICAgcm93LnF1ZXJ5U2VsZWN0b3IoXCIuc21hbGwtaWNvbi1wcmV2aWV3XCIpLnNyYyA9IGkudXJsO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRoZW1lQ3Vyc29yLnZhbHVlID0gXCJcIjtcbiAgICBpZiAodC5jdXJzb3IgJiYgdC5jdXJzb3IucHJpbWFyeSkge1xuICAgICAgICB0aGVtZUN1cnNvci52YWx1ZSA9IHQuY3Vyc29yLnByaW1hcnk7XG4gICAgfVxuICAgIG1hdGVyaWFsaXplX2Nzc18xLmRlZmF1bHQudXBkYXRlVGV4dEZpZWxkcygpO1xuICAgIHVwZGF0ZU91dHB1dCgpO1xufVxubGV0IGluaXQgPSAwO1xuLyoqXG4gKiBDcmVhdGVzIGEgU3BlY3RydW0uanMgY29sb3IgcGlja2VyXG4gKiBAcGFyYW0ge3N0cmluZ30gaWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZWxlbWVudFxuICogQHBhcmFtIHsodGlueWNvbG9yKT0+dm9pZH0gb251cGRhdGUgQ2FsbGJhY2sgY2FsbGVkIHdoZW4gY29sb3IgaXMgY2hhbmdlZFxuICovXG5mdW5jdGlvbiBpbml0UGlja2VyKGlkLCBjb2xvciwgb251cGRhdGUgPSB1cGRhdGVPdXRwdXQsIHNob3dBbHBoYSA9IGZhbHNlKSB7XG4gICAgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGAjJHtpZH1gKS5zcGVjdHJ1bSh7XG4gICAgICAgIHNob3dJbnB1dDogdHJ1ZSxcbiAgICAgICAgY29udGFpbmVyQ2xhc3NOYW1lOiBcImZ1bGwtc3BlY3RydW1cIixcbiAgICAgICAgc2hvd0luaXRpYWw6IHRydWUsXG4gICAgICAgIHNob3dQYWxldHRlOiB0cnVlLFxuICAgICAgICBzaG93U2VsZWN0aW9uUGFsZXR0ZTogdHJ1ZSxcbiAgICAgICAgbWF4UGFsZXR0ZVNpemU6IDEwLFxuICAgICAgICBwcmVmZXJyZWRGb3JtYXQ6IFwiaGV4XCIsXG4gICAgICAgIHNob3dBbHBoYTogc2hvd0FscGhhLFxuICAgICAgICBjb2xvcjogY29sb3IgfHwgW1wicmVkXCIsIFwiYmx1ZVwiLCBcInllbGxvd1wiLCBcImdyZWVuXCIsIFwibWFnZW50YVwiXVtpbml0KysgJSA1XSxcbiAgICAgICAgbW92ZTogZnVuY3Rpb24gKGNvbG9yKSB7XG4gICAgICAgICAgICBvbnVwZGF0ZShjb2xvcik7XG4gICAgICAgIH0sXG4gICAgICAgIGhpZGU6IGZ1bmN0aW9uIChjb2xvcikge1xuICAgICAgICAgICAgb251cGRhdGUoY29sb3IpO1xuICAgICAgICB9LFxuICAgICAgICBwYWxldHRlOiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgXCJyZ2IoMCwgMCwgMClcIixcbiAgICAgICAgICAgICAgICBcInJnYig2NywgNjcsIDY3KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDEwMiwgMTAyLCAxMDIpXCIgLypcInJnYigxNTMsIDE1MywgMTUzKVwiLFwicmdiKDE4MywgMTgzLCAxODMpXCIsKi8sXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjA0LCAyMDQsIDIwNClcIixcbiAgICAgICAgICAgICAgICBcInJnYigyMTcsIDIxNywgMjE3KVwiLFxuICAgICAgICAgICAgICAgIC8qXCJyZ2IoMjM5LCAyMzksIDIzOSlcIiwgXCJyZ2IoMjQzLCAyNDMsIDI0MylcIiwqLyBcInJnYigyNTUsIDI1NSwgMjU1KVwiLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBcInJnYigxNTIsIDAsIDApXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjU1LCAwLCAwKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDI1NSwgMTUzLCAwKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDI1NSwgMjU1LCAwKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDAsIDI1NSwgMClcIixcbiAgICAgICAgICAgICAgICBcInJnYigwLCAyNTUsIDI1NSlcIixcbiAgICAgICAgICAgICAgICBcInJnYig3NCwgMTM0LCAyMzIpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMCwgMCwgMjU1KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDE1MywgMCwgMjU1KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDI1NSwgMCwgMjU1KVwiLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBcInJnYigyMzAsIDE4NCwgMTc1KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDI0NCwgMjA0LCAyMDQpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjUyLCAyMjksIDIwNSlcIixcbiAgICAgICAgICAgICAgICBcInJnYigyNTUsIDI0MiwgMjA0KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDIxNywgMjM0LCAyMTEpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjA4LCAyMjQsIDIyNylcIixcbiAgICAgICAgICAgICAgICBcInJnYigyMDEsIDIxOCwgMjQ4KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDIwNywgMjI2LCAyNDMpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjE3LCAyMTAsIDIzMylcIixcbiAgICAgICAgICAgICAgICBcInJnYigyMzQsIDIwOSwgMjIwKVwiLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBcInJnYigyMjEsIDEyNiwgMTA3KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDIzNCwgMTUzLCAxNTMpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjQ5LCAyMDMsIDE1NilcIixcbiAgICAgICAgICAgICAgICBcInJnYigyNTUsIDIyOSwgMTUzKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDE4MiwgMjE1LCAxNjgpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTYyLCAxOTYsIDIwMSlcIixcbiAgICAgICAgICAgICAgICBcInJnYigxNjQsIDE5NCwgMjQ0KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDE1OSwgMTk3LCAyMzIpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTgwLCAxNjcsIDIxNClcIixcbiAgICAgICAgICAgICAgICBcInJnYigyMTMsIDE2NiwgMTg5KVwiLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBcInJnYigyMDQsIDY1LCAzNylcIixcbiAgICAgICAgICAgICAgICBcInJnYigyMjQsIDEwMiwgMTAyKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDI0NiwgMTc4LCAxMDcpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjU1LCAyMTcsIDEwMilcIixcbiAgICAgICAgICAgICAgICBcInJnYigxNDcsIDE5NiwgMTI1KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDExOCwgMTY1LCAxNzUpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTA5LCAxNTgsIDIzNSlcIixcbiAgICAgICAgICAgICAgICBcInJnYigxMTEsIDE2OCwgMjIwKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDE0MiwgMTI0LCAxOTUpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTk0LCAxMjMsIDE2MClcIixcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTY2LCAyOCwgMClcIixcbiAgICAgICAgICAgICAgICBcInJnYigyMDQsIDAsIDApXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMjMwLCAxNDUsIDU2KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDI0MSwgMTk0LCA1MClcIixcbiAgICAgICAgICAgICAgICBcInJnYigxMDYsIDE2OCwgNzkpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoNjksIDEyOSwgMTQyKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDYwLCAxMjAsIDIxNilcIixcbiAgICAgICAgICAgICAgICBcInJnYig2MSwgMTMzLCAxOTgpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTAzLCA3OCwgMTY3KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDE2NiwgNzcsIDEyMSlcIixcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTMzLCAzMiwgMTIpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTUzLCAwLCAwKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDE4MCwgOTUsIDYpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTkxLCAxNDQsIDApXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoNTYsIDExOCwgMjkpXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMTksIDc5LCA5MilcIixcbiAgICAgICAgICAgICAgICBcInJnYigxNywgODUsIDIwNClcIixcbiAgICAgICAgICAgICAgICBcInJnYigxMSwgODMsIDE0OClcIixcbiAgICAgICAgICAgICAgICBcInJnYig1MywgMjgsIDExNylcIixcbiAgICAgICAgICAgICAgICBcInJnYigxMTYsIDI3LCA3MSlcIixcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgXCJyZ2IoOTEsIDE1LCAwKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDEwMiwgMCwgMClcIixcbiAgICAgICAgICAgICAgICBcInJnYigxMjAsIDYzLCA0KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDEyNywgOTYsIDApXCIsXG4gICAgICAgICAgICAgICAgXCJyZ2IoMzksIDc4LCAxOSlcIixcbiAgICAgICAgICAgICAgICBcInJnYigxMiwgNTIsIDYxKVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDI4LCA2OSwgMTM1KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDcsIDU1LCA5OSlcIixcbiAgICAgICAgICAgICAgICBcInJnYigzMiwgMTgsIDc3KVwiLFxuICAgICAgICAgICAgICAgIFwicmdiKDc2LCAxNywgNDgpXCIsXG4gICAgICAgICAgICBdLFxuICAgICAgICBdLFxuICAgIH0pO1xufVxuaW5pdFBpY2tlcihcInRoZW1lLXByaW1hcnktY29sb3JcIik7XG5pbml0UGlja2VyKFwidGhlbWUtc2Vjb25kYXJ5LWNvbG9yXCIpO1xuaW5pdFBpY2tlcihcInRoZW1lLWJhY2tncm91bmQtY29sb3JcIik7XG5pbml0UGlja2VyKFwidGhlbWUtYm9yZGVyLWNvbG9yXCIpO1xuaW5pdFBpY2tlcihcInRoZW1lLWxpbmstY29sb3JcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNvbG9yLXByaW1hcnlcIiwgXCIjRUFFQUVBXCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jb2xvci1hY2NlbnRcIiwgXCIjRjdGN0Y3XCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jb2xvci1zZWNvbmRhcnlcIiwgXCIjREREXCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jb2xvci1pbnB1dFwiLCBcIiNEMEQwRDBcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNvbG9yLWJvcmRlclwiLCBcIiNCQUJBQkFcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNvbG9yLWhpZ2hsaWdodFwiLCBcInJnYmEoMjU1LCAxODMsIDIsIDAuMilcIiwgdXBkYXRlT3V0cHV0LCB0cnVlKTtcbmluaXRQaWNrZXIoXCJtb2Rlcm4tY29sb3ItYWN0aXZlXCIsIFwiIzk4ZDRlNFwiLCB1cGRhdGVPdXRwdXQsIHRydWUpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jb2xvci1ncmFkZXNcIiwgXCIjMDA5NDAwXCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jb2xvci1lcnJvclwiLCBcIiNGNDQzMzZcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xXCIsIFwiI2Q2ZTdmNFwiKTtcbmluaXRQaWNrZXIoXCJtb2Rlcm4tY2FsLTJcIiwgXCIjZDdlOGNmXCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jYWwtM1wiLCBcIiNmOWU5ZDRcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC00XCIsIFwiI2U3ZTBlNVwiKTtcbmluaXRQaWNrZXIoXCJtb2Rlcm4tY2FsLTVcIiwgXCIjZTZiNWM5XCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jYWwtNlwiLCBcIiNmOWYxY2ZcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC03XCIsIFwiI2RhZjBmOVwiKTtcbmluaXRQaWNrZXIoXCJtb2Rlcm4tY2FsLThcIiwgXCIjZjlkZGVhXCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jYWwtOVwiLCBcIiNmYmQ3ZDhcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xMFwiLCBcIiNmMWYyZDFcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xMVwiLCBcIiNlMGU4ZjVcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xMlwiLCBcIiNmYmQ3ZTRcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xM1wiLCBcIiNmY2RkZDNcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xNFwiLCBcIiNlN2YyZDVcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xNVwiLCBcIiNlNmUwZWVcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xNlwiLCBcIiNmMGU1ZGJcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xN1wiLCBcIiNmY2U4ZDFcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xOFwiLCBcIiNlMWYxZTdcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0xOVwiLCBcIiNmMGRmZWRcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yMFwiLCBcIiNlOWU5ZWFcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yMVwiLCBcIiMwMDQyN2NcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yMlwiLCBcIiM2MDMwNzNcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yM1wiLCBcIiM4YjE5NDFcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yNFwiLCBcIiM5NzBjMGNcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yNVwiLCBcIiM5YzNiMDdcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yNlwiLCBcIiM2ODUyMDNcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yN1wiLCBcIiMyYTVmMTZcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yOFwiLCBcIiMwOTU4NGZcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0yOVwiLCBcIiMwMDVhNzVcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNhbC0zMFwiLCBcIiM0ZDU1NTdcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNvbG9yLXRleHQtcHJpbWFyeVwiLCBcIiMyQTJBMkFcIik7XG5pbml0UGlja2VyKFwibW9kZXJuLWNvbG9yLXRleHQtbXV0ZWRcIiwgXCIjNjc3NTgzXCIpO1xuaW5pdFBpY2tlcihcIm1vZGVybi1jb2xvci10ZXh0LWNvbnRyYXN0XCIsIFwid2hpdGVcIik7XG52YXIgbW9kZXJuQ29sb3JNYXAgPSB7XG4gICAgXCIjbW9kZXJuLWNvbG9yLXByaW1hcnlcIjogW1wiaW50ZXJmYWNlXCIsIFwicHJpbWFyeVwiLCBcIm1vZGVybi1wcmltYXJ5XCJdLFxuICAgIFwiI21vZGVybi1jb2xvci1hY2NlbnRcIjogW1wiaW50ZXJmYWNlXCIsIFwiYWNjZW50XCIsIFwibW9kZXJuLWFjY2VudFwiXSxcbiAgICBcIiNtb2Rlcm4tY29sb3Itc2Vjb25kYXJ5XCI6IFtcImludGVyZmFjZVwiLCBcInNlY29uZGFyeVwiLCBcIm1vZGVybi1zZWNvbmRhcnlcIl0sXG4gICAgXCIjbW9kZXJuLWNvbG9yLWlucHV0XCI6IFtcImludGVyZmFjZVwiLCBcImlucHV0XCIsIFwibW9kZXJuLWlucHV0XCJdLFxuICAgIFwiI21vZGVybi1jb2xvci1ib3JkZXJcIjogW1wiaW50ZXJmYWNlXCIsIFwiYm9yZGVyXCIsIFwibW9kZXJuLWNvbnRyYXN0LWJvcmRlclwiXSxcbiAgICBcIiNtb2Rlcm4tY29sb3ItaGlnaGxpZ2h0XCI6IFtcImludGVyZmFjZVwiLCBcImhpZ2hsaWdodFwiLCBcIm1vZGVybi1oaWdobGlnaHRcIl0sXG4gICAgXCIjbW9kZXJuLWNvbG9yLWFjdGl2ZVwiOiBbXCJpbnRlcmZhY2VcIiwgXCJhY3RpdmVcIiwgXCJtb2Rlcm4tYWN0aXZlXCJdLFxuICAgIFwiI21vZGVybi1jb2xvci1ncmFkZXNcIjogW1wiaW50ZXJmYWNlXCIsIFwiZ3JhZGVzXCIsIFwibW9kZXJuLWdyYWRlc1wiXSxcbiAgICBcIiNtb2Rlcm4tY29sb3ItZXJyb3JcIjogW1wiaW50ZXJmYWNlXCIsIFwiZXJyb3JcIiwgXCJtb2Rlcm4tZXJyb3JcIl0sXG4gICAgXCIjbW9kZXJuLWNvbG9yLXRleHQtcHJpbWFyeVwiOiBbXCJ0ZXh0XCIsIFwicHJpbWFyeVwiLCBcIm1vZGVybi10ZXh0XCJdLFxuICAgIFwiI21vZGVybi1jb2xvci10ZXh0LW11dGVkXCI6IFtcInRleHRcIiwgXCJtdXRlZFwiLCBcIm1vZGVybi1tdXRlZC10ZXh0XCJdLFxuICAgIFwiI21vZGVybi1jb2xvci10ZXh0LWNvbnRyYXN0XCI6IFtcInRleHRcIiwgXCJjb250cmFzdFwiLCBcIm1vZGVybi1jb250cmFzdC10ZXh0XCJdLFxuICAgIFwiI21vZGVybi1jYWwtMVwiOiBbXCJjYWxlbmRhclwiLCAwLCBcImNhbDFcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC0yXCI6IFtcImNhbGVuZGFyXCIsIDEsIFwiY2FsMlwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTNcIjogW1wiY2FsZW5kYXJcIiwgMiwgXCJjYWwzXCJdLFxuICAgIFwiI21vZGVybi1jYWwtNFwiOiBbXCJjYWxlbmRhclwiLCAzLCBcImNhbDRcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC01XCI6IFtcImNhbGVuZGFyXCIsIDQsIFwiY2FsNVwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTZcIjogW1wiY2FsZW5kYXJcIiwgNSwgXCJjYWw2XCJdLFxuICAgIFwiI21vZGVybi1jYWwtN1wiOiBbXCJjYWxlbmRhclwiLCA2LCBcImNhbDdcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC04XCI6IFtcImNhbGVuZGFyXCIsIDcsIFwiY2FsOFwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTlcIjogW1wiY2FsZW5kYXJcIiwgOCwgXCJjYWw5XCJdLFxuICAgIFwiI21vZGVybi1jYWwtMTBcIjogW1wiY2FsZW5kYXJcIiwgOSwgXCJjYWwxMFwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTExXCI6IFtcImNhbGVuZGFyXCIsIDEwLCBcImNhbDExXCJdLFxuICAgIFwiI21vZGVybi1jYWwtMTJcIjogW1wiY2FsZW5kYXJcIiwgMTEsIFwiY2FsMTJcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC0xM1wiOiBbXCJjYWxlbmRhclwiLCAxMiwgXCJjYWwxM1wiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTE0XCI6IFtcImNhbGVuZGFyXCIsIDEzLCBcImNhbDE0XCJdLFxuICAgIFwiI21vZGVybi1jYWwtMTVcIjogW1wiY2FsZW5kYXJcIiwgMTQsIFwiY2FsMTVcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC0xNlwiOiBbXCJjYWxlbmRhclwiLCAxNSwgXCJjYWwxNlwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTE3XCI6IFtcImNhbGVuZGFyXCIsIDE2LCBcImNhbDE3XCJdLFxuICAgIFwiI21vZGVybi1jYWwtMThcIjogW1wiY2FsZW5kYXJcIiwgMTcsIFwiY2FsMThcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC0xOVwiOiBbXCJjYWxlbmRhclwiLCAxOCwgXCJjYWwxOVwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTIwXCI6IFtcImNhbGVuZGFyXCIsIDE5LCBcImNhbDIwXCJdLFxuICAgIFwiI21vZGVybi1jYWwtMjFcIjogW1wiY2FsZW5kYXJcIiwgMjAsIFwiY2FsMjFcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC0yMlwiOiBbXCJjYWxlbmRhclwiLCAyMSwgXCJjYWwyMlwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTIzXCI6IFtcImNhbGVuZGFyXCIsIDIyLCBcImNhbDIzXCJdLFxuICAgIFwiI21vZGVybi1jYWwtMjRcIjogW1wiY2FsZW5kYXJcIiwgMjMsIFwiY2FsMjRcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC0yNVwiOiBbXCJjYWxlbmRhclwiLCAyNCwgXCJjYWwyNVwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTI2XCI6IFtcImNhbGVuZGFyXCIsIDI1LCBcImNhbDI2XCJdLFxuICAgIFwiI21vZGVybi1jYWwtMjdcIjogW1wiY2FsZW5kYXJcIiwgMjYsIFwiY2FsMjdcIl0sXG4gICAgXCIjbW9kZXJuLWNhbC0yOFwiOiBbXCJjYWxlbmRhclwiLCAyNywgXCJjYWwyOFwiXSxcbiAgICBcIiNtb2Rlcm4tY2FsLTI5XCI6IFtcImNhbGVuZGFyXCIsIDI4LCBcImNhbDI5XCJdLFxuICAgIFwiI21vZGVybi1jYWwtMzBcIjogW1wiY2FsZW5kYXJcIiwgMjksIFwiY2FsMzBcIl0sXG59O1xuZnVuY3Rpb24gdXBkYXRlT3V0cHV0KCkge1xuICAgIGNsZWFySW50ZXJ2YWwocmFpbmJvd0ludGVydmFsKTtcbiAgICB3YXJuaW5ncyA9IFtdO1xuICAgIGVycm9ycyA9IFtdO1xuICAgIHRoZW1lID0gbmV3IHRoZW1lX21vZGVsXzEuU2Nob29sb2d5VGhlbWUodGhlbWVOYW1lLnZhbHVlIHx8IFwiVW50aXRsZWQgVGhlbWVcIiwgdGhlbWVfbW9kZWxfMS5TY2hvb2xvZ3lUaGVtZS5DVVJSRU5UX1ZFUlNJT04sIHsgaHVlOiAyMTAgfSk7XG4gICAgLy8gTmFtZVxuICAgIGlmICghdGhlbWUubmFtZSkge1xuICAgICAgICBlcnJvcnMucHVzaChcIlRoZW1lIG11c3QgaGF2ZSBhIG5hbWVcIik7XG4gICAgfVxuICAgIGVsc2UgaWYgKGRlZmF1bHRUaGVtZXMuaW5jbHVkZXModGhlbWUubmFtZSkpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goXCJUaGVtZSBjYW4ndCB1c2UgdGhlIHNhbWUgbmFtZSBhcyBhIGRlZmF1bHQgdGhlbWUuIFBsZWFzZSBjaG9vc2UgYSBkaWZmZXJlbnQgbmFtZS5cIik7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRoZW1lLm5hbWUgIT0gb3JpZ1RoZW1lTmFtZSAmJiBhbGxUaGVtZXNbdGhlbWUubmFtZV0pIHtcbiAgICAgICAgZXJyb3JzLnB1c2goYEEgdGhlbWUgd2l0aCB0aGUgbmFtZSBcIiR7dGhlbWUubmFtZX1cIiBhbHJlYWR5IGV4aXN0cy4gRGVsZXRlIHRoYXQgdGhlbWUgb3IgY2hvb3NlIGEgZGlmZmVyZW50IG5hbWUgYmVmb3JlIHNhdmluZy5gKTtcbiAgICB9XG4gICAgLy8gQ29sb3JcbiAgICB0aGVtZS5jb2xvciA9IG5ldyB0aGVtZV9tb2RlbF8xLlRoZW1lQ29sb3IoKTtcbiAgICBpZiAodGhlbWVDb2xvckh1ZS5jaGVja2VkKSB7XG4gICAgICAgIHRoZW1lQ29sb3JDdXN0b21XcmFwcGVyLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgICAgIHRoZW1lSHVlV3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgICAgICB0aGVtZUNvbG9yUmFpbmJvd1dyYXBwZXIuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcbiAgICAgICAgdGhlbWUuY29sb3IuaHVlID0gKDAsIGpxdWVyeV8xLmRlZmF1bHQpKHRoZW1lSHVlKS5zbGlkZXIoXCJ2YWx1ZVwiKTtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImNvbG9yLWh1ZVwiLCB0aGVtZS5jb2xvci5odWUudG9TdHJpbmcoKSk7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJwcmltYXJ5LWNvbG9yXCIsIFwiaHNsKHZhcigtLWNvbG9yLWh1ZSksIDUwJSwgNTAlKVwiKTtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImJhY2tncm91bmQtY29sb3JcIiwgXCJoc2wodmFyKC0tY29sb3ItaHVlKSwgNjAlLCAzMCUpXCIpO1xuICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwiaG92ZXItY29sb3JcIiwgXCJoc2wodmFyKC0tY29sb3ItaHVlKSwgNTUlLCA0MCUpXCIpO1xuICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwiYm9yZGVyLWNvbG9yXCIsIFwiaHNsKHZhcigtLWNvbG9yLWh1ZSksIDYwJSwgMjUlKVwiKTtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImxpbmstY29sb3JcIiwgXCJoc2wodmFyKC0tY29sb3ItaHVlKSwgNTUlLCA0MCUpXCIpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0aGVtZUNvbG9yQ3VzdG9tLmNoZWNrZWQpIHtcbiAgICAgICAgdGhlbWVDb2xvckN1c3RvbVdyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcbiAgICAgICAgdGhlbWVIdWVXcmFwcGVyLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgICAgIHRoZW1lQ29sb3JSYWluYm93V3JhcHBlci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgICB0aGVtZS5jb2xvci5jdXN0b20gPSBuZXcgdGhlbWVfbW9kZWxfMS5DdXN0b21Db2xvckRlZmluaXRpb24oKDAsIGpxdWVyeV8xLmRlZmF1bHQpKFwiI3RoZW1lLXByaW1hcnktY29sb3JcIikuc3BlY3RydW0oXCJnZXRcIikudG9IZXhTdHJpbmcoKSwgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKFwiI3RoZW1lLXNlY29uZGFyeS1jb2xvclwiKS5zcGVjdHJ1bShcImdldFwiKS50b0hleFN0cmluZygpLCAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoXCIjdGhlbWUtYmFja2dyb3VuZC1jb2xvclwiKS5zcGVjdHJ1bShcImdldFwiKS50b0hleFN0cmluZygpLCAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoXCIjdGhlbWUtYm9yZGVyLWNvbG9yXCIpLnNwZWN0cnVtKFwiZ2V0XCIpLnRvSGV4U3RyaW5nKCksICgwLCBqcXVlcnlfMS5kZWZhdWx0KShcIiN0aGVtZS1saW5rLWNvbG9yXCIpLnNwZWN0cnVtKFwiZ2V0XCIpLnRvSGV4U3RyaW5nKCkpO1xuICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwicHJpbWFyeS1jb2xvclwiLCB0aGVtZS5jb2xvci5jdXN0b20ucHJpbWFyeSk7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJiYWNrZ3JvdW5kLWNvbG9yXCIsIHRoZW1lLmNvbG9yLmN1c3RvbS5iYWNrZ3JvdW5kKTtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImhvdmVyLWNvbG9yXCIsIHRoZW1lLmNvbG9yLmN1c3RvbS5ob3Zlcik7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJib3JkZXItY29sb3JcIiwgdGhlbWUuY29sb3IuY3VzdG9tLmJvcmRlcik7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJsaW5rLWNvbG9yXCIsIHRoZW1lLmNvbG9yLmN1c3RvbS5saW5rKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGhlbWVDb2xvclJhaW5ib3cuY2hlY2tlZCkge1xuICAgICAgICB0aGVtZUNvbG9yQ3VzdG9tV3JhcHBlci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgICB0aGVtZUh1ZVdyYXBwZXIuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcbiAgICAgICAgdGhlbWVDb2xvclJhaW5ib3dXcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgICAgIHRoZW1lLmNvbG9yLnJhaW5ib3cgPSBuZXcgdGhlbWVfbW9kZWxfMS5SYWluYm93Q29sb3JEZWZpbml0aW9uKG5ldyB0aGVtZV9tb2RlbF8xLlJhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb24oKSwgbmV3IHRoZW1lX21vZGVsXzEuUmFpbmJvd0NvbG9yQ29tcG9uZW50RGVmaW5pdGlvbigpLCBuZXcgdGhlbWVfbW9kZWxfMS5SYWluYm93Q29sb3JDb21wb25lbnREZWZpbml0aW9uKCkpO1xuICAgICAgICBpZiAodGhlbWUuY29sb3IucmFpbmJvdy5odWUgJiYgY29sb3JSYWluYm93SHVlQW5pbWF0ZS5jaGVja2VkKSB7XG4gICAgICAgICAgICBjb2xvclJhaW5ib3dIdWVBbmltYXRlV3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImxhYmVsW2Zvcj1jb2xvci1yYWluYm93LWh1ZS12YWx1ZV1cIikuZmlyc3RFbGVtZW50Q2hpbGQudGV4dENvbnRlbnQgPSBcIkh1ZSBPZmZzZXRcIjtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0h1ZVZhbHVlLmNsYXNzTGlzdC5yZW1vdmUoXCJodWUtc2xpZGVyXCIpO1xuICAgICAgICAgICAgdGhlbWUuY29sb3IucmFpbmJvdy5odWUuYW5pbWF0ZSA9IG5ldyB0aGVtZV9tb2RlbF8xLlJhaW5ib3dDb2xvckNvbXBvbmVudEFuaW1hdGlvbigrY29sb3JSYWluYm93SHVlU3BlZWQudmFsdWUsICsoMCwganF1ZXJ5XzEuZGVmYXVsdCkoY29sb3JSYWluYm93SHVlVmFsdWUpLnNsaWRlcihcInZhbHVlXCIpLCArKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGNvbG9yUmFpbmJvd0h1ZVJhbmdlKS5yb3VuZFNsaWRlcihcImdldFZhbHVlXCIpLnNwbGl0KFwiLFwiKVswXSwgKygwLCBqcXVlcnlfMS5kZWZhdWx0KShjb2xvclJhaW5ib3dIdWVSYW5nZSkucm91bmRTbGlkZXIoXCJnZXRWYWx1ZVwiKS5zcGxpdChcIixcIilbMV0sIGNvbG9yUmFpbmJvd0h1ZUFsdGVybmF0ZS5jaGVja2VkKTtcbiAgICAgICAgICAgIGxldCBzdGVwcyA9IFtdO1xuICAgICAgICAgICAgbGV0IG1heCA9IHRoZW1lLmNvbG9yLnJhaW5ib3cuaHVlLmFuaW1hdGUubWluID4gdGhlbWUuY29sb3IucmFpbmJvdy5odWUuYW5pbWF0ZS5tYXhcbiAgICAgICAgICAgICAgICA/IHRoZW1lLmNvbG9yLnJhaW5ib3cuaHVlLmFuaW1hdGUubWF4ICsgMzYwXG4gICAgICAgICAgICAgICAgOiB0aGVtZS5jb2xvci5yYWluYm93Lmh1ZS5hbmltYXRlLm1heDtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IDE7IGkgKz0gMC4wNSkge1xuICAgICAgICAgICAgICAgIHN0ZXBzLnB1c2goYGhzbCgke3RoZW1lLmNvbG9yLnJhaW5ib3cuaHVlLmFuaW1hdGUubWluICogKDEgLSBpKSArIG1heCAqIGl9LCA1MCUsIDUwJSlgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGVtZS5jb2xvci5yYWluYm93Lmh1ZS5hbmltYXRlLmFsdGVybmF0ZSkge1xuICAgICAgICAgICAgICAgIHN0ZXBzLnB1c2goLi4uc3RlcHMuc2xpY2UoMCwgc3RlcHMubGVuZ3RoIC0gMSkucmV2ZXJzZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0h1ZVByZXZpZXcuc3R5bGUuYmFja2dyb3VuZCA9IGBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICR7c3RlcHMuam9pbigpfSlgO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29sb3JSYWluYm93SHVlQW5pbWF0ZVdyYXBwZXIuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJsYWJlbFtmb3I9Y29sb3ItcmFpbmJvdy1odWUtdmFsdWVdXCIpLmZpcnN0RWxlbWVudENoaWxkLnRleHRDb250ZW50ID0gXCJIdWUgVmFsdWVcIjtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0h1ZVZhbHVlLmNsYXNzTGlzdC5hZGQoXCJodWUtc2xpZGVyXCIpO1xuICAgICAgICAgICAgdGhlbWUuY29sb3IucmFpbmJvdy5odWUudmFsdWUgPSAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoY29sb3JSYWluYm93SHVlVmFsdWUpLnNsaWRlcihcInZhbHVlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGVtZS5jb2xvci5yYWluYm93LnNhdHVyYXRpb24gJiYgY29sb3JSYWluYm93U2F0dXJhdGlvbkFuaW1hdGUuY2hlY2tlZCkge1xuICAgICAgICAgICAgY29sb3JSYWluYm93U2F0dXJhdGlvbkFuaW1hdGVXcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibGFiZWxbZm9yPWNvbG9yLXJhaW5ib3ctc2F0dXJhdGlvbi12YWx1ZV1cIikuZmlyc3RFbGVtZW50Q2hpbGQudGV4dENvbnRlbnQgPSBcIlNhdHVyYXRpb24gT2Zmc2V0XCI7XG4gICAgICAgICAgICB0aGVtZS5jb2xvci5yYWluYm93LnNhdHVyYXRpb24uYW5pbWF0ZSA9IG5ldyB0aGVtZV9tb2RlbF8xLlJhaW5ib3dDb2xvckNvbXBvbmVudEFuaW1hdGlvbigrY29sb3JSYWluYm93U2F0dXJhdGlvblNwZWVkLnZhbHVlLCArY29sb3JSYWluYm93U2F0dXJhdGlvblZhbHVlLnZhbHVlLCAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoY29sb3JSYWluYm93U2F0dXJhdGlvblJhbmdlKS5zbGlkZXIoXCJ2YWx1ZXNcIilbMF0sICgwLCBqcXVlcnlfMS5kZWZhdWx0KShjb2xvclJhaW5ib3dTYXR1cmF0aW9uUmFuZ2UpLnNsaWRlcihcInZhbHVlc1wiKVsxXSwgY29sb3JSYWluYm93U2F0dXJhdGlvbkFsdGVybmF0ZS5jaGVja2VkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd1NhdHVyYXRpb25BbmltYXRlV3JhcHBlci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImxhYmVsW2Zvcj1jb2xvci1yYWluYm93LXNhdHVyYXRpb24tdmFsdWVdXCIpLmZpcnN0RWxlbWVudENoaWxkLnRleHRDb250ZW50ID0gXCJTYXR1cmF0aW9uIFZhbHVlXCI7XG4gICAgICAgICAgICB0aGVtZS5jb2xvci5yYWluYm93LnNhdHVyYXRpb24udmFsdWUgPSBOdW1iZXIucGFyc2VGbG9hdChjb2xvclJhaW5ib3dTYXR1cmF0aW9uVmFsdWUudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb2xvclJhaW5ib3dMaWdodG5lc3NBbmltYXRlLmNoZWNrZWQpIHtcbiAgICAgICAgICAgIGNvbG9yUmFpbmJvd0xpZ2h0bmVzc0FuaW1hdGVXcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibGFiZWxbZm9yPWNvbG9yLXJhaW5ib3ctbGlnaHRuZXNzLXZhbHVlXVwiKS5maXJzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCA9IFwiTGlnaHRuZXNzIE9mZnNldFwiO1xuICAgICAgICAgICAgdGhlbWUuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZSA9IG5ldyB0aGVtZV9tb2RlbF8xLlJhaW5ib3dDb2xvckNvbXBvbmVudEFuaW1hdGlvbigrY29sb3JSYWluYm93TGlnaHRuZXNzU3BlZWQudmFsdWUsICtjb2xvclJhaW5ib3dMaWdodG5lc3NWYWx1ZS52YWx1ZSwgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGNvbG9yUmFpbmJvd0xpZ2h0bmVzc1JhbmdlKS5zbGlkZXIoXCJ2YWx1ZXNcIilbMF0sICgwLCBqcXVlcnlfMS5kZWZhdWx0KShjb2xvclJhaW5ib3dMaWdodG5lc3NSYW5nZSkuc2xpZGVyKFwidmFsdWVzXCIpWzFdLCBjb2xvclJhaW5ib3dMaWdodG5lc3NBbHRlcm5hdGUuY2hlY2tlZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb2xvclJhaW5ib3dMaWdodG5lc3NBbmltYXRlV3JhcHBlci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImxhYmVsW2Zvcj1jb2xvci1yYWluYm93LWxpZ2h0bmVzcy12YWx1ZV1cIikuZmlyc3RFbGVtZW50Q2hpbGQudGV4dENvbnRlbnQgPSBcIkxpZ2h0bmVzcyBWYWx1ZVwiO1xuICAgICAgICAgICAgdGhlbWUuY29sb3IucmFpbmJvdy5saWdodG5lc3MudmFsdWUgPSBOdW1iZXIucGFyc2VGbG9hdChjb2xvclJhaW5ib3dMaWdodG5lc3NWYWx1ZS52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGYgPSBnZW5lcmF0ZVJhaW5ib3dGdW5jdGlvbih0aGVtZSk7XG4gICAgICAgIGlmIChmKSB7XG4gICAgICAgICAgICBmKCk7XG4gICAgICAgICAgICByYWluYm93SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmLCAxMDApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChtb2Rlcm5FbmFibGUuY2hlY2tlZCkge1xuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2V0QXR0cmlidXRlKFwibW9kZXJuXCIsIFwidHJ1ZVwiKTtcbiAgICAgICAgbW9kZXJuV3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgICAgICB0aGVtZS5jb2xvci5tb2Rlcm4gPSBuZXcgdGhlbWVfbW9kZWxfMS5Nb2Rlcm5Db2xvckRlZmluaXRpb24oKTtcbiAgICAgICAgdGhlbWUuY29sb3IubW9kZXJuLmNhbGVuZGFyID0gW107XG4gICAgICAgIHRoZW1lLmNvbG9yLm1vZGVybi5pbnRlcmZhY2UgPSBuZXcgdGhlbWVfbW9kZWxfMS5Nb2Rlcm5JbnRlcmZhY2VDb2xvckRlZmluaXRpb24oXCIjMDBERUFEXCIsIFwiIzAwREVBRFwiLCBcIiMwMERFQURcIiwgXCIjMDBERUFEXCIsIFwiIzAwREVBRFwiLCBcIiMwMERFQURcIiwgXCIjMDBERUFEXCIsIFwiIzAwREVBRFwiLCBcIiMwMERFQURcIik7XG4gICAgICAgIHRoZW1lLmNvbG9yLm1vZGVybi50ZXh0ID0gbmV3IHRoZW1lX21vZGVsXzEuTW9kZXJuVGV4dENvbG9yRGVmaW5pdGlvbihcIiMwMERFQURcIiwgXCIjMDBERUFEXCIsIFwiIzAwREVBRFwiKTtcbiAgICAgICAgdGhlbWUuY29sb3IubW9kZXJuLm9wdGlvbnMgPSBuZXcgdGhlbWVfbW9kZWxfMS5Nb2Rlcm5PcHRpb25zRGVmaW5pdGlvbig1LCAxLCA1KTtcbiAgICAgICAgdGhlbWUuY29sb3IubW9kZXJuLmRhcmsgPSAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoXCIjbW9kZXJuLWNvbG9yLXByaW1hcnlcIikuc3BlY3RydW0oXCJnZXRcIikuaXNEYXJrKCk7XG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkYXJrXCIsIHRoZW1lLmNvbG9yLm1vZGVybi5kYXJrLnRvU3RyaW5nKCkpO1xuICAgICAgICBmb3IgKGxldCBpZCBpbiBtb2Rlcm5Db2xvck1hcCkge1xuICAgICAgICAgICAgbGV0IGtleSA9IG1vZGVybkNvbG9yTWFwW2lkXTtcbiAgICAgICAgICAgIC8vIGNvdWxkbid0IGZpZ3VyZSBvdXQgaG93IHRvIG1ha2UgVHlwZVNjcmlwdCBoYXBweSBoZXJlLCBkaWQgbXkgYmVzdFxuICAgICAgICAgICAgbGV0IG1vZGVybktleSA9IHRoZW1lLmNvbG9yLm1vZGVybltrZXlbMF1dO1xuICAgICAgICAgICAgbW9kZXJuS2V5W2tleVsxXV0gPSAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoaWQpXG4gICAgICAgICAgICAgICAgLnNwZWN0cnVtKFwiZ2V0XCIpXG4gICAgICAgICAgICAgICAgLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKGtleVsyXSwgKDAsIGpxdWVyeV8xLmRlZmF1bHQpKGlkKS5zcGVjdHJ1bShcImdldFwiKS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGVtZS5jb2xvci5tb2Rlcm4ub3B0aW9ucy5ib3JkZXJTaXplID0gK21vZGVybkJvcmRlclNpemVWYWx1ZS52YWx1ZTtcbiAgICAgICAgdGhlbWUuY29sb3IubW9kZXJuLm9wdGlvbnMuYm9yZGVyUmFkaXVzID0gK21vZGVybkJvcmRlclJhZGl1c1ZhbHVlLnZhbHVlO1xuICAgICAgICB0aGVtZS5jb2xvci5tb2Rlcm4ub3B0aW9ucy5wYWRkaW5nID0gK21vZGVyblBhZGRpbmdWYWx1ZS52YWx1ZTtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcIm1vZGVybi1ib3JkZXItc2l6ZVwiLCBgJHttb2Rlcm5Cb3JkZXJTaXplVmFsdWUudmFsdWV9cHhgKTtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcIm1vZGVybi1ib3JkZXItcmFkaXVzXCIsIGAke21vZGVybkJvcmRlclJhZGl1c1ZhbHVlLnZhbHVlfXB4YCk7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJtb2Rlcm4tcGFkZGluZ1wiLCBgJHttb2Rlcm5QYWRkaW5nVmFsdWUudmFsdWV9cHhgKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtb2Rlcm5cIiwgXCJmYWxzZVwiKTtcbiAgICAgICAgbW9kZXJuV3JhcHBlci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgIH1cbiAgICAvLyBMb2dvXG4gICAgdGhlbWVMb2dvV3JhcHBlci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgIGlmICh0aGVtZVNjaG9vbG9neVBsdXNMb2dvLmNoZWNrZWQpIHtcbiAgICAgICAgdGhlbWUubG9nbyA9IG5ldyB0aGVtZV9tb2RlbF8xLlRoZW1lTG9nbyh1bmRlZmluZWQsIFwic2Nob29sb2d5X3BsdXNcIik7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJiYWNrZ3JvdW5kLXVybFwiLCBgdXJsKCR7c2Nob29sb2d5UGx1c0xvZ29JbWFnZVVybH0pYCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRoZW1lU2Nob29sb2d5TG9nby5jaGVja2VkKSB7XG4gICAgICAgIHRoZW1lLmxvZ28gPSBuZXcgdGhlbWVfbW9kZWxfMS5UaGVtZUxvZ28odW5kZWZpbmVkLCBcInNjaG9vbG9neV9sb2dvXCIpO1xuICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwiYmFja2dyb3VuZC11cmxcIiwgYHVybCgke3NjaG9vbG9neUxvZ29JbWFnZVVybH0pYCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRoZW1lTEFVU0RMb2dvMjAyMi5jaGVja2VkKSB7XG4gICAgICAgIHRoZW1lLmxvZ28gPSBuZXcgdGhlbWVfbW9kZWxfMS5UaGVtZUxvZ28odW5kZWZpbmVkLCBcImxhdXNkXzIwMjJcIik7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJiYWNrZ3JvdW5kLXVybFwiLCBgdXJsKCR7bGF1c2QyMDIySW1hZ2VVcmx9KWApO1xuICAgIH1cbiAgICBlbHNlIGlmICh0aGVtZU5ld0xBVVNETG9nby5jaGVja2VkKSB7XG4gICAgICAgIHRoZW1lLmxvZ28gPSBuZXcgdGhlbWVfbW9kZWxfMS5UaGVtZUxvZ28odW5kZWZpbmVkLCBcImxhdXNkXzIwMTlcIik7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJiYWNrZ3JvdW5kLXVybFwiLCBgdXJsKCR7bGF1c2QyMDE5SW1hZ2VVcmx9KWApO1xuICAgIH1cbiAgICBlbHNlIGlmICh0aGVtZUxBVVNETG9nby5jaGVja2VkKSB7XG4gICAgICAgIHRoZW1lLmxvZ28gPSBuZXcgdGhlbWVfbW9kZWxfMS5UaGVtZUxvZ28odW5kZWZpbmVkLCBcImxhdXNkX2xlZ2FjeVwiKTtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImJhY2tncm91bmQtdXJsXCIsIGB1cmwoJHtsYXVzZExlZ2FjeUltYWdlVXJsfSlgKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGhlbWVEZWZhdWx0TG9nby5jaGVja2VkKSB7XG4gICAgICAgIHRoZW1lLmxvZ28gPSBuZXcgdGhlbWVfbW9kZWxfMS5UaGVtZUxvZ28odW5kZWZpbmVkLCBcImRlZmF1bHRcIik7XG4gICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJiYWNrZ3JvdW5kLXVybFwiLCBgdXJsKCR7cGxhY2Vob2xkZXJVcmx9KWApO1xuICAgIH1cbiAgICBlbHNlIGlmICh0aGVtZUN1c3RvbUxvZ28uY2hlY2tlZCkge1xuICAgICAgICB0aGVtZUxvZ29XcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgICAgIGlmICh0aGVtZUxvZ28udmFsdWUpIHtcbiAgICAgICAgICAgIHRoZW1lLmxvZ28gPSBuZXcgdGhlbWVfbW9kZWxfMS5UaGVtZUxvZ28odGhlbWVMb2dvLnZhbHVlKTtcbiAgICAgICAgICAgIGNoZWNrSW1hZ2UodGhlbWVMb2dvLnZhbHVlLCB4ID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgaW1nID0geC50YXJnZXQ7XG4gICAgICAgICAgICAgICAgaWYgKGltZy53aWR0aCAhPSAxNjAgfHwgaW1nLmhlaWdodCA8IDM2IHx8IGltZy5oZWlnaHQgPiA2MCkge1xuICAgICAgICAgICAgICAgICAgICB3YXJuaW5ncy5wdXNoKFwiTG9nbyBpbWFnZSBpcyBub3QgYmV0d2VlbiB0aGUgcmVjb21tZW5kZWQgc2l6ZXMgb2YgMTYweDM2IGFuZCAxNjB4NjBcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJiYWNrZ3JvdW5kLXVybFwiLCBgdXJsKCR7dGhlbWVMb2dvLnZhbHVlfSlgKTtcbiAgICAgICAgICAgIH0sICgpID0+IGVycm9ycy5wdXNoKFwiTG9nbyBVUkwgZG9lcyBub3QgcG9pbnQgdG8gYSB2YWxpZCBpbWFnZVwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBlcnJvcnMucHVzaChcIk5vIGxvZ28gVVJMIGlzIHNwZWNpZmllZFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBDdXJzb3JcbiAgICBpZiAodGhlbWVDdXJzb3IudmFsdWUpIHtcbiAgICAgICAgdGhlbWUuY3Vyc29yID0gbmV3IHRoZW1lX21vZGVsXzEuVGhlbWVDdXJzb3IodGhlbWVDdXJzb3IudmFsdWUpO1xuICAgICAgICBjaGVja0ltYWdlKHRoZW1lQ3Vyc29yLnZhbHVlLCB4ID0+IHtcbiAgICAgICAgICAgIGxldCBpbWcgPSB4LnRhcmdldDtcbiAgICAgICAgICAgIGlmIChpbWcud2lkdGggPiAxMjggfHwgaW1nLmhlaWdodCA+IDEyOCkge1xuICAgICAgICAgICAgICAgIGVycm9ycy5wdXNoKFwiQ3Vyc29yIGltYWdlcyBtdXN0IGJlIHNtYWxsZXIgdGhhbiAxMjh4MTI4IHRvIGFwcGVhclwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJjdXJzb3JcIiwgYHVybCgke3RoZW1lQ3Vyc29yLnZhbHVlfSksIGF1dG9gKTtcbiAgICAgICAgfSwgKCkgPT4gZXJyb3JzLnB1c2goXCJDdXJzb3IgVVJMIGRvZXMgbm90IHBvaW50IHRvIGEgdmFsaWQgaW1hZ2VcIikpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImN1cnNvclwiLCBcImF1dG9cIik7XG4gICAgfVxuICAgIC8vIEljb25zXG4gICAgaWYgKGljb25MaXN0VGFibGUucm93cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGxldCBjdXN0b21JY29ucyA9IFtdO1xuICAgICAgICBsZXQgZmlyc3QgPSB0cnVlO1xuICAgICAgICBmb3IgKGxldCByb3cgb2YgaWNvbkxpc3RUYWJsZS5yb3dzKSB7XG4gICAgICAgICAgICBpZiAoZmlyc3QgfHwgIXJvdy5jZWxsc1sxXS50ZXh0Q29udGVudCB8fCAhcm93LmNlbGxzWzJdLnRleHRDb250ZW50KSB7XG4gICAgICAgICAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBwYXR0ZXJuID0gcm93LmNlbGxzWzFdLnRleHRDb250ZW50O1xuICAgICAgICAgICAgbGV0IHVybCA9IHJvdy5jZWxsc1syXS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgIGNoZWNrSW1hZ2UodXJsLCB1bmRlZmluZWQsICgpID0+IGVycm9ycy5wdXNoKHVybCArIFwiIGlzIG5vdCBhIHZhbGlkIGltYWdlIFVSTCAoQ291cnNlIEljb25zKVwiKSk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIFJlZ0V4cChwYXR0ZXJuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgICAgIGVycm9ycy5wdXNoKHBhdHRlcm4gKyBcIiBpcyBub3QgYSB2YWxpZCByZWd1bGFyIGV4cHJlc3Npb24gKENvdXJzZSBJY29ucylcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjdXN0b21JY29ucy5wdXNoKG5ldyB0aGVtZV9tb2RlbF8xLlRoZW1lSWNvbihwYXR0ZXJuLCB1cmwpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGVtZS5pY29ucyA9IGN1c3RvbUljb25zO1xuICAgIH1cbiAgICB1cGRhdGVQcmV2aWV3KCk7XG59XG4vKipcbiAqIFVwZGF0ZSB0aGUgdGhlbWUgcHJldmlldyBhbmQgb3B0aW9uYWxseSB0aGUgdGhlbWUgSlNPTlxuICogQHBhcmFtIHtib29sZWFufSB1cGRhdGVKU09OIFdoZXRoZXIgb3Igbm90IHRvIHJlcGxhY2UgdGhlIEpTT04gb3V0cHV0IHdpdGggZm9ybSB2YWx1ZXNcbiAqL1xuZnVuY3Rpb24gdXBkYXRlUHJldmlldyh1cGRhdGVKU09OID0gdHJ1ZSkge1xuICAgIGlmICh1cGRhdGVKU09OKVxuICAgICAgICBvdXRwdXQudmFsdWUgPSBKU09OLnN0cmluZ2lmeSh0aGVtZSwgbnVsbCwgNCk7XG4gICAgbGV0IHdhcm5pbmdDYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3YXJuaW5nLWNhcmRcIik7XG4gICAgaWYgKHdhcm5pbmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgd2FybmluZ0NhcmQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3YXJuaW5nLWNvbnRlbnRcIikuaW5uZXJIVE1MID0gd2FybmluZ3Muam9pbihcIjxici8+XCIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgd2FybmluZ0NhcmQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cbiAgICBsZXQgZXJyb3JDYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlcnJvci1jYXJkXCIpO1xuICAgIGlmIChlcnJvcnMubGVuZ3RoID4gMCAmJiBpbkVkaXRNb2RlKCkpIHtcbiAgICAgICAgZXJyb3JDYXJkLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXJyb3ItY29udGVudFwiKS5pbm5lckhUTUwgPSBlcnJvcnMuam9pbihcIjxici8+XCIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZXJyb3JDYXJkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9XG4gICAgbWF0ZXJpYWxpemVfY3NzXzEuZGVmYXVsdC51cGRhdGVUZXh0RmllbGRzKCk7XG4gICAgbWF0ZXJpYWxpemVfY3NzXzEuZGVmYXVsdC50ZXh0YXJlYUF1dG9SZXNpemUob3V0cHV0KTtcbiAgICBpY29uUHJldmlldygpO1xufVxuZnVuY3Rpb24gdHJ5U2F2ZVRoZW1lKGFwcGx5ID0gZmFsc2UpIHtcbiAgICB0cnkge1xuICAgICAgICBzYXZlVGhlbWUoYXBwbHkpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGFsZXJ0KGVycik7XG4gICAgfVxufVxuLyoqXG4gKiBTYXZlcyB0aGUgdGhlbWUgY3VycmVudGx5IGRpc3BsYXllZCBpbiB0aGUgcHJldmlldyB3aXRoIHRoZSBnaXZlbiBuYW1lLlxuICogSWYgdGhlIHF1ZXJ5c3RyaW5nIHBhcmFtZXRlciBgdGhlbWVgIGV4aXN0cywgaXQgd2lsbCByZW5hbWUgdGhlIHRoZW1lIHdpdGggdGhhdCB2YWx1ZVxuICogQHBhcmFtIHtib29sZWFufSBbYXBwbHk9ZmFsc2VdIElmIHRydWUsIGFwcGxpZXMgdGhlIHRoZW1lIGFuZCByZXR1cm5zIHRvIGRlZmF1bHREb21haW5cbiAqL1xuZnVuY3Rpb24gc2F2ZVRoZW1lKGFwcGx5ID0gZmFsc2UsIGltcG9ydGVkID0gZmFsc2UsIHJhd1RoZW1lKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlBsZWFzZSBmaXggYWxsIGVycm9ycyBiZWZvcmUgc2F2aW5nIHRoZSB0aGVtZTpcXG5cIiArIGVycm9ycy5qb2luKFwiXFxuXCIpKTtcbiAgICBsZXQgdCA9IHJhd1RoZW1lICE9PSBudWxsICYmIHJhd1RoZW1lICE9PSB2b2lkIDAgPyByYXdUaGVtZSA6IEpTT04ucGFyc2Uob3V0cHV0LnZhbHVlKTtcbiAgICBpZiAob3JpZ1RoZW1lTmFtZSAmJiB0Lm5hbWUgIT0gb3JpZ1RoZW1lTmFtZSkge1xuICAgICAgICBDb25maXJtTW9kYWwub3BlbihcIlJlbmFtZSBUaGVtZT9cIiwgYEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byByZW5hbWUgXCIke29yaWdUaGVtZU5hbWV9XCIgdG8gXCIke3QubmFtZX1cIj9gLCBbXCJSZW5hbWVcIiwgXCJDYW5jZWxcIl0sIGIgPT4gYiA9PT0gXCJSZW5hbWVcIiAmJiBkb1NhdmUodCkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgKDAsIGFuYWx5dGljc18xLnRyYWNrRXZlbnQpKFwicGVyZm9ybV9hY3Rpb25cIiwge1xuICAgICAgICAgICAgaWQ6IFwiY29sb3JfdHlwZVwiLFxuICAgICAgICAgICAgY29udGV4dDogXCJOZXcgVGhlbWUgQ3JlYXRlZFwiLFxuICAgICAgICAgICAgdmFsdWU6IE9iamVjdC5rZXlzKHQuY29sb3IpLmZpbmQoayA9PiBrICE9PSBcIm1vZGVyblwiKSxcbiAgICAgICAgICAgIGxlZ2FjeVRhcmdldDogXCJjb2xvcl90eXBlXCIsXG4gICAgICAgICAgICBsZWdhY3lBY3Rpb246IE9iamVjdC5rZXlzKHQuY29sb3IpLmZpbmQoayA9PiBrICE9PSBcIm1vZGVyblwiKSxcbiAgICAgICAgICAgIGxlZ2FjeUxhYmVsOiBcIk5ldyBUaGVtZSBDcmVhdGVkXCIsXG4gICAgICAgIH0pO1xuICAgICAgICAoMCwgYW5hbHl0aWNzXzEudHJhY2tFdmVudCkoXCJwZXJmb3JtX2FjdGlvblwiLCB7XG4gICAgICAgICAgICBpZDogXCJsb2dvX3R5cGVcIixcbiAgICAgICAgICAgIGNvbnRleHQ6IFwiTmV3IFRoZW1lIENyZWF0ZWRcIixcbiAgICAgICAgICAgIHZhbHVlOiAoKF9hID0gdCA9PT0gbnVsbCB8fCB0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0LmxvZ28pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wcmVzZXQpIHx8IFwiY3VzdG9tXCIsXG4gICAgICAgICAgICBsZWdhY3lUYXJnZXQ6IFwibG9nb190eXBlXCIsXG4gICAgICAgICAgICBsZWdhY3lBY3Rpb246ICgoX2IgPSB0ID09PSBudWxsIHx8IHQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHQubG9nbykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnByZXNldCkgfHwgXCJjdXN0b21cIixcbiAgICAgICAgICAgIGxlZ2FjeUxhYmVsOiBcIk5ldyBUaGVtZSBDcmVhdGVkXCIsXG4gICAgICAgIH0pO1xuICAgICAgICAoMCwgYW5hbHl0aWNzXzEudHJhY2tFdmVudCkoXCJwZXJmb3JtX2FjdGlvblwiLCB7XG4gICAgICAgICAgICBpZDogXCJjdXJzb3JfdHlwZVwiLFxuICAgICAgICAgICAgY29udGV4dDogXCJOZXcgVGhlbWUgQ3JlYXRlZFwiLFxuICAgICAgICAgICAgdmFsdWU6IHQuY3Vyc29yID8gXCJwcmltYXJ5XCIgOiBcIm5vbmVcIixcbiAgICAgICAgICAgIGxlZ2FjeVRhcmdldDogXCJjdXJzb3JfdHlwZVwiLFxuICAgICAgICAgICAgbGVnYWN5QWN0aW9uOiB0LmN1cnNvciA/IFwicHJpbWFyeVwiIDogXCJub25lXCIsXG4gICAgICAgICAgICBsZWdhY3lMYWJlbDogXCJOZXcgVGhlbWUgQ3JlYXRlZFwiLFxuICAgICAgICB9KTtcbiAgICAgICAgKDAsIGFuYWx5dGljc18xLnRyYWNrRXZlbnQpKFwicGVyZm9ybV9hY3Rpb25cIiwge1xuICAgICAgICAgICAgaWQ6IFwibW9kZXJuX2VuYWJsZWRcIixcbiAgICAgICAgICAgIGNvbnRleHQ6IFwiTmV3IFRoZW1lIENyZWF0ZWRcIixcbiAgICAgICAgICAgIHZhbHVlOiBTdHJpbmcoISF0LmNvbG9yLm1vZGVybiksXG4gICAgICAgICAgICBsZWdhY3lUYXJnZXQ6IFwibW9kZXJuX2VuYWJsZWRcIixcbiAgICAgICAgICAgIGxlZ2FjeUFjdGlvbjogU3RyaW5nKCEhdC5jb2xvci5tb2Rlcm4pLFxuICAgICAgICAgICAgbGVnYWN5TGFiZWw6IFwiTmV3IFRoZW1lIENyZWF0ZWRcIixcbiAgICAgICAgfSk7XG4gICAgICAgICgwLCBhbmFseXRpY3NfMS50cmFja0V2ZW50KShcInBlcmZvcm1fYWN0aW9uXCIsIHtcbiAgICAgICAgICAgIGlkOiBcInByZXNldFwiLFxuICAgICAgICAgICAgY29udGV4dDogXCJOZXcgVGhlbWUgQ3JlYXRlZFwiLFxuICAgICAgICAgICAgdmFsdWU6IGltcG9ydGVkID8gXCJJbXBvcnRlZFwiIDogbGFzdFNlbGVjdGVkVGVtcGxhdGUgIT09IG51bGwgJiYgbGFzdFNlbGVjdGVkVGVtcGxhdGUgIT09IHZvaWQgMCA/IGxhc3RTZWxlY3RlZFRlbXBsYXRlIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgbGVnYWN5VGFyZ2V0OiBcInByZXNldFwiLFxuICAgICAgICAgICAgbGVnYWN5QWN0aW9uOiBpbXBvcnRlZCA/IFwiSW1wb3J0ZWRcIiA6IGxhc3RTZWxlY3RlZFRlbXBsYXRlICE9PSBudWxsICYmIGxhc3RTZWxlY3RlZFRlbXBsYXRlICE9PSB2b2lkIDAgPyBsYXN0U2VsZWN0ZWRUZW1wbGF0ZSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGxlZ2FjeUxhYmVsOiBcIk5ldyBUaGVtZSBDcmVhdGVkXCIsXG4gICAgICAgIH0pO1xuICAgICAgICBkb1NhdmUodCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRvU2F2ZSh0KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBzID0geWllbGQgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoeyB0aGVtZXM6IFtdIH0pO1xuICAgICAgICAgICAgICAgIGxldCB0aGVtZXMgPSBzLnRoZW1lcy5maWx0ZXIoKHgpID0+IHgubmFtZSAhPSAob3JpZ1RoZW1lTmFtZSB8fCB0Lm5hbWUpKTtcbiAgICAgICAgICAgICAgICB0aGVtZXMucHVzaCh0KTtcbiAgICAgICAgICAgICAgICB5aWVsZCBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7IHRoZW1lczogdGhlbWVzIH0pO1xuICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yKCk7XG4gICAgICAgICAgICAgICAgQ29uZmlybU1vZGFsLm9wZW4oXCJUaGVtZSBzYXZlZCBzdWNjZXNzZnVsbHlcIiwgXCJcIiwgW1wiT0tcIl0sICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgb3JpZ1RoZW1lTmFtZSA9IHQubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFwcGx5KVxuICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyB0aGVtZTogdC5uYW1lIH0sICgpID0+IChsb2NhdGlvbi5ocmVmID0gYGh0dHBzOi8vJHtkZWZhdWx0RG9tYWlufWApKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBoYW5kbGVFcnJvcigpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgaWYgKGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoKF9hID0gY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yLm1lc3NhZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5pbmNsdWRlcyhcIlFVT1RBX0JZVEVTX1BFUl9JVEVNXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydChcIk5vIHNwYWNlIHJlbWFpbmluZyB0byBzYXZlIHRoZW1lLiBQbGVhc2UgZGVsZXRlIGFub3RoZXIgdGhlbWUgb3IgbWFrZSB0aGlzIHRoZW1lIHNtYWxsZXIgaW4gb3JkZXIgdG8gc2F2ZS4gTW9zdCBjb21tb25seSB0aGVtZXMgYXJlIHRvbyBsYXJnZSBpZiB0aGV5IGhhdmUgdG9vIG1hbnkgY3VzdG9tIGljb25zLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHNwYWNlIHJlbWFpbmluZyB0byBzYXZlIHRoZW1lLiBQbGVhc2UgZGVsZXRlIGFub3RoZXIgdGhlbWUgb3IgbWFrZSB0aGlzIHRoZW1lIHNtYWxsZXIgaW4gb3JkZXIgdG8gc2F2ZS4gTW9zdCBjb21tb25seSB0aGVtZXMgYXJlIHRvbyBsYXJnZSBpZiB0aGV5IGhhdmUgdG9vIG1hbnkgY3VzdG9tIGljb25zLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuLyoqXG4gKiBSZXR1cm5zIGEgdmFsaWQgQ1NTIGNvbG9yIHN0cmluZyBpZiBpbnB1dCBpcyB2YWxpZCwgZWxzZSByZXR1cm5zIGFuIGVtcHR5IHN0cmluZ1xuICogQHBhcmFtIHtzdHJpbmd9IGMgQSBwb3NzaWJseSB2YWxpZCBDU1MgY29sb3Igc3RyaW5nXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIHZhbGlkIENTUyBjb2xvciBzdHJpbmcgb3IgYFwiXCJgIGlmIGlucHV0IHdhcyBpbnZhbGlkXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlQ29sb3IoYykge1xuICAgIHZhciBlbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGVsZS5zdHlsZS5jb2xvciA9IGM7XG4gICAgcmV0dXJuIGVsZS5zdHlsZS5jb2xvci5zcGxpdCgvXFxzKy8pLmpvaW4oXCJcIikudG9Mb3dlckNhc2UoKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGEgVVJMIHBvaW50cyB0byBhIHZhbGlkIGltYWdlXG4gKiBAcGFyYW0ge3N0cmluZ30gaW1hZ2VTcmMgQW4gaW1hZ2UgVVJMXG4gKiBAcGFyYW0geyhFdmVudCl9IHZhbGlkQ2FsbGJhY2sgQ2FsbGJhY2sgaWYgaW1hZ2UgaXMgdmFsaWRcbiAqIEBwYXJhbSB7KEVycm9yRXZlbnQpfSBpbnZhbGlkQ2FsbGJhY2sgQ2FsbGJhY2sgaWYgaW1hZ2UgaXMgaW52YWxpZFxuICovXG5mdW5jdGlvbiBjaGVja0ltYWdlKGltYWdlU3JjLCB2YWxpZENhbGxiYWNrLCBpbnZhbGlkQ2FsbGJhY2spIHtcbiAgICB0cnkge1xuICAgICAgICB2YXIgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGlmICh2YWxpZENhbGxiYWNrKVxuICAgICAgICAgICAgaW1nLm9ubG9hZCA9IHZhbGlkQ2FsbGJhY2s7XG4gICAgICAgIGlmIChpbnZhbGlkQ2FsbGJhY2spXG4gICAgICAgICAgICBpbWcub25lcnJvciA9IGludmFsaWRDYWxsYmFjaztcbiAgICAgICAgaW1nLnNyYyA9IGltYWdlU3JjO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgaW52YWxpZENhbGxiYWNrID09PSBudWxsIHx8IGludmFsaWRDYWxsYmFjayA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW52YWxpZENhbGxiYWNrKCk7XG4gICAgfVxufVxuLyoqXG4gKiBDaGVja3MgaWYgYSBzdHJpbmcgaXMgYSB2YWxpZCBKU09OIG9iamVjdFxuICogQHBhcmFtIHtzdHJpbmd9IHN0ciBBIEpTT04gc3RyaW5nXG4gKiBAcmV0dXJucyB7e318Ym9vbGVhbn0gVGhlIG9iamVjdCBpZiBpdCBpcyB2YWxpZCBKU09OLCBlbHNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIHBhcnNlSlNPTk9iamVjdChzdHIpIHtcbiAgICB2YXIgaXNPYmplY3QgPSAodmFsKSA9PiAodmFsIGluc3RhbmNlb2YgT2JqZWN0ID8gdHJ1ZSA6IGZhbHNlKTtcbiAgICB0cnkge1xuICAgICAgICBsZXQgbyA9IEpTT04ucGFyc2Uoc3RyKTtcbiAgICAgICAgcmV0dXJuIGlzT2JqZWN0KG8pID8gbyA6IGZhbHNlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuLyoqXG4gKiBBcHBsaWVzIHRoZSB0aGVtZSB3aXRoIHRoZSBnaXZlbiBuYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gdCBUaGUgdGhlbWUncyBuYW1lXG4gKi9cbmZ1bmN0aW9uIGFwcGx5VGhlbWUodCkge1xuICAgIGltcG9ydEFuZFJlbmRlcihhbGxUaGVtZXNbdF0pO1xufVxuLyoqXG4gKiBEZWxldGVzIGEgdGhlbWUgd2l0aCB0aGUgZ2l2ZW4gbmFtZSBmcm9tIHRoZSBDaHJvbWUgU3luYyBTdG9yYWdlXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBUaGUgdGhlbWUncyBuYW1lXG4gKi9cbmZ1bmN0aW9uIGRlbGV0ZVRoZW1lKG5hbWUpIHtcbiAgICBDb25maXJtTW9kYWwub3BlbihcIkRlbGV0ZSBUaGVtZT9cIiwgYEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhlIHRoZW1lIFwiJHtuYW1lfVwiP1xcblRoZSBwYWdlIHdpbGwgcmVsb2FkIHdoZW4gdGhlIHRoZW1lIGlzIGRlbGV0ZWQuYCwgW1wiRGVsZXRlXCIsIFwiQ2FuY2VsXCJdLCAoYikgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBpZiAoYiA9PT0gXCJEZWxldGVcIikge1xuICAgICAgICAgICAgKDAsIGFuYWx5dGljc18xLnRyYWNrRXZlbnQpKFwiYnV0dG9uX2NsaWNrXCIsIHtcbiAgICAgICAgICAgICAgICBpZDogXCJkZWxldGUtdGhlbWVcIixcbiAgICAgICAgICAgICAgICBjb250ZXh0OiBcIlRoZW1lIExpc3RcIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogbmFtZSxcbiAgICAgICAgICAgICAgICBsZWdhY3lUYXJnZXQ6IGBUaGVtZTogJHtuYW1lfWAsXG4gICAgICAgICAgICAgICAgbGVnYWN5QWN0aW9uOiBcImRlbGV0ZVwiLFxuICAgICAgICAgICAgICAgIGxlZ2FjeUxhYmVsOiBcIlRoZW1lIExpc3RcIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbGV0IHMgPSB5aWVsZCBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldChbXCJ0aGVtZVwiLCBcInRoZW1lc1wiXSk7XG4gICAgICAgICAgICB5aWVsZCBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7XG4gICAgICAgICAgICAgICAgdGhlbWU6IHMudGhlbWUgPT0gbmFtZSA/IG51bGwgOiBzLnRoZW1lLFxuICAgICAgICAgICAgICAgIHRoZW1lczogcy50aGVtZXMuZmlsdGVyKCh4KSA9PiB4Lm5hbWUgIT0gbmFtZSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgfVxuICAgIH0pKTtcbn1cbi8qKlxuICogT3BlbnMgdGhlIGVkaXRvciBpbnRlcmZhY2Ugd2l0aCB0aGUgZ2l2ZW4gdGhlbWUgc2VsZWN0ZWQsIG9yXG4gKiBub25lIHNlbGVjdGVkIGlmIG5hbWUgbm90IHByb3ZpZGVkXG4gKiBAcGFyYW0ge3N0cmluZ30gW25hbWVdIFRoZSB0aGVtZSB0byBlZGl0XG4gKi9cbmZ1bmN0aW9uIGVkaXRUaGVtZShuYW1lLCByZXBsYWNlTmFtZSkge1xuICAgIGlmIChyZXBsYWNlTmFtZSkge1xuICAgICAgICBsYXN0U2VsZWN0ZWRUZW1wbGF0ZSA9IG5hbWU7XG4gICAgfVxuICAgICgwLCBhbmFseXRpY3NfMS50cmFja0V2ZW50KShcImJ1dHRvbl9jbGlja1wiLCB7XG4gICAgICAgIGlkOiBcImVkaXQtdGhlbWVcIixcbiAgICAgICAgY29udGV4dDogXCJUaGVtZSBMaXN0XCIsXG4gICAgICAgIHZhbHVlOiBuYW1lLFxuICAgICAgICBsZWdhY3lUYXJnZXQ6IGBUaGVtZTogJHtuYW1lfWAsXG4gICAgICAgIGxlZ2FjeUFjdGlvbjogXCJlZGl0XCIsXG4gICAgICAgIGxlZ2FjeUxhYmVsOiBcIlRoZW1lIExpc3RcIixcbiAgICB9KTtcbiAgICBjbGVhckludGVydmFsKHJhaW5ib3dJbnRlcnZhbCk7XG4gICAgdGhlbWVzTGlzdFNlY3Rpb24uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcbiAgICB0aGVtZUVkaXRvclNlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcbiAgICBsZXQgdGhlbWVUb0xvYWQgPSBuYW1lID8gYWxsVGhlbWVzW25hbWVdIDogeyBuYW1lOiBcIk15IFRoZW1lXCIsIGh1ZTogMjEwIH07XG4gICAgaWYgKHJlcGxhY2VOYW1lKSB7XG4gICAgICAgIHRoZW1lVG9Mb2FkLm5hbWUgPSByZXBsYWNlTmFtZTtcbiAgICB9XG4gICAgaW1wb3J0QW5kUmVuZGVyKHRoZW1lVG9Mb2FkKTtcbiAgICBwcmV2aWV3U2VjdGlvbi5jbGFzc0xpc3QuYWRkKFwic2hvdy1lZGl0b3ItY29udHJvbHNcIik7XG4gICAgb3V0cHV0LnJlbW92ZUF0dHJpYnV0ZShcInJlYWRvbmx5XCIpO1xuICAgIEFycmF5LmZyb20oaWNvbkxpc3QucXVlcnlTZWxlY3RvckFsbChcIi5jbGFzcy1uYW1lLCAuaWNvbi11cmxcIikpLm1hcCh4ID0+IHguc2V0QXR0cmlidXRlKFwiY29udGVudGVkaXRhYmxlXCIsIFwidHJ1ZVwiKSk7XG4gICAgb3JpZ1RoZW1lTmFtZSA9IHJlcGxhY2VOYW1lIHx8IG5hbWU7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNqc29uLW91dHB1dCArIGxhYmVsXCIpLnRleHRDb250ZW50ID0gXCJKU09OIChQYXN0ZSB0byBpbXBvcnQgYSB0aGVtZSlcIjtcbn1cbi8qKlxuICogT3BlbnMgYSBtb2RhbCBhbGxvd2luZyB1c2VyIHRvIHBhc3RlIGEgSlNPTiB0aGVtZSBzdHJpbmdcbiAqIGFuZCB0aGVuIHNhdmVzIHRoZSBwcm92aWRlZCB0aGVtZVxuICovXG5mdW5jdGlvbiBpbXBvcnRUaGVtZSgpIHtcbiAgICBQcm9tcHRNb2RhbC5vcGVuKFwiSW1wb3J0IFRoZW1lXCIsIFwiUGFzdGUgdGhlbWUgSlNPTiBoZXJlXCIsIFtcIkltcG9ydFwiLCBcIkNhbmNlbFwiXSwgKGJ1dHRvbiwgdGV4dCkgPT4ge1xuICAgICAgICBpZiAoYnV0dG9uID09PSBcIkltcG9ydFwiKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBqID0gSlNPTi5wYXJzZSh0ZXh0KTtcbiAgICAgICAgICAgICAgICBpbXBvcnRBbmRSZW5kZXIoaik7XG4gICAgICAgICAgICAgICAgc2F2ZVRoZW1lKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgICAgIENvbmZpcm1Nb2RhbC5vcGVuKFwiRXJyb3IgSW1wb3J0aW5nIFRoZW1lXCIsIGVycm9ycy5sZW5ndGggPiAwID8gZXJyb3JzLmpvaW4oKSA6IFwiUGxlYXNlIHByb3ZpZGUgYSB2YWxpZCBKU09OIHN0cmluZ1wiLCBbXCJPS1wiXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBcImltcG9ydC10aGVtZVwiKTtcbn1cbi8qKlxuICogQ3ljbGVzIHRoZSBjb2xvciBvZiB0aGUgaW50ZXJmYWNlXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlUmFpbmJvd0Z1bmN0aW9uKHRoZW1lKSB7XG4gICAgaWYgKHRoZW1lLmNvbG9yLnJhaW5ib3cpIHtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2gsIF9qLCBfaywgX2wsIF9tLCBfbywgX3AsIF9xO1xuICAgICAgICAgICAgbGV0IGh1ZSA9IDA7XG4gICAgICAgICAgICBsZXQgc2F0dXJhdGlvbiA9IDA7XG4gICAgICAgICAgICBsZXQgbGlnaHRuZXNzID0gMDtcbiAgICAgICAgICAgIGxldCB0aW1lID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7XG4gICAgICAgICAgICAvLyBFcXVhdGlvbiBmb3IgdGltZS1iYXNlZCBodWUsIHNhdHVyYXRpb24sIGxpZ2h0bmVzczpcbiAgICAgICAgICAgIC8vIGh1ZSA9ICgoKHRpbWUgLyAoMTUwIC0gc3BlZWQpKSArIG9mZnNldCkgJSAoYWx0ZXJuYXRlID8gcmFuZ2UgKiAyIDogcmFuZ2UpKSArIG1pblxuICAgICAgICAgICAgLy8gaWYgYWx0ZXJuYXRlIGFuZCBodWUgPiBtYXg6IGh1ZSA9IG1heCAtIChodWUgLSBtYXgpXG4gICAgICAgICAgICBpZiAoKF9iID0gKF9hID0gdGhlbWUuY29sb3IucmFpbmJvdykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmh1ZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmFuaW1hdGUpIHtcbiAgICAgICAgICAgICAgICBsZXQgbyA9IHRoZW1lLmNvbG9yLnJhaW5ib3cuaHVlLmFuaW1hdGU7XG4gICAgICAgICAgICAgICAgaWYgKG8ubWF4IDwgby5taW4pIHtcbiAgICAgICAgICAgICAgICAgICAgby5tYXggKz0gMzYwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBodWUgPSBnZXRDb21wb25lbnRWYWx1ZShvLCB0aW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGh1ZSA9IChfZSA9IChfZCA9IChfYyA9IHRoZW1lLmNvbG9yLnJhaW5ib3cpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5odWUpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC52YWx1ZSkgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogMjEwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKChfZyA9IChfZiA9IHRoZW1lLmNvbG9yLnJhaW5ib3cpID09PSBudWxsIHx8IF9mID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZi5zYXR1cmF0aW9uKSA9PT0gbnVsbCB8fCBfZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2cuYW5pbWF0ZSkge1xuICAgICAgICAgICAgICAgIHNhdHVyYXRpb24gPSBnZXRDb21wb25lbnRWYWx1ZSh0aGVtZS5jb2xvci5yYWluYm93LnNhdHVyYXRpb24uYW5pbWF0ZSwgdGltZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzYXR1cmF0aW9uID0gKF9rID0gKF9qID0gKF9oID0gdGhlbWUuY29sb3IucmFpbmJvdykgPT09IG51bGwgfHwgX2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9oLnNhdHVyYXRpb24pID09PSBudWxsIHx8IF9qID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfai52YWx1ZSkgIT09IG51bGwgJiYgX2sgIT09IHZvaWQgMCA/IF9rIDogMTAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKChfbSA9IChfbCA9IHRoZW1lLmNvbG9yLnJhaW5ib3cpID09PSBudWxsIHx8IF9sID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbC5saWdodG5lc3MpID09PSBudWxsIHx8IF9tID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbS5hbmltYXRlKSB7XG4gICAgICAgICAgICAgICAgbGlnaHRuZXNzID0gZ2V0Q29tcG9uZW50VmFsdWUodGhlbWUuY29sb3IucmFpbmJvdy5saWdodG5lc3MuYW5pbWF0ZSwgdGltZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBsaWdodG5lc3MgPSAoX3EgPSAoX3AgPSAoX28gPSB0aGVtZS5jb2xvci5yYWluYm93KSA9PT0gbnVsbCB8fCBfbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX28ubGlnaHRuZXNzKSA9PT0gbnVsbCB8fCBfcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3AudmFsdWUpICE9PSBudWxsICYmIF9xICE9PSB2b2lkIDAgPyBfcSA6IDEwMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tY29sb3ItaHVlXCIsIGh1ZS50b1N0cmluZygpKTtcbiAgICAgICAgICAgICgwLCBkb21fMS5zZXRDU1NWYXJpYWJsZSkoXCJwcmltYXJ5LWNvbG9yXCIsIGBoc2wodmFyKC0tY29sb3ItaHVlKSwgJHtzYXR1cmF0aW9ufSUsICR7bGlnaHRuZXNzfSUpYCk7XG4gICAgICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwiYmFja2dyb3VuZC1jb2xvclwiLCBcImhzbCh2YXIoLS1jb2xvci1odWUpLCA2MCUsIDMwJSlcIik7XG4gICAgICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwiaG92ZXItY29sb3JcIiwgXCJoc2wodmFyKC0tY29sb3ItaHVlKSwgNTUlLCA0MCUpXCIpO1xuICAgICAgICAgICAgKDAsIGRvbV8xLnNldENTU1ZhcmlhYmxlKShcImJvcmRlci1jb2xvclwiLCBcImhzbCh2YXIoLS1jb2xvci1odWUpLCA2MCUsIDI1JSlcIik7XG4gICAgICAgICAgICAoMCwgZG9tXzEuc2V0Q1NTVmFyaWFibGUpKFwibGluay1jb2xvclwiLCBcImhzbCh2YXIoLS1jb2xvci1odWUpLCA1NSUsIDQwJSlcIik7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgZnVuY3Rpb24gZ2V0Q29tcG9uZW50VmFsdWUoYW5pbWF0ZU9iamVjdCwgdGltZSkge1xuICAgICAgICBsZXQgeyBzcGVlZCwgb2Zmc2V0LCBhbHRlcm5hdGUsIG1pbiwgbWF4IH0gPSBhbmltYXRlT2JqZWN0O1xuICAgICAgICBsZXQgcmFuZ2UgPSBtYXggLSBtaW47XG4gICAgICAgIGxldCB2ID0gKCh0aW1lIC8gKDE1MCAtIHNwZWVkKSArICtvZmZzZXQpICUgKGFsdGVybmF0ZSA/IHJhbmdlICogMiA6IHJhbmdlKSkgKyBtaW47XG4gICAgICAgIGlmIChhbHRlcm5hdGUgJiYgdiA+IG1heCkge1xuICAgICAgICAgICAgdiA9IG1heCAtICh2IC0gbWF4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdjtcbiAgICB9XG59XG5mdW5jdGlvbiBhZGRJY29uKCkge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mO1xuICAgICgwLCBhbmFseXRpY3NfMS50cmFja0V2ZW50KShcImJ1dHRvbl9jbGlja1wiLCB7XG4gICAgICAgIGlkOiBcImFkZC10aGVtZS1pY29uXCIsXG4gICAgICAgIGNvbnRleHQ6IFwiVGhlbWUgRWRpdG9yXCIsXG4gICAgICAgIGxlZ2FjeVRhcmdldDogXCJuZXctaWNvblwiLFxuICAgICAgICBsZWdhY3lBY3Rpb246IFwiY2xpY2tcIixcbiAgICAgICAgbGVnYWN5TGFiZWw6IFwiVGhlbWUgRWRpdG9yXCIsXG4gICAgfSk7XG4gICAgbGV0IHRlbXBsYXRlID0gYDx0ZCBzdHlsZT10ZXh0LWFsaWduOmNlbnRlcj48YSBjbGFzcz1cImFjdGlvbi1idXR0b24gdG9vbHRpcHBlZCBhcnJvdy1idXR0b24gbW92ZS1kb3duXCJkYXRhLXRvb2x0aXA9XCJNb3ZlIERvd25cIj48aSBjbGFzcz1tYXRlcmlhbC1pY29ucz5hcnJvd19kb3dud2FyZDwvaT4gPC9hPjxhIGNsYXNzPVwiYWN0aW9uLWJ1dHRvbiB0b29sdGlwcGVkIGFycm93LWJ1dHRvbiBtb3ZlLXVwXCJkYXRhLXRvb2x0aXA9XCJNb3ZlIFVwXCI+PGkgY2xhc3M9bWF0ZXJpYWwtaWNvbnM+YXJyb3dfdXB3YXJkPC9pPjwvYT48dGQgY2xhc3M9Y2xhc3MtbmFtZSBkYXRhLXRleHQ9XCJDbGFzcyBOYW1lIFBhdHRlcm5cIj48dGQgY2xhc3M9aWNvbi11cmwgZGF0YS10ZXh0PVwiSWNvbiBVUkwgb3IgcGFzdGUvZHJvcCBpbWFnZVwiPjx0ZD48aW1nIGNsYXNzPVwic21hbGwtaWNvbi1wcmV2aWV3XCIgaGVpZ2h0PTMyLz48L3RkPjx0ZD48YSBjbGFzcz1cImFjdGlvbi1idXR0b24gdG9vbHRpcHBlZCBidG4tZmxhdCBkZWxldGUtaWNvbi1idXR0b24gcmlnaHQgd2F2ZXMtZWZmZWN0IHdhdmVzLWxpZ2h0XCJkYXRhLXRvb2x0aXA9RGVsZXRlPjxpIGNsYXNzPW1hdGVyaWFsLWljb25zPmRlbGV0ZTwvaT48L2E+YDtcbiAgICBsZXQgdHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidHJcIik7XG4gICAgdHIuaW5uZXJIVE1MID0gdGVtcGxhdGU7XG4gICAgaWNvbkxpc3QuYXBwZW5kQ2hpbGQodHIpO1xuICAgIGxldCBwcmV2aWV3ID0gdHIucXVlcnlTZWxlY3RvcihcIi5zbWFsbC1pY29uLXByZXZpZXdcIik7XG4gICAgKF9hID0gdHIucXVlcnlTZWxlY3RvcihcIi5tb3ZlLWRvd25cIikpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgbW92ZURvd24pO1xuICAgIChfYiA9IHRyLnF1ZXJ5U2VsZWN0b3IoXCIubW92ZS11cFwiKSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBtb3ZlVXApO1xuICAgIChfYyA9IHRyLnF1ZXJ5U2VsZWN0b3IoXCIuZGVsZXRlLWljb24tYnV0dG9uXCIpKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGRlbGV0ZUljb24pO1xuICAgIC8vIFJlcGxhY2VzIHBhc3RlZCBpbWFnZXMgd2l0aCBkYXRhIHVybHNcbiAgICAoX2QgPSB0ci5xdWVyeVNlbGVjdG9yKFwiLmljb24tdXJsXCIpKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuYWRkRXZlbnRMaXN0ZW5lcihcInBhc3RlXCIsIHVwbG9hZEFuZFBhc3RlKTtcbiAgICBpbml0aWFsaXplRHJhZ0FuZERyb3AodHIucXVlcnlTZWxlY3RvcihcIi5pY29uLXVybFwiKSwgdHIucXVlcnlTZWxlY3RvcihcIi5zbWFsbC1pY29uLXByZXZpZXdcIiksIFwidGV4dENvbnRlbnRcIik7XG4gICAgLy8gUmVwbGFjZXMgcGFzdGVkIEhUTUwgd2l0aCBwbGFpbiB0ZXh0XG4gICAgKF9lID0gdHIucXVlcnlTZWxlY3RvcihcIi5jbGFzcy1uYW1lXCIpKSA9PT0gbnVsbCB8fCBfZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2UuYWRkRXZlbnRMaXN0ZW5lcihcInBhc3RlXCIsIHBsYWluVGV4dFBhc3RlKTtcbiAgICAoX2YgPSB0ci5xdWVyeVNlbGVjdG9yKFwiLmljb24tdXJsXCIpKSA9PT0gbnVsbCB8fCBfZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2YuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIGUgPT4gKHByZXZpZXcuc3JjID0gZS50YXJnZXQudGV4dENvbnRlbnQpKTtcbiAgICBBcnJheS5mcm9tKHRyLnF1ZXJ5U2VsZWN0b3JBbGwoXCJ0ZFwiKSkubWFwKHggPT4geC5hZGRFdmVudExpc3RlbmVyKFwiYmx1clwiLCBlID0+IChlLnRhcmdldC5zY3JvbGxMZWZ0ID0gMCkpKTtcbiAgICBtYXRlcmlhbGl6ZV9jc3NfMS5kZWZhdWx0LlRvb2x0aXAuaW5pdCh0ci5xdWVyeVNlbGVjdG9yQWxsKFwiLnRvb2x0aXBwZWRcIiksIHtcbiAgICAgICAgb3V0RHVyYXRpb246IDAsXG4gICAgICAgIGluRHVyYXRpb246IDMwMCxcbiAgICAgICAgZW50ZXJEZWxheTogMCxcbiAgICAgICAgZXhpdERlbGF5OiAxMCxcbiAgICB9KTtcbiAgICBpZiAoaW5FZGl0TW9kZSgpKSB7XG4gICAgICAgIGxldCBhcnIgPSBBcnJheS5mcm9tKHRyLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2xhc3MtbmFtZSwgLmljb24tdXJsXCIpKTtcbiAgICAgICAgYXJyLm1hcCh4ID0+IHguc2V0QXR0cmlidXRlKFwiY29udGVudGVkaXRhYmxlXCIsIFwidHJ1ZVwiKSk7XG4gICAgICAgIGFyci5tYXAoeCA9PiB4LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCB1cGRhdGVPdXRwdXQpKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyO1xufVxuZnVuY3Rpb24gdXBsb2FkQW5kUGFzdGUocGFzdGVFdmVudCkge1xuICAgIHZhciBfYTtcbiAgICBsZXQgaXRlbXMgPSAoX2EgPSAocGFzdGVFdmVudC5jbGlwYm9hcmREYXRhIHx8XG4gICAgICAgIHBhc3RlRXZlbnQub3JpZ2luYWxFdmVudC5jbGlwYm9hcmREYXRhKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLml0ZW1zO1xuICAgIGxldCBibG9iID0gbnVsbDtcbiAgICBmb3IgKGxldCBpIG9mIGl0ZW1zICE9PSBudWxsICYmIGl0ZW1zICE9PSB2b2lkIDAgPyBpdGVtcyA6IFtdKSB7XG4gICAgICAgIGlmIChpLnR5cGUuaW5kZXhPZihcImltYWdlXCIpID09PSAwKSB7XG4gICAgICAgICAgICBibG9iID0gaS5nZXRBc0ZpbGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoYmxvYiAhPT0gbnVsbCkge1xuICAgICAgICBwYXN0ZUV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHBhc3RlRXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGxldCBwYXN0ZUVsZW1lbnQgPSBwYXN0ZUV2ZW50LnRhcmdldDtcbiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgbGV0IHRleHQgPSBlLnRhcmdldC5yZXN1bHQ7XG4gICAgICAgICAgICBwYXN0ZUVsZW1lbnQuZGF0YXNldC5vcmlnaW5hbFRleHQgPSBwYXN0ZUVsZW1lbnQuZGF0YXNldC50ZXh0O1xuICAgICAgICAgICAgcGFzdGVFbGVtZW50LmRhdGFzZXQudGV4dCA9IFwiVXBsb2FkaW5nLi4uXCI7XG4gICAgICAgICAgICBsZXQgdCA9IG1hdGVyaWFsaXplX2Nzc18xLmRlZmF1bHQudG9hc3QoeyBodG1sOiBgVXBsb2FkaW5nIGltYWdlLi4uYCwgZGlzcGxheUxlbmd0aDogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIgfSk7XG4gICAgICAgICAgICBpbWd1clVwbG9hZCh0ZXh0ID09PSBudWxsIHx8IHRleHQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRleHQudG9TdHJpbmcoKSwgcmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICB0LmRpc21pc3MoKTtcbiAgICAgICAgICAgICAgICBsZXQgbGluayA9IHJlc3VsdC5kYXRhLmxpbms7XG4gICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5Q29tbWFuZFN1cHBvcnRlZChcImluc2VydFRleHRcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJpbnNlcnRUZXh0XCIsIGZhbHNlLCBsaW5rKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKFwicGFzdGVcIiwgZmFsc2UsIGxpbmspO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAoMCwgYW5hbHl0aWNzXzEudHJhY2tFdmVudCkoXCJwZXJmb3JtX2FjdGlvblwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBcInBhc3RlXCIsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IFwiVGhlbWUgRWRpdG9yXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcImljb24taW1hZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgbGVnYWN5VGFyZ2V0OiBcImljb24taW1hZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgbGVnYWN5QWN0aW9uOiBcInBhc3RlXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlZ2FjeUxhYmVsOiBcIlRoZW1lIEVkaXRvclwiLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8vIHByZXZpZXcuc3JjID0gbGluaztcbiAgICAgICAgICAgICAgICBwYXN0ZUVsZW1lbnQuZGF0YXNldC50ZXh0ID0gcGFzdGVFbGVtZW50LmRhdGFzZXQub3JpZ2luYWxUZXh0O1xuICAgICAgICAgICAgICAgIHBhc3RlRWxlbWVudC5kYXRhc2V0Lm9yaWdpbmFsVGV4dCA9IFwiXCI7XG4gICAgICAgICAgICAgICAgdXBkYXRlT3V0cHV0KCk7XG4gICAgICAgICAgICB9LCBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgdC5kaXNtaXNzKCk7XG4gICAgICAgICAgICAgICAgbWF0ZXJpYWxpemVfY3NzXzEuZGVmYXVsdC50b2FzdCh7XG4gICAgICAgICAgICAgICAgICAgIGh0bWw6IGBVcGxvYWRpbmcgaW1hZ2UgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2UgfHwgZXJyb3IudG9TdHJpbmcoKX1gLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHBhc3RlRWxlbWVudC5kYXRhc2V0LnRleHQgPSBwYXN0ZUVsZW1lbnQuZGF0YXNldC5vcmlnaW5hbFRleHQ7XG4gICAgICAgICAgICAgICAgcGFzdGVFbGVtZW50LmRhdGFzZXQub3JpZ2luYWxUZXh0ID0gXCJcIjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChibG9iKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHBsYWluVGV4dFBhc3RlKHBhc3RlRXZlbnQpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHBsYWluVGV4dFBhc3RlKGUpIHtcbiAgICB2YXIgX2E7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciB0ZXh0ID0gdW5kZWZpbmVkO1xuICAgIGlmIChlLmNsaXBib2FyZERhdGEgfHxcbiAgICAgICAgZS5vcmlnaW5hbEV2ZW50LmNsaXBib2FyZERhdGEpIHtcbiAgICAgICAgdGV4dCA9IChfYSA9IChlLm9yaWdpbmFsRXZlbnQgfHwgZSkuY2xpcGJvYXJkRGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmdldERhdGEoXCJ0ZXh0L3BsYWluXCIpO1xuICAgIH1cbiAgICBpZiAoZG9jdW1lbnQucXVlcnlDb21tYW5kU3VwcG9ydGVkKFwiaW5zZXJ0VGV4dFwiKSkge1xuICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZChcImluc2VydFRleHRcIiwgZmFsc2UsIHRleHQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJwYXN0ZVwiLCBmYWxzZSwgdGV4dCk7XG4gICAgfVxufVxuZnVuY3Rpb24gbW92ZVVwKGUpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGxldCB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICB3aGlsZSAoKHRhcmdldCA9PT0gbnVsbCB8fCB0YXJnZXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRhcmdldC50YWdOYW1lKSAhPSBcIlRSXCIpXG4gICAgICAgIHRhcmdldCA9IChfYSA9IHRhcmdldCA9PT0gbnVsbCB8fCB0YXJnZXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRhcmdldC5wYXJlbnRFbGVtZW50KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xuICAgIGlmICh0YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZykge1xuICAgICAgICAoX2IgPSB0YXJnZXQgPT09IG51bGwgfHwgdGFyZ2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0YXJnZXQucGFyZW50Tm9kZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmluc2VydEJlZm9yZSh0YXJnZXQsIHRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKTtcbiAgICB9XG4gICAgdXBkYXRlT3V0cHV0KCk7XG59XG5mdW5jdGlvbiBtb3ZlRG93bihlKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBsZXQgdGFyZ2V0ID0gZS50YXJnZXQ7XG4gICAgd2hpbGUgKCh0YXJnZXQgPT09IG51bGwgfHwgdGFyZ2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0YXJnZXQudGFnTmFtZSkgIT0gXCJUUlwiKVxuICAgICAgICB0YXJnZXQgPSAoX2EgPSB0YXJnZXQgPT09IG51bGwgfHwgdGFyZ2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0YXJnZXQucGFyZW50RWxlbWVudCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbnVsbDtcbiAgICBpZiAodGFyZ2V0Lm5leHRFbGVtZW50U2libGluZykge1xuICAgICAgICAoX2IgPSB0YXJnZXQgPT09IG51bGwgfHwgdGFyZ2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0YXJnZXQucGFyZW50Tm9kZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmluc2VydEJlZm9yZSh0YXJnZXQubmV4dEVsZW1lbnRTaWJsaW5nLCB0YXJnZXQpO1xuICAgIH1cbiAgICB1cGRhdGVPdXRwdXQoKTtcbn1cbmZ1bmN0aW9uIGRlbGV0ZUljb24oZSkge1xuICAgIHZhciBfYTtcbiAgICAoMCwgYW5hbHl0aWNzXzEudHJhY2tFdmVudCkoXCJidXR0b25fY2xpY2tcIiwge1xuICAgICAgICBpZDogXCJkZWxldGUtdGhlbWUtaWNvblwiLFxuICAgICAgICBjb250ZXh0OiBcIlRoZW1lIEVkaXRvclwiLFxuICAgICAgICBsZWdhY3lUYXJnZXQ6IFwiZGVsZXRlLWljb24tYnV0dG9uXCIsXG4gICAgICAgIGxlZ2FjeUFjdGlvbjogXCJjbGlja1wiLFxuICAgICAgICBsZWdhY3lMYWJlbDogXCJUaGVtZSBFZGl0b3JcIixcbiAgICB9KTtcbiAgICBsZXQgdGFyZ2V0ID0gZS50YXJnZXQ7XG4gICAgd2hpbGUgKCh0YXJnZXQgPT09IG51bGwgfHwgdGFyZ2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0YXJnZXQudGFnTmFtZSkgIT0gXCJUUlwiKVxuICAgICAgICB0YXJnZXQgPSAoX2EgPSB0YXJnZXQgPT09IG51bGwgfHwgdGFyZ2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0YXJnZXQucGFyZW50RWxlbWVudCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbnVsbDtcbiAgICBtYXRlcmlhbGl6ZV9jc3NfMS5kZWZhdWx0LlRvb2x0aXAuZ2V0SW5zdGFuY2UodGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoXCIuZGVsZXRlLWljb24tYnV0dG9uXCIpKS5kZXN0cm95KCk7XG4gICAgdGFyZ2V0Lm91dGVySFRNTCA9IFwiXCI7XG4gICAgdXBkYXRlT3V0cHV0KCk7XG59XG5mdW5jdGlvbiBpY29uUHJldmlldygpIHtcbiAgICB0ZXN0SWNvbi5zcmMgPSAocyA9PiB7XG4gICAgICAgIGlmICghcykge1xuICAgICAgICAgICAgcmV0dXJuIGNocm9tZS5ydW50aW1lLmdldFVSTChcImltZ3MvZmFsbGJhY2stY291cnNlLWljb24uc3ZnXCIpO1xuICAgICAgICB9XG4gICAgICAgIHMgKz0gXCIgXCI7XG4gICAgICAgIGlmICh0aGVtZSAmJiB0aGVtZS5pY29ucykge1xuICAgICAgICAgICAgZm9yIChsZXQgaWNvblBhdHRlcm4gb2YgdGhlbWUuaWNvbnMpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5tYXRjaChuZXcgUmVnRXhwKGljb25QYXR0ZXJuLnJlZ2V4LCBcImlcIikpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uUGF0dGVybi51cmw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpc0xBVVNEKCkgfHwgX19zdG9yYWdlLnVzZURlZmF1bHRJY29uU2V0ID09PSBcImVuYWJsZWRcIikge1xuICAgICAgICAgICAgZm9yIChsZXQgaWNvblBhdHRlcm4gb2YgZGVmYXVsdF9pY29uc18xLkRFRkFVTFRfSUNPTlMpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5tYXRjaChuZXcgUmVnRXhwKGljb25QYXR0ZXJuLnJlZ2V4LCBcImlcIikpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uUGF0dGVybi51cmw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjaHJvbWUucnVudGltZS5nZXRVUkwoXCJpbWdzL2ZhbGxiYWNrLWNvdXJzZS1pY29uLnN2Z1wiKTtcbiAgICB9KShpY29uVGVzdFRleHQudmFsdWUpO1xufVxuZnVuY3Rpb24gY29weVRoZW1lVG9DbGlwYm9hcmQodGhlbWVOYW1lKSB7XG4gICAgKDAsIGFuYWx5dGljc18xLnRyYWNrRXZlbnQpKFwiYnV0dG9uX2NsaWNrXCIsIHtcbiAgICAgICAgaWQ6IFwiY29weS10aGVtZVwiLFxuICAgICAgICBjb250ZXh0OiBcIlRoZW1lIExpc3RcIixcbiAgICAgICAgdmFsdWU6IHRoZW1lTmFtZSxcbiAgICAgICAgbGVnYWN5VGFyZ2V0OiBgVGhlbWU6ICR7dGhlbWVOYW1lfWAsXG4gICAgICAgIGxlZ2FjeUFjdGlvbjogXCJjb3B5XCIsXG4gICAgICAgIGxlZ2FjeUxhYmVsOiBcIlRoZW1lIExpc3RcIixcbiAgICB9KTtcbiAgICBsZXQgdGV4dCA9IEpTT04uc3RyaW5naWZ5KGFsbFRoZW1lc1t0aGVtZU5hbWVdKTtcbiAgICB2YXIgY29weUZyb20gPSAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoXCI8dGV4dGFyZWEvPlwiKTtcbiAgICBjb3B5RnJvbS50ZXh0KHRleHQpO1xuICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KShcImJvZHlcIikuYXBwZW5kKGNvcHlGcm9tKTtcbiAgICBjb3B5RnJvbS5zZWxlY3QoKTtcbiAgICBkb2N1bWVudC5leGVjQ29tbWFuZChcImNvcHlcIik7XG4gICAgY29weUZyb20ucmVtb3ZlKCk7XG4gICAgbWF0ZXJpYWxpemVfY3NzXzEuZGVmYXVsdC50b2FzdCh7IGh0bWw6IGBDb3BpZWQgdGhlbWUgXCIke3RoZW1lTmFtZX1cIiB0byBjbGlwYm9hcmRgIH0pO1xufVxuZnVuY3Rpb24gaW5FZGl0TW9kZSgpIHtcbiAgICByZXR1cm4gISFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNob3ctZWRpdG9yLWNvbnRyb2xzXCIpO1xufVxuZnVuY3Rpb24gcHJldmVudERlZmF1bHRzKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbn1cbmZ1bmN0aW9uIGhpZ2hsaWdodChyZWdpb24pIHtcbiAgICBpZiAoIXJlZ2lvbi5jbGFzc0xpc3QuY29udGFpbnMoXCJoaWdobGlnaHRcIikpIHtcbiAgICAgICAgcmVnaW9uLmNsYXNzTGlzdC5hZGQoXCJoaWdobGlnaHRcIik7XG4gICAgICAgIHJlZ2lvbi5kYXRhc2V0Lm9yaWdpbmFsVGV4dCA9IHJlZ2lvbi5kYXRhc2V0LnRleHQ7XG4gICAgICAgIHJlZ2lvbi5kYXRhc2V0LnRleHQgPSBcIkRyb3AgdG8gVXNlIEltYWdlXCI7XG4gICAgfVxufVxuZnVuY3Rpb24gdW5oaWdobGlnaHQocmVnaW9uKSB7XG4gICAgaWYgKHJlZ2lvbi5jbGFzc0xpc3QuY29udGFpbnMoXCJoaWdobGlnaHRcIikpIHtcbiAgICAgICAgcmVnaW9uLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWdobGlnaHRcIik7XG4gICAgICAgIHJlZ2lvbi5kYXRhc2V0LnRleHQgPSByZWdpb24uZGF0YXNldC5vcmlnaW5hbFRleHQ7XG4gICAgICAgIHJlZ2lvbi5kYXRhc2V0Lm9yaWdpbmFsVGV4dCA9IFwiXCI7XG4gICAgfVxufVxuZnVuY3Rpb24gaGFuZGxlRHJvcChlLCByZWdpb24sIHByZXZpZXcsIHByb3BlcnR5KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKGUuZGF0YVRyYW5zZmVyICYmIGUuZGF0YVRyYW5zZmVyLmZpbGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGxldCBmaWxlID0gZS5kYXRhVHJhbnNmZXIuZmlsZXNbMF07XG4gICAgICAgICAgICBsZXQgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgICAgICAgIHJlYWRlci5vbmxvYWRlbmQgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIHJlZ2lvbi5kYXRhc2V0Lm9yaWdpbmFsVGV4dCA9IHJlZ2lvbi5kYXRhc2V0LnRleHQ7XG4gICAgICAgICAgICAgICAgcmVnaW9uLmRhdGFzZXQudGV4dCA9IFwiVXBsb2FkaW5nLi4uXCI7XG4gICAgICAgICAgICAgICAgbGV0IHQgPSBtYXRlcmlhbGl6ZV9jc3NfMS5kZWZhdWx0LnRvYXN0KHtcbiAgICAgICAgICAgICAgICAgICAgaHRtbDogYFVwbG9hZGluZyBpbWFnZS4uLmAsXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXlMZW5ndGg6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGltZ3VyVXBsb2FkKChfYSA9IHJlYWRlci5yZXN1bHQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b1N0cmluZygpLCByZXN1bHQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKHJlc3VsdC5kYXRhLmxpbmssIHQpO1xuICAgICAgICAgICAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdC5kaXNtaXNzKCk7XG4gICAgICAgICAgICAgICAgICAgIG1hdGVyaWFsaXplX2Nzc18xLmRlZmF1bHQudG9hc3Qoe1xuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbDogYFVwbG9hZGluZyBpbWFnZSBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZSB8fCBlcnJvci50b1N0cmluZygpfWAsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZWdpb24uZGF0YXNldC50ZXh0ID0gcmVnaW9uLmRhdGFzZXQub3JpZ2luYWxUZXh0O1xuICAgICAgICAgICAgICAgICAgICByZWdpb24uZGF0YXNldC5vcmlnaW5hbFRleHQgPSBcIlwiO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGUuZGF0YVRyYW5zZmVyICYmIGUuZGF0YVRyYW5zZmVyLml0ZW1zLmxlbmd0aCA+PSAzKSB7XG4gICAgICAgICAgICBlLmRhdGFUcmFuc2Zlci5pdGVtc1syXS5nZXRBc1N0cmluZyhzID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgaW1nID0gaHRtbFRvRWxlbWVudChzKTtcbiAgICAgICAgICAgICAgICBzdWNjZXNzKGltZy5zcmMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgICBtYXRlcmlhbGl6ZV9jc3NfMS5kZWZhdWx0LnRvYXN0KHsgaHRtbDogYEVycm9yOiBJbnZhbGlkIGltYWdlIGZpbGVgIH0pO1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIuZXJyb3IoZXJyKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3VjY2VzcyhsaW5rLCB0b2FzdCkge1xuICAgICAgICAoMCwgYW5hbHl0aWNzXzEudHJhY2tFdmVudCkoXCJwZXJmb3JtX2FjdGlvblwiLCB7XG4gICAgICAgICAgICBpZDogXCJkcm9wXCIsXG4gICAgICAgICAgICBjb250ZXh0OiBcIlRoZW1lIEVkaXRvclwiLFxuICAgICAgICAgICAgdmFsdWU6IFwiaWNvbi1pbWFnZVwiLFxuICAgICAgICAgICAgbGVnYWN5VGFyZ2V0OiBcImljb24taW1hZ2VcIixcbiAgICAgICAgICAgIGxlZ2FjeUFjdGlvbjogXCJkcm9wXCIsXG4gICAgICAgICAgICBsZWdhY3lMYWJlbDogXCJUaGVtZSBFZGl0b3JcIixcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0b2FzdCkge1xuICAgICAgICAgICAgdG9hc3QuZGlzbWlzcygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcmV2aWV3KSB7XG4gICAgICAgICAgICBwcmV2aWV3LnNyYyA9IGxpbms7XG4gICAgICAgIH1cbiAgICAgICAgcmVnaW9uW3Byb3BlcnR5XSA9IGxpbms7XG4gICAgICAgIHJlZ2lvbi5kYXRhc2V0LnRleHQgPSByZWdpb24uZGF0YXNldC5vcmlnaW5hbFRleHQ7XG4gICAgICAgIHJlZ2lvbi5kYXRhc2V0Lm9yaWdpbmFsVGV4dCA9IFwiXCI7XG4gICAgICAgIHVwZGF0ZU91dHB1dCgpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGh0bWxUb0VsZW1lbnQoaHRtbCkge1xuICAgIHZhciB0ZW1wbGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZW1wbGF0ZVwiKTtcbiAgICBodG1sID0gaHRtbC50cmltKCk7XG4gICAgdGVtcGxhdGUuaW5uZXJIVE1MID0gaHRtbDtcbiAgICByZXR1cm4gdGVtcGxhdGUuY29udGVudC5maXJzdENoaWxkO1xufVxuZnVuY3Rpb24gaW1ndXJVcGxvYWQoYmFzZTY0LCBjYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAgIGlmICghYmFzZTY0KSB7XG4gICAgICAgIGVycm9yQ2FsbGJhY2sobmV3IEVycm9yKFwiSW52YWxpZCBVUkxcIikpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJpbWd1clByb21wdFZpZXdlZFwiKSkge1xuICAgICAgICBDb25maXJtTW9kYWwub3BlbihcIkltZ3VyIFVwbG9hZCBDb25zZW50XCIsIFwiQnkgY2xpY2tpbmcgJ2FncmVlJywgeW91IGNvbnNlbnQgdG8gaGF2ZSB0aGUgaW1hZ2UgeW91IGp1c3QgZHJvcHBlZCBvciBwYXN0ZWQgdXBsb2FkZWQgdG8gSW1ndXIuIENsaWNrIGNhbmNlbCB0byBwcmV2ZW50IHRoZSB1cGxvYWQuIElmIHlvdSBjbGljayAnYWdyZWUnIHRoaXMgbWVzc2FnZSB3aWxsIG5vdCBiZSBzaG93biBhZ2Fpbi5cIiwgW1wiQWdyZWVcIiwgXCJDYW5jZWxcIl0sIGIgPT4ge1xuICAgICAgICAgICAgaWYgKGIgPT09IFwiQWdyZWVcIikge1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiaW1ndXJQcm9tcHRWaWV3ZWRcIiwgXCJ0cnVlXCIpO1xuICAgICAgICAgICAgICAgIGRvVXBsb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBlcnJvckNhbGxiYWNrKG5ldyBFcnJvcihcIlVzZXIgZGlkIG5vdCBnaXZlIGNvbnNlbnQgdG8gdXBsb2FkXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBkb1VwbG9hZCgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkb1VwbG9hZCgpIHtcbiAgICAgICAgY29uc3QgQ0xJRU5UX0lEID0gXCI1Njc1NWMzNmViNTc3MmRcIjtcbiAgICAgICAgZmV0Y2goXCJodHRwczovL2FwaS5pbWd1ci5jb20vMy9pbWFnZVwiLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgbW9kZTogXCJjb3JzXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYENsaWVudC1JRCAke0NMSUVOVF9JRH1gLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJhc2U2NFwiLFxuICAgICAgICAgICAgICAgIGltYWdlOiBiYXNlNjQuc3BsaXQoXCIsXCIpWzFdLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oeCA9PiB4Lmpzb24oKSlcbiAgICAgICAgICAgIC50aGVuKGNhbGxiYWNrKVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGVycik7XG4gICAgICAgICAgICBlcnJvckNhbGxiYWNrKGVycik7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGluaXRpYWxpemVEcmFnQW5kRHJvcChyZWdpb24sIHByZXZpZXcsIHByb3BlcnR5KSB7XG4gICAgW1wiZHJhZ2VudGVyXCIsIFwiZHJhZ292ZXJcIiwgXCJkcmFnbGVhdmVcIiwgXCJkcm9wXCJdLmZvckVhY2goZXZlbnROYW1lID0+IHtcbiAgICAgICAgcmVnaW9uLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBwcmV2ZW50RGVmYXVsdHMsIGZhbHNlKTtcbiAgICB9KTtcbiAgICBbXCJkcmFnZW50ZXJcIiwgXCJkcmFnb3ZlclwiXS5mb3JFYWNoKGV2ZW50TmFtZSA9PiB7XG4gICAgICAgIHJlZ2lvbi5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZSA9PiBoaWdobGlnaHQocmVnaW9uKSwgZmFsc2UpO1xuICAgIH0pO1xuICAgIHJlZ2lvbi5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ2xlYXZlXCIsIGUgPT4gdW5oaWdobGlnaHQocmVnaW9uKSwgZmFsc2UpO1xuICAgIHJlZ2lvbi5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCBlID0+IHtcbiAgICAgICAgdW5oaWdobGlnaHQocmVnaW9uKTtcbiAgICAgICAgaGFuZGxlRHJvcChlLCByZWdpb24sIHByZXZpZXcsIHByb3BlcnR5KTtcbiAgICB9LCBmYWxzZSk7XG59XG5mdW5jdGlvbiBodWVTbGlkZXJFdmVudChldmVudCwgdWkpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGlmIChldmVudC5vcmlnaW5hbEV2ZW50KSB7XG4gICAgICAgIHVwZGF0ZU91dHB1dCgpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChldmVudC50YXJnZXQuZGF0YXNldC5kaXNwbGF5KS50ZXh0Q29udGVudCA9XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSB1aS52YWx1ZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRvU3RyaW5nKCkpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFwiPEVSUj5cIjtcbiAgICB9XG59XG5mdW5jdGlvbiByYW5nZVNsaWRlckV2ZW50KGV2ZW50LCB1aSkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgaWYgKGV2ZW50Lm9yaWdpbmFsRXZlbnQpIHtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZXZlbnQudGFyZ2V0LmlkICsgXCItZGlzcGxheVwiKS50ZXh0Q29udGVudCA9IGAkeyhfYSA9IHVpLnZhbHVlcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzBdfSAtICR7KF9iID0gdWkudmFsdWVzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2JbMV19YDtcbiAgICAgICAgdXBkYXRlT3V0cHV0KCk7XG4gICAgfVxufVxuZnVuY3Rpb24gY2lyY2xlUmFuZ2VTbGlkZXJFdmVudCgpIHtcbiAgICB1cGRhdGVPdXRwdXQoKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluaXRpYWxpemVBbmFseXRpY3MgPSBleHBvcnRzLmdldEFuYWx5dGljc1VzZXJJZCA9IGV4cG9ydHMudHJhY2tFdmVudCA9IHZvaWQgMDtcbi8qKlxuICogVHJhY2tzIGFuIGV2ZW50IHVzaW5nIEdvb2dsZSBBbmFseXRpY3MgaWYgdGhlIHVzZXIgZGlkIG5vdCBvcHQgb3V0XG4gKiBOT1RFOiBUaGUgRmlyZWZveCB2ZXJzaW9uIG9mIHRoZSBleHRlbnNpb24gaGFzIG5vIHN1cHBvcnQgZm9yIEdvb2dsZSBBbmFseXRpY3NcbiAqL1xudmFyIHRyYWNrRXZlbnQgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBfYSA9IHt9KSB7XG4gICAgdmFyIHsgbGVnYWN5VGFyZ2V0LCBsZWdhY3lBY3Rpb24sIGxlZ2FjeUxhYmVsID0gdW5kZWZpbmVkLCBsZWdhY3lWYWx1ZSA9IHVuZGVmaW5lZCwgaWQsIGNvbnRleHQsIHZhbHVlIH0gPSBfYSwgZXh0cmFQcm9wcyA9IF9fcmVzdChfYSwgW1wibGVnYWN5VGFyZ2V0XCIsIFwibGVnYWN5QWN0aW9uXCIsIFwibGVnYWN5TGFiZWxcIiwgXCJsZWdhY3lWYWx1ZVwiLCBcImlkXCIsIFwiY29udGV4dFwiLCBcInZhbHVlXCJdKTtcbiAgICBjb25zb2xlLmRlYnVnKFwiW1MrXSBUcmFja2luZyBkaXNhYmxlZCBieSB1c2VyXCIsIGFyZ3VtZW50cyk7XG59O1xuZXhwb3J0cy50cmFja0V2ZW50ID0gdHJhY2tFdmVudDtcbmZ1bmN0aW9uIGdldEFuYWx5dGljc1VzZXJJZCgpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBmdW5jdGlvbiBnZXRSYW5kb21Ub2tlbigpIHtcbiAgICAgICAgICAgIC8vIEUuZy4gOCAqIDMyID0gMjU2IGJpdHMgdG9rZW5cbiAgICAgICAgICAgIHZhciByYW5kb21Qb29sID0gbmV3IFVpbnQ4QXJyYXkoMzIpO1xuICAgICAgICAgICAgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhyYW5kb21Qb29sKTtcbiAgICAgICAgICAgIHZhciBoZXggPSBcIlwiO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByYW5kb21Qb29sLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaGV4ICs9IHJhbmRvbVBvb2xbaV0udG9TdHJpbmcoMTYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRS5nLiBkYjE4NDU4ZTI3ODJiMmI3N2UzNjc2OWM1NjllMjYzYTUzODg1YTk5NDRkZDBhODYxZTUwNjRlYWMxNmYxYVxuICAgICAgICAgICAgcmV0dXJuIGhleDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbCA9IHlpZWxkIGNocm9tZS5zdG9yYWdlLmxvY2FsLmdldCh7IHJhbmRvbVVzZXJJZDogbnVsbCB9KTtcbiAgICAgICAgaWYgKCFsLnJhbmRvbVVzZXJJZCkge1xuICAgICAgICAgICAgbGV0IHJhbmRvbVVzZXJJZCA9IGdldFJhbmRvbVRva2VuKCk7XG4gICAgICAgICAgICB5aWVsZCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoeyByYW5kb21Vc2VySWQgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmFuZG9tVXNlcklkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsLnJhbmRvbVVzZXJJZDtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZ2V0QW5hbHl0aWNzVXNlcklkID0gZ2V0QW5hbHl0aWNzVXNlcklkO1xuZnVuY3Rpb24gaW5pdGlhbGl6ZUFuYWx5dGljcyhfYSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgYXJndW1lbnRzLCB2b2lkIDAsIGZ1bmN0aW9uKiAoeyBkb2N1bWVudENvbnRleHQsIGlzQW5hbHl0aWNzRW5hYmxlZCwgc2VsZWN0ZWRUaGVtZSwgc2VsZWN0ZWRCZXRhLCBjdXJyZW50VmVyc2lvbiwgbmV3VmVyc2lvbiwgcmFuZG9tVXNlcklkLCB0aGVtZUlzTW9kZXJuLCB9KSB7XG4gICAgICAgIGlmIChpc0FuYWx5dGljc0VuYWJsZWQpIHtcbiAgICAgICAgICAgIGVuYWJsZUFuYWx5dGljcygpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGVuYWJsZUFuYWx5dGljcygpIHtcbiAgICAgICAgICAgIC8vIEdvb2dsZSBBbmFseXRpY3MgdjRcbiAgICAgICAgICAgIGdsb2JhbFRoaXMuZGF0YUxheWVyID0gZ2xvYmFsVGhpcy5kYXRhTGF5ZXIgfHwgW107XG4gICAgICAgICAgICBmdW5jdGlvbiBndGFnKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgKF9hID0gZ2xvYmFsVGhpcy5kYXRhTGF5ZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wdXNoKGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBndGFnKFwianNcIiwgbmV3IERhdGUoKSk7XG4gICAgICAgICAgICBjb25zdCBndGFnQ29uZmlnID0ge1xuICAgICAgICAgICAgICAgIHBhZ2VfbG9jYXRpb246IGxvY2F0aW9uLmhyZWYucmVwbGFjZSgvXFwvXFxkezMsfVxcYi9nLCBcIi8qXCIpLFxuICAgICAgICAgICAgICAgIHBhZ2VfcGF0aDogbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvXFxkezMsfVxcYi9nLCBcIi8qXCIpLFxuICAgICAgICAgICAgICAgIHBhZ2VfdGl0bGU6IG51bGwsXG4gICAgICAgICAgICAgICAgdXNlcl9pZDogcmFuZG9tVXNlcklkLFxuICAgICAgICAgICAgICAgIHVzZXJfcHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgICAgICB0aGVtZTogc2VsZWN0ZWRUaGVtZSxcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlQmV0YTogc2VsZWN0ZWRCZXRhLFxuICAgICAgICAgICAgICAgICAgICBsYXN0RW5hYmxlZFZlcnNpb246IG5ld1ZlcnNpb24sXG4gICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvblZlcnNpb246IGN1cnJlbnRWZXJzaW9uLFxuICAgICAgICAgICAgICAgICAgICBkb21haW46IGxvY2F0aW9uLmhvc3QsXG4gICAgICAgICAgICAgICAgICAgIG1vZGVyblRoZW1lOiB0aGVtZUlzTW9kZXJuLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZ3RhZyhcImNvbmZpZ1wiLCBcIkctWU02QjAwUkRZQ1wiLCBndGFnQ29uZmlnKTtcbiAgICAgICAgICAgIGV4cG9ydHMudHJhY2tFdmVudCA9IGZ1bmN0aW9uIChldmVudE5hbWUsIF9hID0ge30pIHtcbiAgICAgICAgICAgICAgICB2YXIgeyBsZWdhY3lUYXJnZXQsIGxlZ2FjeUFjdGlvbiwgbGVnYWN5TGFiZWwgPSB1bmRlZmluZWQsIGxlZ2FjeVZhbHVlID0gdW5kZWZpbmVkLCBpZCwgY29udGV4dCwgdmFsdWUgfSA9IF9hLCBleHRyYVByb3BzID0gX19yZXN0KF9hLCBbXCJsZWdhY3lUYXJnZXRcIiwgXCJsZWdhY3lBY3Rpb25cIiwgXCJsZWdhY3lMYWJlbFwiLCBcImxlZ2FjeVZhbHVlXCIsIFwiaWRcIiwgXCJjb250ZXh0XCIsIFwidmFsdWVcIl0pO1xuICAgICAgICAgICAgICAgIGxldCBldmVudERhdGEgPSBPYmplY3QuYXNzaWduKHsgaWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRleHQsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlIH0sIGV4dHJhUHJvcHMpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoYFtTK10gVHJhY2tlZCBldmVudDpgLCBldmVudE5hbWUsIGV2ZW50RGF0YSk7XG4gICAgICAgICAgICAgICAgZ3RhZyhcImV2ZW50XCIsIGV2ZW50TmFtZSwgZXZlbnREYXRhKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBmdW5jdGlvbiB0cmFja0NsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFldmVudC5pc1RydXN0ZWQpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBsZXQgdGFyZ2V0ID0gKGV2ZW50LmN1cnJlbnRUYXJnZXQgfHwgZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAoMCwgZXhwb3J0cy50cmFja0V2ZW50KShcInRyYWNraW5nX2xpbmtfY2xpY2tcIiwge1xuICAgICAgICAgICAgICAgICAgICBsZWdhY3lUYXJnZXQ6IHRhcmdldC5kYXRhc2V0LnNwbHVzVHJhY2tpbmdJZCB8fCB0YXJnZXQuaWQgfHwgXCJVbmxhYmVsZWQgQnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlZ2FjeUFjdGlvbjogXCJjbGlja1wiLFxuICAgICAgICAgICAgICAgICAgICBsZWdhY3lMYWJlbDogdGFyZ2V0LmRhdGFzZXQuc3BsdXNUcmFja2luZ0NvbnRleHQgfHwgXCJUcmFja2luZyBMaW5rXCIsXG4gICAgICAgICAgICAgICAgICAgIGxlZ2FjeVZhbHVlOiB0YXJnZXQuZGF0YXNldC5zcGx1c1RyYWNraW5nVmFsdWUgfHwgZXZlbnQuYnV0dG9uLFxuICAgICAgICAgICAgICAgICAgICBpZDogdGFyZ2V0LmRhdGFzZXQuc3BsdXNUcmFja2luZ0lkIHx8IHRhcmdldC5pZCB8fCBcIlVubGFiZWxlZCBCdXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dDogdGFyZ2V0LmRhdGFzZXQuc3BsdXNUcmFja2luZ0NvbnRleHQgfHwgXCJUcmFja2luZyBMaW5rXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0YXJnZXQuZGF0YXNldC5zcGx1c1RyYWNraW5nVmFsdWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZG9jdW1lbnRDb250ZXh0KSB7XG4gICAgICAgICAgICAgICAgbGV0IHRyYWNrZWRFbGVtZW50cyA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgICAgICBsZXQgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25zLCBtdXRhdGlvbk9ic2VydmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGVsZW0gb2YgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zcGx1cy10cmFjay1jbGlja3M6bm90KC5zcGx1cy10cmFja2VkKVwiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0cmFja2VkRWxlbWVudHMuaGFzKGVsZW0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdHJhY2tDbGljayk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKFwiYXV4Y2xpY2tcIiwgdHJhY2tDbGljayk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5jbGFzc0xpc3QuYWRkKFwic3BsdXMtdHJhY2tlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFja2VkRWxlbWVudHMuYWRkKGVsZW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmFyIHJlYWR5U3RhdGVDaGVja0ludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHJlYWR5U3RhdGVDaGVja0ludGVydmFsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluaXQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIDEwKTtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmJvZHksIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkTGlzdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1YnRyZWU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBlbGVtIG9mIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc3BsdXMtdHJhY2stY2xpY2tzXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRyYWNrZWRFbGVtZW50cy5oYXMoZWxlbSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0cmFja0NsaWNrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJhdXhjbGlja1wiLCB0cmFja0NsaWNrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoXCJzcGx1cy10cmFja2VkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWNrZWRFbGVtZW50cy5hZGQoZWxlbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuaW5pdGlhbGl6ZUFuYWx5dGljcyA9IGluaXRpYWxpemVBbmFseXRpY3M7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9USEVNRV9OQU1FID0gZXhwb3J0cy5ESVNDT1JEX1VSTCA9IGV4cG9ydHMuRVhURU5TSU9OX1dFQlNJVEUgPSBleHBvcnRzLkVYVEVOU0lPTl9OQU1FID0gdm9pZCAwO1xuZXhwb3J0cy5FWFRFTlNJT05fTkFNRSA9IFwiU2Nob29sb2d5IFBsdXNcIjtcbmV4cG9ydHMuRVhURU5TSU9OX1dFQlNJVEUgPSBcImh0dHBzOi8vc2Nob29sb2d5cGwudXNcIjtcbmV4cG9ydHMuRElTQ09SRF9VUkwgPSBcImh0dHBzOi8vZGlzY29yZC5zY2hvb2xvZ3lwbC51c1wiO1xuZXhwb3J0cy5ERUZBVUxUX1RIRU1FX05BTUUgPSBleHBvcnRzLkVYVEVOU0lPTl9OQU1FO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFRkFVTFRfSUNPTlMgPSB2b2lkIDA7XG5leHBvcnRzLkRFRkFVTFRfSUNPTlMgPSBbXG4gICAge1xuICAgICAgICByZWdleDogXCJcXFxcYlBFXFxcXGJ8UGh5cyhpY2FsKT8gRWR1PyhjYXRpb24pP3xcXFxcYlNSTEFcXFxcYnxUUkt8VFJBQ0sgRklFTER8Q1JPU1MgQ3xBRFYgQ09ORHxNTz9WIEJEIEFXUnxBVEhMRVRJQ3xTUE9SVFN8RklUTkVTU3xQSFlTIEZJVFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjU1My8yNTUzOTY3LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiZXhlcmNpc2VfMjU1Mzk2N1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJXTz9SP0xEIEhJU1Q/KE9SWSk/fFdIR3xXTEQgTEFOR3xMQVQgQU18SU5UTCBSRUxcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE3NC8xNzQyNDkucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJpbnRlcm5ldF8xNzQyNDlcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQU5JTUFMXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8yMTA5LzIxMDkzNDIucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJiYXJuXzIxMDkzNDJcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQU5JTVwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjAzNy8yMDM3ODc2LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiYW5pbWF0aW9uXzIwMzc4NzZcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRk9SRU5cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE2MTYvMTYxNjUyNS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImZvcmVuc2ljLXNjaWVuY2VfMTYxNjUyNVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJBVVRPLipbVE1dRUNIfFtNVF1FQ0guKkFVVE98QVVUTyBNQUlOXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8yMDQwLzIwNDA5ODkucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJjYXItc2VydmljZV8yMDQwOTg5XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkFMRyhFQnxFQlJBKT8oXFxcXGR8XFxcXGIpXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjcvMTY3NzUzLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiYmxhY2tib2FyZF8xNjc3NTNcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQVJUIEhJU1R8UEFJTlRcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzIxNC8yMTQyNzUucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJwYWludC1icnVzaF8yMTQyNzVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRVVSXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi82NjQvNjY0NTQ5LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiZXVyb3BlXzY2NDU0OVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJQSFlTSUNTfFBIWTpDXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjQvMTY0OTY5LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwic2NpZW5jZV8xNjQ5NjlcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQVNUUk9OT01ZXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xMjQvMTI0NTUzLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwidGVsZXNjb3BlXzEyNDU1M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJQUkUgP0NBTENcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzEwNzQvMTA3NDE0MC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInBhcmFib2xhXzEwNzQxNDBcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQkFTS0VUQkFMTHxCU0tUQkxcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzUwMC81MDAyNDUucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJiYXNrZXRiYWxsXzUwMDI0NVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCIoXnxcXFxcYilDQUxDKFVMVVMpP1xcXFxiXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNTcyLzE1NzIyOTYucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJsaW5lLWdyYXBoXzE1NzIyOTZcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQ0hFRVJ8RFJJTExcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzIxODUvMjE4NTU4NC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImNoZWVybGVhZGVyc18yMTg1NTg0XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkNIRU1cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzEyMy8xMjMzODEucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJmbGFza18xMjMzODFcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiR0FNRSBERVNHP058R0FNRSBERVNJR05cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE3MzcvMTczNzI4NS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImNvbXB1dGVyXzE3MzcyODVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQ09NUCBTQ0k/fENPTVBVVEVSfElOVFJPIENPTVB8Q09NUCBQUk8/R3xJTlRSTyBQUk9HfENPRElOR3xJTlRFP1I/TkU/VHxESUdJVEFMIExJVHxKQVZBXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi82MjYvNjI2NTcwLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiYmluYXJ5LWNvZGVfNjI2NTcwXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIlVTIEhJU1R8QU1FUihJQ0FOPyk/fEFNIERFTXxBTSBJTUFHRXxJQiBIUyBBTVJcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE0OS8xNDk1MTMucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJ1bml0ZWQtc3RhdGVzLW9mLWFtZXJpY2FfMTQ5NTEzXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkhFP0E/TFRIfE1FRElDQUx8TUVEIElOVEVSVkVOfE1FRElDSU5FfEhPU1B8UEFUSUVOVFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTc5LzE3OTU1NS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImZpcnN0LWFpZC1raXRfMTc5NTU1XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkNFUkFNSUNTfEFNIElORFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTIzLzEyMzQ1OC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInBvdF8xMjM0NThcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRkxPUnxGTE9XRVJcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzM0Ni8zNDYxNjcucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJmbG93ZXJfMzQ2MTY3XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIk1BUklORXxaT09MT0dZfE9DRUFOXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNDYvMTQ2NzE4LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwidHVydGxlXzE0NjcxOFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJNQU5EfENISU5FU0V8Q0hJTkF8Q0hJTiBMQU5HXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8yNDQ4LzI0NDg3ODEucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJmbGFnXzI0NDg3ODFcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiS09SRUFcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE5OTkvMTk5OTYxMC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImtvcmVhXzE5OTk2MTBcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiUFNZQ3xJQiBUSEVPUllcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzU1Mi81NTI0MDgucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJjcmVhdGl2aXR5XzU1MjQwOFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJQSUFOT3xLRVlCT0FSRFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTk3My8xOTczODg4LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwia2V5Ym9hcmRfMTk3Mzg4OFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJFWFBPIFRFP1hUfFNIIFNUT1JZXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNzYvMTc2NjkwLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwid3JpdGluZ18xNzY2OTBcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRElTQ1JcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzI1MS8yNTE5ODYucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJjYWxjdWxhdGluZ18yNTE5ODZcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiVkVUXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8yNjU5LzI2NTkzNjYucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJwYXdwcmludF8yNjU5MzY2XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIk9SQ0h8VklPTElOfFNUUklOR1NcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzEyNC8xMjQ4MTEucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJ2aW9saW5fMTI0ODExXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkJBTkR8TUFSIERZTlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvNzE4LzcxODU0My5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImRydW1zXzcxODU0M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJTT0NDRVJcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE4MDAvMTgwMDk0NC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImZvb3RiYWxsXzE4MDA5NDRcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiTEFDUk9TU1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjgyNy8yODI3MDQxLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwibGFjcm9zc2VfMjgyNzA0MVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJNVVNJQ3xKQVpafENIT0lSfElOU1RSVU18V0lORCBQRVJDfEhBUk1PTll8R0xFRXxDSE9SVVN8Vk9DIEVOU0VNQkxFfFNJTkd8Vk9JQ0VcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzU3OS81Nzk0OTYucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJ0cmVibGUtY2xlZl81Nzk0OTZcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQklPKExPR1l8VEVDSChOT0xPR1kpP3xNRUQpP1xcXFxifEdFTkVUSUNTXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi82MjAvNjIwMzY2LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiZG5hXzYyMDM2NlwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCIoXnxcXFxcYilMSVQoRVJBVFVSRSk/XFxcXGJ8UkVBRHxMICYgTHxMSUJSQVJZXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjcvMTY3NzU1LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwib3Blbi1ib29rXzE2Nzc1NVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJTVEFHRXxUSEVBVFJFIERTTnxUSCBEU04gV0tTUHxDSE9SUFJPQ1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjY3My8yNjczMzQ2LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwic3BvdGxpZ2h0XzI2NzMzNDZcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQURWVCBERVNcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzEwNTUvMTA1NTY2NC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImFkc18xMDU1NjY0XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkVDT04oTyhNSUNTKT8pP3xBUCBNQSBFQ098RklOIE1HTVR8RklOQU5DSUFMXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi83MTIvNzEyNzQzLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwicHJvZml0XzcxMjc0M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJTVEFUKFNUSUNTfElTVENTKXxTVEFUUz98U1RBVElTVElDU1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTAwNi8xMDA2NjM2LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiYW5hbHlzaXNfMTAwNjYzNlwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJGSUxNKE1BS0lORyk/XFxcXGJ8VklERU98VklEIFBSRHxCUkRDU1R8Q0lORU1BfFNDUkVFTiBQTEFZXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8zMjEvMzIxNzk5LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwidmlkZW8tY2FtZXJhXzMyMTc5OVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCIoRklSfDEpU1QgUkVTUE9OREVSXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xMTkvMTE5MDgzLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiYW1idWxhbmNlXzExOTA4M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJHRU9MT0dZXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xODQvMTg0NjQ3LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwic2NpZW5jZV8xODQ2NDdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQ09PS3xDVUxJTkFSWXxGT09EfENBVEVSXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xMTQyLzExNDI2OTYucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJjb29raW5nXzExNDI2OTZcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiXFxcXGJHT1ZUXFxcXGJ8WU9VIEFETSBKVVN8SlVTVElDRVwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTY3LzE2NzcxOC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInVuaXZlcnNpdHlfMTY3NzE4XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkdFT01cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzI1OC8yNTgzMTYucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJvZmZpY2UtbWF0ZXJpYWxfMjU4MzE2XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkdVSVQoQVIpP3xNQVJJQUNISXxVS0VMRUxFXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNTg2LzE1ODYyMzQucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJndWl0YXJfMTU4NjIzNFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJNWVAgU1QgVEVDSHxcXFxcYkNURVxcXFxifFNFTShJTkFSKT9cXFxcYnxFTkdJTkVFUnxcXFxcYkVORyBERVxcXFxifElOVFJPIEVOR0lOfENSRUFUIEVYUHxTVEVBP018TVVMVElDUkFGVCBDT1JFXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNDYwLzE0NjA0NzEucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJpZGVhXzE0NjA0NzFcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRkxJR0hUfFNQQUNFfEFFUk9TUEE/Q0VcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzc0NC83NDQ1MDIucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJnbG9iZV83NDQ1MDJcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRU5HKExJU0gpP1xcXFxifENSRUFUKElWRSk/IFdSST9UKElORyk/fFxcXFxiQ09NUChPU0lUSU9OKT9cXFxcYnxcXFxcYkVSV0NcXFxcYnxMQU5HVUFHRSBBUlRTfExORyBBUlR8XFxcXGJFTEFcXFxcYlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjU0LzI1NDAyMi5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInNpZ25pbmdfMjU0MDIyXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIlNQQU4oSVNIKT9cXFxcYnxTUCBMQU5HXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi84MDgxLzgwODE4MjkucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJzcGFuaXNoLWxhbmd1YWdlXzgwODE4MjlcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRlJFTihDSCk/XFxcXGJ8QVAgRlIgTEFOR1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjA2LzIwNjY1Ny5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImZyYW5jZV8yMDY2NTdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiSVRBTElBTlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvNTU1LzU1NTY2OC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcIml0YWx5XzU1NTY2OFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJFTlZcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzI5MS8yOTEyMTEucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJyZWN5Y2xlXzI5MTIxMVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJST0JPVHxNRkd8SU5UUk8gUEhZUyBDT01QVVRJTkd8TUFDSElOSU5HfE1BQ0hJP05JP1NUXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNTQ2LzE1NDY2ODMucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJyb2JvdGljLWFybV8xNTQ2NjgzXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIk1FRElBXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjQ5LzE2NDkwOTIucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJtZWRpYS1wbGF5ZXJfMTY0OTA5MlwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJDWUJFUlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjA4NC8yMDg0MDI4LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiY3liZXItc2VjdXJpdHlfMjA4NDAyOFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJHRU9HfEhVTUFOIEdFT1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvNzE3LzcxNzk4Mi5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImdsb2JlXzcxNzk4MlwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCIoXnxcXFxcYilBUlRcXFxcYnxERVMgQ1JBRlR8Q1JBRlRTXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNDk3LzE0OTc1NzMucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJjcmVhdGl2aXR5XzE0OTc1NzNcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQU0gU0lHTiBMTkdcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzIwMTQvMjAxNDM2My5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInNpZ24tbGFuZ3VhZ2VfMjAxNDM2M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJEQU5DRT98RE4gQ0h8RE5DIENNUD9OVD9ZfEJBTExFVD9cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzQ5My80OTM1MDcucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJkYW5jaW5nXzQ5MzUwN1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJBUFAgQ1JFQVRcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE4Ni8xODYyMzkucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJzbWFydHBob25lXzE4NjIzOVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJNVVNFVU1cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzI1Mi8yNTIwMzIucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJiYW5rc18yNTIwMzJcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiR09MRlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTU4NC8xNTg0MTQzLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiZ29sZl8xNTg0MTQzXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkpBUEFOXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8yMDYvMjA2Nzg5LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiamFwYW5fMjA2Nzg5XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIk1FWFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjA2LzIwNjYwMC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcIm1leGljb18yMDY2MDBcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiUlVTU0lBXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8yMDYvMjA2NjA0LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwicnVzc2lhXzIwNjYwNFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCIoXnxcXFxcYilFTERcXFxcYnwoXnxcXFxcYilFTFNcXFxcYnwoXnxcXFxcYilFTExcXFxcYlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvOTQ3Lzk0NzQ3OC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImJvb2tfOTQ3NDc4XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIihefFxcXFxiKVRIRUEoVFtFUl1bRVJdKT9cXFxcYnxEUkFNQXxQRVJGT1JNIEFSVFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjE0LzIxNDM1MS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInRoZWF0ZXJfMjE0MzUxXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkxFQURFUlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTUzNC8xNTM0MDkxLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiZ292ZXJubWVudF8xNTM0MDkxXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIlNFUlZJQ0V8VFxcXFwuQVxcXFwufFBFRVIgQ09VTlNFTElOR3xUVVRPUnxBVklEfEVUSE5JQ3xFVEhOIFNUVURJRVN8SU5URVJBQ1RJT05TfEFOVEhST3xTT0NJfERFQ0FUSExPTnxQRU5UQVRITE9OfEFGUk8tQU1cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzQzMzcvNDMzNzI4OC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImlkZWFfNDMzNzI4OFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJMQVRJTnxcXFxcYkxBV1xcXFxifENBTExJR1JBUEhZXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xMDIwLzEwMjAwNzQucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJtYW51c2NyaXB0XzEwMjAwNzRcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiSFVNQU5JVEk/RT9TP3xMSUZFIChNR01UfFNLST9MP0xTKXxQSElMXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xMjA1LzEyMDU0OTUucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJkaXNjdXNzaW9uXzEyMDU0OTVcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiWUVBUkJPT0t8RElHIElNQUd8UEhPVE9cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzEwMDYvMTAwNjEwNy5wbmdcIixcbiAgICAgICAgc291cmNlOiBcIm1lbW9yaWVzXzEwMDYxMDdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiTkVUV09SS0lOR1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTU1NC8xNTU0Mzc3LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwibmV0d29ya18xNTU0Mzc3XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIlJFUyhFQSk/UkNIXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjQvMTY0OTk2LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwicmVzZWFyY2hfMTY0OTk2XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkNPTChMRUdFKT9cXFxcYnxDTEFTUyBPRlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTY3LzE2Nzc0My5wbmdcIixcbiAgICAgICAgc291cmNlOiBcIm1vcnRhcmJvYXJkXzE2Nzc0M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJDQVJFRVJ8Sk9CfEdFTiBXUkt8XFxcXGJXT1JLXFxcXGJ8RU5URVJQfFNNQUxMIEJVU1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTQ5LzE0OTAxOC5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImJyaWVmY2FzZV8xNDkwMThcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiQURWSVN8SE9NRXxTT0NJQUwgQ09NfEdSQURFIFxcXFxkfEJPT0tTXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjcvMTY3NzI5LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiZGVza18xNjc3MjlcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiU1dJTVwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTI0LzEyNDIxMi5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInN3aW1taW5nXzEyNDIxMlwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJDT05TVFJVQ1RJT058V09PRHxDQVJQRU5UUlk/XCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xOTczLzE5NzM5NDYucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJ3b29kd29ya2luZ18xOTczOTQ2XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIlZPP0xMRT9ZQkE/TEw/XCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi82OC82ODE3NS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInZvbGxleS1iYWxsXzY4MTc1XCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkZPT1RCQUxMXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjcvMTY3NzQxLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiYW1lcmljYW4tZm9vdGJhbGxfMTY3NzQxXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIkpPVVJOQUxJP1NNXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNzIwLzE3MjAwOTQucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJjb21tdW5pY2F0aW9uXzE3MjAwOTRcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiVEVOTklTXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8xNjQ1LzE2NDU3OTMucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJ0ZW5uaXNfMTY0NTc5M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJTUEVFQ0hcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzUxMi81MTI1MDAucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJzcGVha181MTI1MDBcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiV1JFU1RMSU5HXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi81NzcvNTc3MTMyLnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwid3Jlc3RsaW5nXzU3NzEzMlwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJHUkFQSChJQyk/IChERVNJR058Q09NTXxBUlRTKXxJTlRSIElOVCBWRFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTQ4LzE0ODg2Mi5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImxheWVyc18xNDg4NjJcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiRkFTSCBEU05cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzc3MC83NzAwODgucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJkcmVzc183NzAwODhcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiSlJPVENcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzk0Mi85NDI0NDQucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJyYW5rXzk0MjQ0NFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJXQVRFUlBPTE9cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzYyNS82MjUzODMucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJ3YXRlci1wb2xvXzYyNTM4M1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJIT1JUfExBTkRTQ0FQXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8zNDYvMzQ2MTk1LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwic3Byb3V0XzM0NjE5NVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJBUkFCSUNcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE3MDQvMTcwNDQ5MS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInBhdHRlcm5fMTcwNDQ5MVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJHRVJNQU5cIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzU1NS81NTU2MTMucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJnZXJtYW55XzU1NTYxM1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJISVNUfEFOQ1QgQ0lWTFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTUwMS8xNTAxNDc4LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwicGFyY2htZW50XzE1MDE0NzhcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiU0NVTFBUXCIsXG4gICAgICAgIHVybDogXCJodHRwczovL2Nkbi1pY29ucy1wbmcuZmxhdGljb24uY29tLzUxMi8yMDcxLzIwNzEyMTEucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJzY3VscHR1cmVfMjA3MTIxMVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJTQ0l8SVNDU1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTY3LzE2NzczMy5wbmdcIixcbiAgICAgICAgc291cmNlOiBcIm1pY3Jvc2NvcGVfMTY3NzMzXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIihCQVNFfFNPRlQpQkFMTFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTY2OC8xNjY4NTE0LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwiYmFzZWJhbGxfMTY2ODUxNFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJQSFlTSU98SFVNIEJPRFl8Qk9EIERZTnxLSU5FU0lPTE9HWVwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMjA0NC8yMDQ0NzE1LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwieC1yYXlfMjA0NDcxNVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCIoXnxcXFxcYilNQVRIfElCIE1USFwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTI4NC8xMjg0MDk1LnBuZ1wiLFxuICAgICAgICBzb3VyY2U6IFwibWF0aGVtYXRpY3NfMTI4NDA5NVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJEUkFXfDJEfDNEfERFU0lHTnxERT9TTnxEUkFGVCBBUkN8U0NSRUVOIFBSSU5UfEVYUEwgQVJDSHxEUkFGVCBURUNcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzY4MS82ODE1NjAucG5nXCIsXG4gICAgICAgIHNvdXJjZTogXCJza2V0Y2hfNjgxNTYwXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHJlZ2V4OiBcIlNBTkRCT1hcIixcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vY2RuLWljb25zLXBuZy5mbGF0aWNvbi5jb20vNTEyLzE1ODgvMTU4ODc0NS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcInNhbmRib3hfMTU4ODc0NVwiLFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWdleDogXCJEUklWRVJ8RFJJVklOR1wiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvNzQxLzc0MTQwNy5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImNhcl83NDE0MDdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcmVnZXg6IFwiLlwiLFxuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9jZG4taWNvbnMtcG5nLmZsYXRpY29uLmNvbS81MTIvMTY0LzE2NDk0OS5wbmdcIixcbiAgICAgICAgc291cmNlOiBcImJvb2tzaGVsZl8xNjQ5NDlcIixcbiAgICB9LFxuXTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERUZBVUxUX1RIRU1FUyA9IGV4cG9ydHMuQ0xBU1NJQ19USEVNRVMgPSBleHBvcnRzLkxBVVNEX1RIRU1FUyA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuZXhwb3J0cy5MQVVTRF9USEVNRVMgPSBbXCJMQVVTRCBPcmFuZ2VcIiwgXCJMQVVTRCBEYXJrIEJsdWVcIiwgXCJMQVVTRCAyMDE5XCJdO1xuZXhwb3J0cy5DTEFTU0lDX1RIRU1FUyA9IFtcIlNjaG9vbG9neSBQbHVzXCIsIFwiUmFpbmJvd1wiXTtcbmV4cG9ydHMuREVGQVVMVF9USEVNRVMgPSBbXG4gICAge1xuICAgICAgICBuYW1lOiBcIlNjaG9vbG9neSBQbHVzIE1vZGVybiBMaWdodFwiLFxuICAgICAgICB2ZXJzaW9uOiAyLFxuICAgICAgICBjb2xvcjoge1xuICAgICAgICAgICAgaHVlOiAyMDAsXG4gICAgICAgICAgICBtb2Rlcm46IHtcbiAgICAgICAgICAgICAgICBkYXJrOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpbnRlcmZhY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJpbWFyeTogXCIjRUFFQUVBXCIsXG4gICAgICAgICAgICAgICAgICAgIGFjY2VudDogXCIjRjdGN0Y3XCIsXG4gICAgICAgICAgICAgICAgICAgIHNlY29uZGFyeTogXCIjREREXCIsXG4gICAgICAgICAgICAgICAgICAgIGlucHV0OiBcIiNEMEQwRDBcIixcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBcIiNCQUJBQkFcIixcbiAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiBcInJnYmEoMjU1LCAxODMsIDIsIDAuMilcIixcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBcInJnYmEoMTUyLCAyMTIsIDIyOCwgMC44KVwiLFxuICAgICAgICAgICAgICAgICAgICBncmFkZXM6IFwiIzAwOTQwMFwiLFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogXCIjRjQ0MzM2XCIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjYWxlbmRhcjogW1xuICAgICAgICAgICAgICAgICAgICBcIiNkNmU3ZjRcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZDdlOGNmXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2Y5ZTlkNFwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNlN2UwZTVcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZTZiNWM5XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2Y5ZjFjZlwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNkYWYwZjlcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZjlkZGVhXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2ZiZDdkOFwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmMWYyZDFcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZTBlOGY1XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2ZiZDdlNFwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmY2RkZDNcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZTdmMmQ1XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2U2ZTBlZVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmMGU1ZGJcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZmNlOGQxXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2UxZjFlN1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmMGRmZWRcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZTllOWVhXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzAwNDI3Y1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiM2MDMwNzNcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjOGIxOTQxXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzk3MGMwY1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiM5YzNiMDdcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjNjg1MjAzXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzJhNWYxNlwiLFxuICAgICAgICAgICAgICAgICAgICBcIiMwOTU4NGZcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjMDA1YTc1XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzRkNTU1N1wiLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgICBwcmltYXJ5OiBcIiMyQTJBMkFcIixcbiAgICAgICAgICAgICAgICAgICAgbXV0ZWQ6IFwiIzY3NzU4M1wiLFxuICAgICAgICAgICAgICAgICAgICBjb250cmFzdDogXCJ3aGl0ZVwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IDUsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlclNpemU6IDEsXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBsb2dvOiB7XG4gICAgICAgICAgICBwcmVzZXQ6IFwic2Nob29sb2d5X3BsdXNcIixcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJTY2hvb2xvZ3kgUGx1cyBNb2Rlcm4gRGFya1wiLFxuICAgICAgICB2ZXJzaW9uOiAyLFxuICAgICAgICBjb2xvcjoge1xuICAgICAgICAgICAgY3VzdG9tOiB7XG4gICAgICAgICAgICAgICAgcHJpbWFyeTogXCIjMjAyMjI1XCIsXG4gICAgICAgICAgICAgICAgaG92ZXI6IFwiIzQwNDQ0QlwiLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwiIzM2MzkzZlwiLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogXCIjNDA0NDRiXCIsXG4gICAgICAgICAgICAgICAgbGluazogXCIjNmZhOGRjXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbW9kZXJuOiB7XG4gICAgICAgICAgICAgICAgZGFyazogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpbnRlcmZhY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJpbWFyeTogXCIjMzYzOTNGXCIsXG4gICAgICAgICAgICAgICAgICAgIGFjY2VudDogXCIjMkYzMTM2XCIsXG4gICAgICAgICAgICAgICAgICAgIHNlY29uZGFyeTogXCIjMjAyMjI1XCIsXG4gICAgICAgICAgICAgICAgICAgIGlucHV0OiBcIiM0MDQ0NEJcIixcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBcIiNEQ0REREVcIixcbiAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiBcInJnYmEoMTg0LCAxMzQsIDExLCAwLjIpXCIsXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogXCJyZ2JhKDAsIDI1NSwgMjU1LCAwLjEpXCIsXG4gICAgICAgICAgICAgICAgICAgIGdyYWRlczogXCIjOEJDMzRBXCIsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBcIiNGNDQzMzZcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhbGVuZGFyOiBbXG4gICAgICAgICAgICAgICAgICAgIFwiIzQ1N2RhNVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiM1NDdjNDFcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjOTI2YzM3XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzdjM2Q2YlwiLFxuICAgICAgICAgICAgICAgICAgICBcIiMwYjRjOWNcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjMDAyMDljXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzAwNGEwOVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiM3MjcyMWFcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjNDQyMzNlXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzY4MzEzMVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiM3NzBhMGFcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjYTcyNDEzXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI0UwMDI0Q1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiMxODhDMTZcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjYmQ3MzA0XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzgwMTY4Q1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiMxNjQxNTJcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjMDA1NDNmXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzYzM2UxMVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiM0NjFiMmRcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjMDA0MjdjXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzYwMzA3M1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiM4YjE5NDFcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjOTcwYzBjXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzljM2IwN1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiM2ODUyMDNcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjMmE1ZjE2XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzA5NTg0ZlwiLFxuICAgICAgICAgICAgICAgICAgICBcIiMwMDVhNzVcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjNGQ1NTU3XCIsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgICAgIHByaW1hcnk6IFwiI0RDRERERVwiLFxuICAgICAgICAgICAgICAgICAgICBtdXRlZDogXCIjNzI3NjdEXCIsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyYXN0OiBcIiNFRUVFRUVcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiA1LFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJTaXplOiAxLFxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgbG9nbzoge1xuICAgICAgICAgICAgcHJlc2V0OiBcInNjaG9vbG9neV9wbHVzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiUmFpbmJvdyBNb2Rlcm5cIixcbiAgICAgICAgdmVyc2lvbjogMixcbiAgICAgICAgY29sb3I6IHtcbiAgICAgICAgICAgIHJhaW5ib3c6IHtcbiAgICAgICAgICAgICAgICBodWU6IHtcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3BlZWQ6IDUwLFxuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiAzNTksXG4gICAgICAgICAgICAgICAgICAgICAgICBhbHRlcm5hdGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc2F0dXJhdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogNTAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsaWdodG5lc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDUwLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbW9kZXJuOiB7XG4gICAgICAgICAgICAgICAgZGFyazogZmFsc2UsXG4gICAgICAgICAgICAgICAgaW50ZXJmYWNlOiB7XG4gICAgICAgICAgICAgICAgICAgIHByaW1hcnk6IFwiI0VBRUFFQVwiLFxuICAgICAgICAgICAgICAgICAgICBhY2NlbnQ6IFwiI0Y3RjdGN1wiLFxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRhcnk6IFwiI0RERFwiLFxuICAgICAgICAgICAgICAgICAgICBpbnB1dDogXCIjRDBEMEQwXCIsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogXCIjQkFCQUJBXCIsXG4gICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodDogXCJyZ2JhKDI1NSwgMTgzLCAyLCAwLjIpXCIsXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogXCJyZ2JhKDE1MiwgMjEyLCAyMjgsIDAuOClcIixcbiAgICAgICAgICAgICAgICAgICAgZ3JhZGVzOiBcIiMwMDk0MDBcIixcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IFwiI0Y0NDMzNlwiLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2FsZW5kYXI6IFtcbiAgICAgICAgICAgICAgICAgICAgXCIjZDZlN2Y0XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2Q3ZThjZlwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmOWU5ZDRcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZTdlMGU1XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2U2YjVjOVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmOWYxY2ZcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZGFmMGY5XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2Y5ZGRlYVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmYmQ3ZDhcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZjFmMmQxXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2UwZThmNVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNmYmQ3ZTRcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZmNkZGQzXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2U3ZjJkNVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNlNmUwZWVcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZjBlNWRiXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2ZjZThkMVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiNlMWYxZTdcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjZjBkZmVkXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiI2U5ZTllYVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiMwMDQyN2NcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjNjAzMDczXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzhiMTk0MVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiM5NzBjMGNcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjOWMzYjA3XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzY4NTIwM1wiLFxuICAgICAgICAgICAgICAgICAgICBcIiMyYTVmMTZcIixcbiAgICAgICAgICAgICAgICAgICAgXCIjMDk1ODRmXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiIzAwNWE3NVwiLFxuICAgICAgICAgICAgICAgICAgICBcIiM0ZDU1NTdcIixcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJpbWFyeTogXCIjMkEyQTJBXCIsXG4gICAgICAgICAgICAgICAgICAgIG11dGVkOiBcIiM2Nzc1ODNcIixcbiAgICAgICAgICAgICAgICAgICAgY29udHJhc3Q6IFwid2hpdGVcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiA1LFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJTaXplOiAxLFxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgbG9nbzoge1xuICAgICAgICAgICAgcHJlc2V0OiBcInNjaG9vbG9neV9wbHVzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IGNvbnN0YW50c18xLkRFRkFVTFRfVEhFTUVfTkFNRSxcbiAgICAgICAgdmVyc2lvbjogMixcbiAgICAgICAgY29sb3I6IHtcbiAgICAgICAgICAgIGh1ZTogMjEwLFxuICAgICAgICB9LFxuICAgICAgICBsb2dvOiB7XG4gICAgICAgICAgICBwcmVzZXQ6IFwic2Nob29sb2d5X3BsdXNcIixcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJSYWluYm93XCIsXG4gICAgICAgIHZlcnNpb246IDIsXG4gICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICByYWluYm93OiB7XG4gICAgICAgICAgICAgICAgaHVlOiB7XG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwZWVkOiA1MCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heDogMzU5LFxuICAgICAgICAgICAgICAgICAgICAgICAgYWx0ZXJuYXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNhdHVyYXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDUwLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbGlnaHRuZXNzOiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA1MCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgbG9nbzoge1xuICAgICAgICAgICAgcHJlc2V0OiBcInNjaG9vbG9neV9wbHVzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiVG95XCIsXG4gICAgICAgIHZlcnNpb246IDIsXG4gICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICBodWU6IDE1MCxcbiAgICAgICAgfSxcbiAgICAgICAgbG9nbzoge1xuICAgICAgICAgICAgcHJlc2V0OiBcInNjaG9vbG9neV9wbHVzXCIsXG4gICAgICAgIH0sXG4gICAgICAgIGN1cnNvcjoge1xuICAgICAgICAgICAgcHJpbWFyeTogY2hyb21lLnJ1bnRpbWUuZ2V0VVJMKFwiL2ltZ3MvdG95LW1vZGUucG5nXCIpLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkxBVVNEIERhcmsgQmx1ZVwiLFxuICAgICAgICB2ZXJzaW9uOiAyLFxuICAgICAgICBjb2xvcjoge1xuICAgICAgICAgICAgY3VzdG9tOiB7XG4gICAgICAgICAgICAgICAgcHJpbWFyeTogXCIjMTQzZjY5XCIsXG4gICAgICAgICAgICAgICAgaG92ZXI6IFwiIzM0NWY4OVwiLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwiIzM0NWY4OVwiLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogXCIjMDI0ZjdkXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBsb2dvOiB7XG4gICAgICAgICAgICBwcmVzZXQ6IFwibGF1c2RfMjAyMlwiLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkxBVVNEIDIwMTlcIixcbiAgICAgICAgdmVyc2lvbjogMixcbiAgICAgICAgY29sb3I6IHtcbiAgICAgICAgICAgIGN1c3RvbToge1xuICAgICAgICAgICAgICAgIHByaW1hcnk6IFwiIzE0M2Y2OVwiLFxuICAgICAgICAgICAgICAgIGhvdmVyOiBcIiMzNDVmODlcIixcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcIiMzNDVmODlcIixcbiAgICAgICAgICAgICAgICBib3JkZXI6IFwiIzAyNGY3ZFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgbG9nbzoge1xuICAgICAgICAgICAgcHJlc2V0OiBcImxhdXNkXzIwMTlcIixcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJMQVVTRCBPcmFuZ2VcIixcbiAgICAgICAgdmVyc2lvbjogMixcbiAgICAgICAgY29sb3I6IHtcbiAgICAgICAgICAgIGN1c3RvbToge1xuICAgICAgICAgICAgICAgIHByaW1hcnk6IFwiI2ZmN2EwMFwiLFxuICAgICAgICAgICAgICAgIGhvdmVyOiBcIiNmZjlhMjBcIixcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcIiNmZjhhMTBcIixcbiAgICAgICAgICAgICAgICBib3JkZXI6IFwiI2RmNWEwMFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgbG9nbzoge1xuICAgICAgICAgICAgcHJlc2V0OiBcImxhdXNkX2xlZ2FjeVwiLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIlNjaG9vbG9neSBEZWZhdWx0XCIsXG4gICAgICAgIHZlcnNpb246IDIsXG4gICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICBjdXN0b206IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5OiBcIiMwNjc3YmFcIixcbiAgICAgICAgICAgICAgICBob3ZlcjogXCIjMDI0ZjdkXCIsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogXCIjMDAyYzQ3XCIsXG4gICAgICAgICAgICAgICAgYm9yZGVyOiBcIiMwMjRmN2RcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIGxvZ286IHtcbiAgICAgICAgICAgIHByZXNldDogXCJzY2hvb2xvZ3lfbG9nb1wiLFxuICAgICAgICB9LFxuICAgIH0sXG5dO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLndhaXRGb3JFbGVtZW50ID0gZXhwb3J0cy5jcmVhdGVTdmdMb2dvID0gZXhwb3J0cy5zZXRDU1NWYXJpYWJsZSA9IGV4cG9ydHMuZ2V0UGFyZW50cyA9IGV4cG9ydHMuaXNWaXNpYmxlID0gZXhwb3J0cy5nZXRCcm93c2VyID0gZXhwb3J0cy5jcmVhdGVCdXR0b25XaXRoTG9nbyA9IGV4cG9ydHMuY3JlYXRlQnV0dG9uID0gZXhwb3J0cy5jcmVhdGVFbGVtZW50ID0gdm9pZCAwO1xuLyoqXG4gKiBDcmVhdGVzIGEgRE9NIGVsZW1lbnRcbiAqIEByZXR1cm5zIHtIVE1MRWxlbWVudH0gQSBET00gZWxlbWVudFxuICogQHBhcmFtIHtzdHJpbmd9IHRhZyAtIFRoZSBIVE1MIHRhZyBuYW1lIG9mIHRoZSB0eXBlIG9mIERPTSBlbGVtZW50IHRvIGNyZWF0ZVxuICogQHBhcmFtIHtzdHJpbmdbXX0gY2xhc3NMaXN0IC0gQ1NTIGNsYXNzZXMgdG8gYXBwbHkgdG8gdGhlIERPTSBlbGVtZW50XG4gKiBAcGFyYW0ge09iamVjdC48c3RyaW5nLGFueT59IHByb3BlcnRpZXMgLSBQcm9wZXJ0aWVzIHRvIGFwcGx5IHRvIHRoZSBET00gZWxlbWVudFxuICogQHBhcmFtIHtIVE1MRWxlbWVudFtdfSBjaGlsZHJlbiAtIEVsZW1lbnRzIHRvIGFwcGVuZCBhcyBjaGlsZHJlbiB0byB0aGUgY3JlYXRlZCBlbGVtZW50XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQodGFnLCBjbGFzc0xpc3QsIHByb3BlcnRpZXMsIGNoaWxkcmVuKSB7XG4gICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgaWYgKGNsYXNzTGlzdCkge1xuICAgICAgICBmb3IgKGxldCBjIG9mIGNsYXNzTGlzdCkge1xuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChwcm9wZXJ0aWVzKSB7XG4gICAgICAgIGZvciAobGV0IHByb3BlcnR5IGluIHByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGlmIChwcm9wZXJ0aWVzW3Byb3BlcnR5XSBpbnN0YW5jZW9mIE9iamVjdCAmJlxuICAgICAgICAgICAgICAgICEocHJvcGVydGllc1twcm9wZXJ0eV0gaW5zdGFuY2VvZiBGdW5jdGlvbikpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBzdWJwcm9wZXJ0eSBpbiBwcm9wZXJ0aWVzW3Byb3BlcnR5XSkge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50W3Byb3BlcnR5XVtzdWJwcm9wZXJ0eV0gPSBwcm9wZXJ0aWVzW3Byb3BlcnR5XVtzdWJwcm9wZXJ0eV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocHJvcGVydHkgIT09IHVuZGVmaW5lZCAmJiBwcm9wZXJ0aWVzW3Byb3BlcnR5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudFtwcm9wZXJ0eV0gPSBwcm9wZXJ0aWVzW3Byb3BlcnR5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBlbGVtZW50O1xufVxuZXhwb3J0cy5jcmVhdGVFbGVtZW50ID0gY3JlYXRlRWxlbWVudDtcbi8qKlxuICogQ3JlYXRlcyBhIFNjaG9vbG9neSBQbHVzIHRoZW1lZCBidXR0b24gZWxlbWVudFxuICogQHBhcmFtIHtzdHJpbmd9IGlkIFRoZSBJRCBmb3IgdGhlIGJ1dHRvbiBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBUaGUgdGV4dCB0byBzaG93IG9uIHRoZSBidXR0b25cbiAqIEBwYXJhbSB7KGU6IEV2ZW50KT0+dm9pZH0gY2FsbGJhY2sgQSBmdW5jdGlvbiB0byBiZSBjYWxsZWQgd2hlbiB0aGUgYnV0dG9uIGlzIGNsaWNrZWRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9uKGlkLCB0ZXh0LCBjYWxsYmFjaykge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBbXCJzdWJtaXQtc3Bhbi13cmFwcGVyXCIsIFwic3BsdXMtbW9kYWwtYnV0dG9uXCJdLCB7IG9uY2xpY2s6IGNhbGxiYWNrIH0sIFtcbiAgICAgICAgY3JlYXRlRWxlbWVudChcImlucHV0XCIsIFtcImZvcm0tc3VibWl0XCIsIFwic3BsdXMtdHJhY2stY2xpY2tzXCJdLCB7XG4gICAgICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgICAgICAgdmFsdWU6IHRleHQsXG4gICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICBkYXRhc2V0OiB7IHNwbHVzVHJhY2tpbmdDb250ZXh0OiBcIlMrIEJ1dHRvblwiIH0sXG4gICAgICAgIH0pLFxuICAgIF0pO1xufVxuZXhwb3J0cy5jcmVhdGVCdXR0b24gPSBjcmVhdGVCdXR0b247XG5mdW5jdGlvbiBjcmVhdGVCdXR0b25XaXRoTG9nbyhpZCwgdGV4dCwgY2FsbGJhY2spIHtcbiAgICBsZXQgYnV0dG9uID0gY3JlYXRlQnV0dG9uKGlkLCB0ZXh0LCBjYWxsYmFjayk7XG4gICAgbGV0IGltZyA9IGNyZWF0ZVN2Z0xvZ28oKTtcbiAgICBPYmplY3QuYXNzaWduKGltZy5zdHlsZSwge1xuICAgICAgICB2ZXJ0aWNhbEFsaWduOiBcIm1pZGRsZVwiLFxuICAgICAgICBwYWRkaW5nTGVmdDogXCI0cHhcIixcbiAgICAgICAgd2lkdGg6IFwiMThweFwiLFxuICAgIH0pO1xuICAgIGJ1dHRvbi5wcmVwZW5kKGltZyk7XG4gICAgYnV0dG9uLnN0eWxlLnNldFByb3BlcnR5KFwiaGVpZ2h0XCIsIFwiMzZweFwiLCBcImltcG9ydGFudFwiKTtcbiAgICBsZXQgYnV0dG9uSW5wdXQgPSBidXR0b24ucXVlcnlTZWxlY3RvcihcImlucHV0XCIpO1xuICAgIGJ1dHRvbklucHV0LnN0eWxlLnBhZGRpbmdMZWZ0ID0gXCI0cHhcIjtcbiAgICBidXR0b25JbnB1dC5zdHlsZS5zZXRQcm9wZXJ0eShcImhlaWdodFwiLCBcIjM2cHhcIiwgXCJpbXBvcnRhbnRcIik7XG4gICAgYnV0dG9uLnN0eWxlLmN1cnNvciA9IFwicG9pbnRlclwiO1xuICAgIHJldHVybiBidXR0b247XG59XG5leHBvcnRzLmNyZWF0ZUJ1dHRvbldpdGhMb2dvID0gY3JlYXRlQnV0dG9uV2l0aExvZ287XG4vKipcbiAqIFJldHVybnMgdGhlIG5hbWUgb2YgdGhlIGN1cnJlbnQgYnJvd3NlclxuICogQHJldHVybnMge1wiQ2hyb21lXCJ8XCJGaXJlZm94XCJ8XCJPdGhlclwifSBOYW1lIG9mIHRoZSBjdXJyZW50IGJyb3dzZXJcbiAqL1xuZnVuY3Rpb24gZ2V0QnJvd3NlcigpIHtcbiAgICBpZiAodHlwZW9mIGdsb2JhbFRoaXMuY2hyb21lICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcy5icm93c2VyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJGaXJlZm94XCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBMaWtlbHkgY2FwdHVyZXMgYWxsIENocm9taXVtLWJhc2VkIGJyb3dzZXJzXG4gICAgICAgICAgICByZXR1cm4gXCJDaHJvbWVcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwiT3RoZXJcIjtcbiAgICB9XG59XG5leHBvcnRzLmdldEJyb3dzZXIgPSBnZXRCcm93c2VyO1xuLyoqXG4gKiBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbGVtZW50IGlzIHZpc2libGUgdG8gdGhlIHVzZXJcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW0gVGhlIGVsZW1lbnQgdG8gY2hlY2sgZm9yIHZpc2liaWxpdHlcbiAqIEByZXR1cm5zIHtib29sZWFufSBgdHJ1ZWAgaWYgZWxlbWVudCBpcyB2aXNpYmxlXG4gKi9cbmZ1bmN0aW9uIGlzVmlzaWJsZShlbGVtKSB7XG4gICAgcmV0dXJuICEhKGVsZW0ub2Zmc2V0V2lkdGggfHwgZWxlbS5vZmZzZXRIZWlnaHQgfHwgZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCk7XG59XG5leHBvcnRzLmlzVmlzaWJsZSA9IGlzVmlzaWJsZTtcbi8qKlxuICogUmV0dXJucyBhbGwgcGFyZW50IGVsZW1lbnRzIG1hdGNoaW5nIHRoZSBwcm92aWRlZCBzZWxlY3Rvci5cbiAqIEVzc2VudGlhbGx5IHdvcmtzIGxpa2UgYSByZXZlcnNlIGBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsYC5cbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW0gVGhlIHRhcmdldCBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgQSBDU1Mgc2VsZWN0b3JcbiAqIEByZXR1cm5zIHtIVE1MRWxlbWVudFtdfSBBbiBhcnJheSBvZiBtYXRjaGluZyBwYXJlbnQgZWxlbWVudHNcbiAqL1xuZnVuY3Rpb24gZ2V0UGFyZW50cyhlbGVtLCBzZWxlY3Rvcikge1xuICAgIHZhciBwYXJlbnRzID0gW107XG4gICAgdmFyIGZpcnN0Q2hhcjtcbiAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgICAgZmlyc3RDaGFyID0gc2VsZWN0b3IuY2hhckF0KDApO1xuICAgIH1cbiAgICBmb3IgKDsgZWxlbSAmJiBlbGVtICE9PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7IGVsZW0gPSBlbGVtLnBhcmVudE5vZGUpIHtcbiAgICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgICAgICBpZiAoZmlyc3RDaGFyID09PSBcIi5cIikge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtLmNsYXNzTGlzdC5jb250YWlucyhzZWxlY3Rvci5zdWJzdHIoMSkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcmVudHMucHVzaChlbGVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmlyc3RDaGFyID09PSBcIiNcIikge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtLmlkID09PSBzZWxlY3Rvci5zdWJzdHIoMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50cy5wdXNoKGVsZW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmaXJzdENoYXIgPT09IFwiW1wiKSB7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW0uaGFzQXR0cmlidXRlKHNlbGVjdG9yLnN1YnN0cigxLCBzZWxlY3Rvci5sZW5ndGggLSAxKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50cy5wdXNoKGVsZW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlbGVtLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gc2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICBwYXJlbnRzLnB1c2goZWxlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwYXJlbnRzLnB1c2goZWxlbSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBhcmVudHM7XG59XG5leHBvcnRzLmdldFBhcmVudHMgPSBnZXRQYXJlbnRzO1xuLyoqXG4gKiBTZXRzIHRoZSB2YWx1ZSBvZiBhIENTUyB2YXJpYWJsZSBvbiB0aGUgZG9jdW1lbnRcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFZhcmlhYmxlIG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWwgTmV3IHZhcmlhYmxlIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHNldENTU1ZhcmlhYmxlKG5hbWUsIHZhbCkge1xuICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShgLS0ke25hbWV9YCwgdmFsICE9PSBudWxsICYmIHZhbCAhPT0gdm9pZCAwID8gdmFsIDogbnVsbCk7XG59XG5leHBvcnRzLnNldENTU1ZhcmlhYmxlID0gc2V0Q1NTVmFyaWFibGU7XG5mdW5jdGlvbiBjcmVhdGVTdmdMb2dvKC4uLmNsYXNzZXMpIHtcbiAgICBsZXQgY2lyY2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJjaXJjbGVcIik7XG4gICAgY2lyY2xlLnNldEF0dHJpYnV0ZShcImN4XCIsIFwiMjUwXCIpO1xuICAgIGNpcmNsZS5zZXRBdHRyaWJ1dGUoXCJjeVwiLCBcIjI1MFwiKTtcbiAgICBjaXJjbGUuc2V0QXR0cmlidXRlKFwiclwiLCBcIjIzMFwiKTtcbiAgICBjaXJjbGUuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgXCJmaWxsOiBub25lOyBzdHJva2Utd2lkdGg6IDM1cHg7IHN0cm9rZTogY3VycmVudENvbG9yO1wiKTtcbiAgICBsZXQgbGluZTEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcImxpbmVcIik7XG4gICAgbGluZTEuc2V0QXR0cmlidXRlKFwieDFcIiwgXCIyNTBcIik7XG4gICAgbGluZTEuc2V0QXR0cmlidXRlKFwieTFcIiwgXCIxMjVcIik7XG4gICAgbGluZTEuc2V0QXR0cmlidXRlKFwieDJcIiwgXCIyNTBcIik7XG4gICAgbGluZTEuc2V0QXR0cmlidXRlKFwieTJcIiwgXCIzNzVcIik7XG4gICAgbGluZTEuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgXCJzdHJva2UtbGluZWNhcDogcm91bmQ7IHN0cm9rZS13aWR0aDogMzVweDsgc3Ryb2tlOiBjdXJyZW50Q29sb3I7XCIpO1xuICAgIGxldCBsaW5lMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwibGluZVwiKTtcbiAgICBsaW5lMi5zZXRBdHRyaWJ1dGUoXCJ4MVwiLCBcIjEyNVwiKTtcbiAgICBsaW5lMi5zZXRBdHRyaWJ1dGUoXCJ5MVwiLCBcIjI1MFwiKTtcbiAgICBsaW5lMi5zZXRBdHRyaWJ1dGUoXCJ4MlwiLCBcIjM3NVwiKTtcbiAgICBsaW5lMi5zZXRBdHRyaWJ1dGUoXCJ5MlwiLCBcIjI1MFwiKTtcbiAgICBsaW5lMi5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcInN0cm9rZS1saW5lY2FwOiByb3VuZDsgc3Ryb2tlLXdpZHRoOiAzNXB4OyBzdHJva2U6IGN1cnJlbnRDb2xvcjtcIik7XG4gICAgbGV0IHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwic3ZnXCIpO1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ2aWV3Qm94XCIsIFwiMCAwIDUwMCA1MDBcIik7XG4gICAgc3ZnLmFwcGVuZChjaXJjbGUsIGxpbmUxLCBsaW5lMik7XG4gICAgaWYgKGNsYXNzZXMpIHtcbiAgICAgICAgc3ZnLmNsYXNzTGlzdC5hZGQoLi4uY2xhc3Nlcyk7XG4gICAgfVxuICAgIHJldHVybiBzdmc7XG59XG5leHBvcnRzLmNyZWF0ZVN2Z0xvZ28gPSBjcmVhdGVTdmdMb2dvO1xuZnVuY3Rpb24gd2FpdEZvckVsZW1lbnQoc2VsZWN0b3IsIGNoZWNrX2ludGVydmFsID0gNTApIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIGxldCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIGxldCBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgICAgICAgICBpZiAoZWxlbSkge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoZWxlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGNoZWNrX2ludGVydmFsKTtcbiAgICB9KTtcbn1cbmV4cG9ydHMud2FpdEZvckVsZW1lbnQgPSB3YWl0Rm9yRWxlbWVudDtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Mb2dnZXIgPSB2b2lkIDA7XG5leHBvcnRzLkxvZ2dlciA9IHtcbiAgICBsb2c6ICgoKSA9PiBjb25zb2xlLmxvZy5iaW5kKGdsb2JhbFRoaXMuY29uc29sZSwgYCVjK2AsIGNyZWF0ZUxvZ1ByZWZpeChcIiM4MUQ0RkFcIikpKSgpLFxuICAgIGVycm9yOiAoKCkgPT4gY29uc29sZS5lcnJvci5iaW5kKGdsb2JhbFRoaXMuY29uc29sZSwgYCVjK2AsIGNyZWF0ZUxvZ1ByZWZpeChcIiNGRjY5NjFcIikpKSgpLFxuICAgIGluZm86ICgoKSA9PiBjb25zb2xlLmluZm8uYmluZChnbG9iYWxUaGlzLmNvbnNvbGUsIGAlYytgLCBjcmVhdGVMb2dQcmVmaXgoXCJ3aGl0ZVwiKSkpKCksXG4gICAgd2FybjogKCgpID0+IGNvbnNvbGUud2Fybi5iaW5kKGdsb2JhbFRoaXMuY29uc29sZSwgYCVjK2AsIGNyZWF0ZUxvZ1ByZWZpeChcIiNGREZEOTZcIikpKSgpLFxuICAgIHRyYWNlOiAoKCkgPT4gY29uc29sZS50cmFjZS5iaW5kKGdsb2JhbFRoaXMuY29uc29sZSwgYCVjK2AsIGNyZWF0ZUxvZ1ByZWZpeChcIm9yYW5nZVwiKSkpKCksXG4gICAgZGVidWc6ICgoKSA9PiBjb25zb2xlLmRlYnVnLmJpbmQoZ2xvYmFsVGhpcy5jb25zb2xlLCBgJWMrYCwgY3JlYXRlTG9nUHJlZml4KFwibGlnaHRncmVlblwiKSkpKCksXG59O1xuZnVuY3Rpb24gY3JlYXRlTG9nUHJlZml4KGNvbG9yKSB7XG4gICAgcmV0dXJuIGBjb2xvcjoke2NvbG9yfTtib3JkZXI6MXB4IHNvbGlkICMyQTJBMkE7Ym9yZGVyLXJhZGl1czoxMDAlO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OmJvbGQ7cGFkZGluZzogMCA0cHggMCA0cHg7YmFja2dyb3VuZC1jb2xvcjojMkEyQTJBYDtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY2hvb2xvZ3lUaGVtZSA9IGV4cG9ydHMuVGhlbWVJY29uID0gZXhwb3J0cy5UaGVtZUN1cnNvciA9IGV4cG9ydHMuVGhlbWVMb2dvID0gZXhwb3J0cy5UaGVtZUNvbG9yID0gZXhwb3J0cy5Nb2Rlcm5Db2xvckRlZmluaXRpb24gPSBleHBvcnRzLk1vZGVybk9wdGlvbnNEZWZpbml0aW9uID0gZXhwb3J0cy5Nb2Rlcm5UZXh0Q29sb3JEZWZpbml0aW9uID0gZXhwb3J0cy5Nb2Rlcm5JbnRlcmZhY2VDb2xvckRlZmluaXRpb24gPSBleHBvcnRzLlJhaW5ib3dDb2xvckRlZmluaXRpb24gPSBleHBvcnRzLlJhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb24gPSBleHBvcnRzLlJhaW5ib3dDb2xvckNvbXBvbmVudEFuaW1hdGlvbiA9IGV4cG9ydHMuQ3VzdG9tQ29sb3JEZWZpbml0aW9uID0gdm9pZCAwO1xuY2xhc3MgQ3VzdG9tQ29sb3JEZWZpbml0aW9uIHtcbiAgICAvKipcbiAgICAgKiBBbGxvd3MgZmluZSBjb250cm9sIG92ZXIgaW5kaXZpZHVhbCBjb2xvcnMgaW4gdGhlIGludGVyZmFjZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcmltYXJ5IFRoZSBtYWluIGludGVyZmFjZSBjb2xvciB1c2VkIGluIHRoZSBuYXZpZ2F0aW9uIGJhciBhbmQgYXMgdGhlIHByaW1hcnkgY29sb3IgZm9yIGJ1dHRvbnMgYW5kIG90aGVyIFVJIGVsZW1lbnRzLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBob3ZlciBUaGUgY29sb3Igb2YgaXRlbXMgaW4gdGhlIHNldHRpbmdzIG1lbnVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYmFja2dyb3VuZCBUaGUgYmFja2dyb3VuZCBjb2xvciBvZiBidXR0b25zIGFuZCBvdGhlciBpbnRlcmFjdGl2ZSBlbGVtZW50cyB3aGVuIHlvdSBob3ZlciBvdmVyIHRoZW0sIGFuZCB0aGUgY29sb3Igb2YgdGhlIHNldHRpbmdzIGRyb3Bkb3duIG1lbnVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYm9yZGVyIFRoZSBib3JkZXIgY29sb3Igb2YgYnV0dG9ucyBhbmQgdGhlIGJvcmRlciBiZXR3ZWVuIHRoZSBuYXZpZ2F0aW9uIGJhciBhbmQgZHJvcC1kb3duIG1lbnVzXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGxpbmsgVGhlIGNvbG9yIG9mIGxpbmtzIGFuZCBvdGhlciBpbnRlcmFjdGl2ZSB0ZXh0XG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHJpbWFyeSwgaG92ZXIsIGJhY2tncm91bmQsIGJvcmRlciwgbGluaykge1xuICAgICAgICB0aGlzLnByaW1hcnkgPSBwcmltYXJ5O1xuICAgICAgICB0aGlzLmhvdmVyID0gaG92ZXI7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IGJhY2tncm91bmQ7XG4gICAgICAgIHRoaXMuYm9yZGVyID0gYm9yZGVyO1xuICAgICAgICB0aGlzLmxpbmsgPSBsaW5rIHx8IGhvdmVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgYEN1c3RvbUNvbG9yRGVmaW5pdGlvbmAgZ2l2ZW4gYSB2YWxpZCBKU09OIG9iamVjdFxuICAgICAqIEBwYXJhbSB7Kn0gbyBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgYEN1c3RvbUNvbG9yRGVmaW5pdGlvbmBcbiAgICAgKiBAcmV0dXJucyB7Q3VzdG9tQ29sb3JEZWZpbml0aW9ufVxuICAgICAqL1xuICAgIHN0YXRpYyBsb2FkRnJvbU9iamVjdChvKSB7XG4gICAgICAgIHJldHVybiBvXG4gICAgICAgICAgICA/IG5ldyBDdXN0b21Db2xvckRlZmluaXRpb24oby5wcmltYXJ5LCBvLmhvdmVyLCBvLmJhY2tncm91bmQsIG8uYm9yZGVyLCBvLmxpbmsgfHwgby5ob3ZlcilcbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgIH1cbn1cbmV4cG9ydHMuQ3VzdG9tQ29sb3JEZWZpbml0aW9uID0gQ3VzdG9tQ29sb3JEZWZpbml0aW9uO1xuY2xhc3MgUmFpbmJvd0NvbG9yQ29tcG9uZW50QW5pbWF0aW9uIHtcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGEgY29sb3IgYW5pbWF0aW9uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNwZWVkIFNwZWVkIG9mIHRoZSBhbmltYXRpb247IGxhcmdlciBudW1iZXJzIGFyZSBmYXN0ZXIuICgwLTEwMClcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0IFRoZSBpbml0aWFsIHZhbHVlIGZvciB0aGUgYW5pbWF0aW9uICh0aGUgZmlyc3QgdGltZSBzdGVwKTsgdXNlZCB0byBjcmVhdGUgc2VwYXJhdGlvbiBiZXR3ZWVuIHRoZSBhbmltYXRpb25zIG9mIHRoZSBkaWZmZXJlbnQgY29sb3IgY29tcG9udGVudHMuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG1pbiBUaGUgbWluaW11bSB2YWx1ZSBpbiB0aGUgYW5pbWF0aW9uIGN5Y2xlOyB0aGUgYW5pbWF0aW9uIHdpbGwgY3ljbGUgdGhyb3VnaCBhbGwgcG9zc2libGUgdmFsdWVzIGZvciB0aGUgY29tcG9uZW50IGdyZWF0ZXIgdGhhbiB0aGlzIHZhbHVlIGFuZCBsZXNzIHRoYW4gbWF4LlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXggVGhlIG1heGltdW0gdmFsdWUgaW4gdGhlIGFuaW1hdGlvbiBjeWNsZTsgdGhlIGFuaW1hdGlvbiB3aWxsIGN5Y2xlIHRocm91Z2ggYWxsIHBvc3NpYmxlIHZhbHVlcyBmb3IgdGhlIGNvbXBvbmVudCBsZXNzIHRoYW4gdGhpcyB2YWx1ZSBhbmQgZ3JlYXRlciB0aGFuIG1pbi5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGFsdGVybmF0ZSBXaGVuIHRydWU6IGNvbG9yIGNvbXBvbnRlbnQgYW5pbWF0ZXMgZnJvbSBtaW4gdG8gbWF4IGFuZCB0aGVuIGZyb20gbWF4IHRvIG1pbi4gV2hlbiBmYWxzZTogY29sb3IgY29tcG9uZW50IGFuaW1hdGVzIGZyb20gbWluIHRvIG1heCBhbmQgdGhlbiByZXNldHMgYmFjayB0byBtaW4gYWdhaW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzcGVlZCwgb2Zmc2V0LCBtaW4sIG1heCwgYWx0ZXJuYXRlKSB7XG4gICAgICAgIHRoaXMuc3BlZWQgPSBzcGVlZDtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgICAgIHRoaXMubWluID0gbWluO1xuICAgICAgICB0aGlzLm1heCA9IG1heDtcbiAgICAgICAgdGhpcy5hbHRlcm5hdGUgPSBhbHRlcm5hdGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBgUmFpbmJvd0NvbG9yQ29tcG9uZW50QW5pbWF0aW9uYCBnaXZlbiBhIHZhbGlkIEpTT04gb2JqZWN0XG4gICAgICogQHBhcmFtIHsqfSBvIEpTT04gcmVwcmVzZW50YXRpb24gb2YgYSBgUmFpbmJvd0NvbG9yQ29tcG9uZW50QW5pbWF0aW9uYFxuICAgICAqIEByZXR1cm5zIHtSYWluYm93Q29sb3JDb21wb25lbnRBbmltYXRpb259XG4gICAgICovXG4gICAgc3RhdGljIGxvYWRGcm9tT2JqZWN0KG8pIHtcbiAgICAgICAgcmV0dXJuIG9cbiAgICAgICAgICAgID8gbmV3IFJhaW5ib3dDb2xvckNvbXBvbmVudEFuaW1hdGlvbihvLnNwZWVkLCBvLm9mZnNldCwgby5taW4sIG8ubWF4LCBvLmFsdGVybmF0ZSlcbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgIH1cbn1cbmV4cG9ydHMuUmFpbmJvd0NvbG9yQ29tcG9uZW50QW5pbWF0aW9uID0gUmFpbmJvd0NvbG9yQ29tcG9uZW50QW5pbWF0aW9uO1xuY2xhc3MgUmFpbmJvd0NvbG9yQ29tcG9uZW50RGVmaW5pdGlvbiB7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBhIHJhaW5ib3cgY29sb3IgY29tcG9uZW50IChodWUsIHNhdHVyYXRpb24sIGxpZ2h0bmVzcylcbiAgICAgKiBAcGFyYW0ge1JhaW5ib3dDb2xvckNvbXBvbmVudEFuaW1hdGlvbn0gYW5pbWF0ZSBEZWZpbmVzIGEgY29sb3IgYW5pbWF0aW9uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIERlZmluZXMgYSBzdGF0aWMgY29sb3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihhbmltYXRlLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmFuaW1hdGUgPSBhbmltYXRlO1xuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBgUmFpbmJvd0NvbG9yQ29tcG9uZW50RGVmaW5pdGlvbmAgZ2l2ZW4gYSB2YWxpZCBKU09OIG9iamVjdFxuICAgICAqIEBwYXJhbSB7Kn0gbyBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgYFJhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb25gXG4gICAgICogQHJldHVybnMge1JhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb259XG4gICAgICovXG4gICAgc3RhdGljIGxvYWRGcm9tT2JqZWN0KG8pIHtcbiAgICAgICAgcmV0dXJuIG9cbiAgICAgICAgICAgID8gbmV3IFJhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb24oUmFpbmJvd0NvbG9yQ29tcG9uZW50QW5pbWF0aW9uLmxvYWRGcm9tT2JqZWN0KG8uYW5pbWF0ZSksIG8udmFsdWUpXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9XG59XG5leHBvcnRzLlJhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb24gPSBSYWluYm93Q29sb3JDb21wb25lbnREZWZpbml0aW9uO1xuY2xhc3MgUmFpbmJvd0NvbG9yRGVmaW5pdGlvbiB7XG4gICAgLyoqXG4gICAgICogQWxsb3dzIGZvciBhbmltYXRpb25zIG9mIGh1ZSwgc2F0dXJhdGlvbiwgYW5kIGxpZ2h0bmVzcyBvZiBpbnRlcmZhY2UgY29sb3JzLlxuICAgICAqIEBwYXJhbSB7UmFpbmJvd0NvbG9yQ29tcG9uZW50RGVmaW5pdGlvbn0gaHVlIERlZmluZXMgYmVoYXZpb3Igb2YgdGhlIGh1ZSBjb21wb25lbnQgb2YgdGhlIGludGVyZmFjZSBjb2xvcnNcbiAgICAgKiBAcGFyYW0ge1JhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb259IHNhdHVyYXRpb24gRGVmaW5lcyBiZWhhdmlvciBvZiB0aGUgc2F0dXJhdGlvbiBjb21wb25lbnQgb2YgdGhlIGludGVyZmFjZSBjb2xvcnNcbiAgICAgKiBAcGFyYW0ge1JhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb259IGxpZ2h0bmVzcyBEZWZpbmVzIGJlaGF2aW9yIG9mIHRoZSBsaWdodG5lc3MgY29tcG9uZW50IG9mIHRoZSBpbnRlcmZhY2UgY29sb3JzXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoaHVlLCBzYXR1cmF0aW9uLCBsaWdodG5lc3MpIHtcbiAgICAgICAgdGhpcy5odWUgPSBodWU7XG4gICAgICAgIHRoaXMuc2F0dXJhdGlvbiA9IHNhdHVyYXRpb247XG4gICAgICAgIHRoaXMubGlnaHRuZXNzID0gbGlnaHRuZXNzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgYFJhaW5ib3dDb2xvckRlZmluaXRpb25gIGdpdmVuIGEgdmFsaWQgSlNPTiBvYmplY3RcbiAgICAgKiBAcGFyYW0geyp9IG8gSlNPTiByZXByZXNlbnRhdGlvbiBvZiBhIGBSYWluYm93Q29sb3JEZWZpbml0aW9uYFxuICAgICAqIEByZXR1cm5zIHtSYWluYm93Q29sb3JEZWZpbml0aW9ufVxuICAgICAqL1xuICAgIHN0YXRpYyBsb2FkRnJvbU9iamVjdChvKSB7XG4gICAgICAgIHJldHVybiBvXG4gICAgICAgICAgICA/IG5ldyBSYWluYm93Q29sb3JEZWZpbml0aW9uKFJhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb24ubG9hZEZyb21PYmplY3Qoby5odWUpLCBSYWluYm93Q29sb3JDb21wb25lbnREZWZpbml0aW9uLmxvYWRGcm9tT2JqZWN0KG8uc2F0dXJhdGlvbiksIFJhaW5ib3dDb2xvckNvbXBvbmVudERlZmluaXRpb24ubG9hZEZyb21PYmplY3Qoby5saWdodG5lc3MpKVxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5SYWluYm93Q29sb3JEZWZpbml0aW9uID0gUmFpbmJvd0NvbG9yRGVmaW5pdGlvbjtcbmNsYXNzIE1vZGVybkludGVyZmFjZUNvbG9yRGVmaW5pdGlvbiB7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBpbmRpdmlkdWFsIGNvbG9ycyBmb3IgZGlmZmVyZW50IFNjaG9vbG9neSBpbnRlcmZhY2UgY29tcG9uZW50c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcmltYXJ5IFByaW1hcnkgaW50ZXJmYWNlIGNvbG9yIC0tIHNob3VsZCBiZSB0aGUgbGlnaHRlc3Qgb2YgdGhlIG1haW4gY29sb3JzXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFjY2VudCBBY2NlbnQgaW50ZXJmYWNlIGNvbG9yIC0tIHNob3VsZCBiZSBkYXJrZXIgdGhhbiBwcmltYXJ5LCBidXQgbGlnaHRlciB0aGFuIHNlY29uZGFyeVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZWNvbmRhcnkgU2Vjb25kYXJ5IGludGVyZmFjZSBjb2xvciAtLSBzaG91bGQgYmUgdGhlIGRhcmtlc3Qgb2YgdGhlIG1haW4gY29sb3JzXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlucHV0IENvbG9yIGZvciB0ZXh0Ym94ZXMgYW5kIG90aGVyIGlucHV0IGZpZWxkc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBib3JkZXIgQ29sb3IgZm9yIGVsZW1lbnQgYm9yZGVyc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBoaWdobGlnaHQgQ29sb3IgZm9yIGhpZ2hsaWdodHMsIHdhcm5pbmdzLCBhbmQgd3JvbmcgYW5zd2Vyc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhY3RpdmUgQ29sb3IgZm9yIGFjdGl2ZSBlbGVtZW50cywgc2VsZWN0ZWQgaXRlbXMsIGFuZCBjb3JyZWN0IGFuc3dlcnNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZ3JhZGVzIENvbG9yIGZvciBncmFkZXMgYW5kIHNjb3Jlc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlcnJvciBDb2xvciBmb3IgZXJyb3IgbWVzc2FnZXMgYW5kIGljb25zXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHJpbWFyeSwgYWNjZW50LCBzZWNvbmRhcnksIGlucHV0LCBib3JkZXIsIGhpZ2hsaWdodCwgYWN0aXZlLCBncmFkZXMsIGVycm9yKSB7XG4gICAgICAgIHRoaXMucHJpbWFyeSA9IHByaW1hcnk7XG4gICAgICAgIHRoaXMuYWNjZW50ID0gYWNjZW50O1xuICAgICAgICB0aGlzLnNlY29uZGFyeSA9IHNlY29uZGFyeTtcbiAgICAgICAgdGhpcy5pbnB1dCA9IGlucHV0O1xuICAgICAgICB0aGlzLmJvcmRlciA9IGJvcmRlcjtcbiAgICAgICAgdGhpcy5oaWdobGlnaHQgPSBoaWdobGlnaHQ7XG4gICAgICAgIHRoaXMuYWN0aXZlID0gYWN0aXZlO1xuICAgICAgICB0aGlzLmdyYWRlcyA9IGdyYWRlcztcbiAgICAgICAgdGhpcy5lcnJvciA9IGVycm9yO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgYE1vZGVybkludGVyZmFjZUNvbG9yRGVmaW5pdGlvbmAgZ2l2ZW4gYSB2YWxpZCBKU09OIG9iamVjdFxuICAgICAqIEBwYXJhbSB7Kn0gbyBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgYE1vZGVybkludGVyZmFjZUNvbG9yRGVmaW5pdGlvbmBcbiAgICAgKiBAcmV0dXJucyB7TW9kZXJuSW50ZXJmYWNlQ29sb3JEZWZpbml0aW9ufVxuICAgICAqL1xuICAgIHN0YXRpYyBsb2FkRnJvbU9iamVjdChvKSB7XG4gICAgICAgIHJldHVybiBvXG4gICAgICAgICAgICA/IG5ldyBNb2Rlcm5JbnRlcmZhY2VDb2xvckRlZmluaXRpb24oby5wcmltYXJ5LCBvLmFjY2VudCwgby5zZWNvbmRhcnksIG8uaW5wdXQsIG8uYm9yZGVyLCBvLmhpZ2hsaWdodCwgby5hY3RpdmUsIG8uZ3JhZGVzLCBvLmVycm9yKVxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Nb2Rlcm5JbnRlcmZhY2VDb2xvckRlZmluaXRpb24gPSBNb2Rlcm5JbnRlcmZhY2VDb2xvckRlZmluaXRpb247XG5jbGFzcyBNb2Rlcm5UZXh0Q29sb3JEZWZpbml0aW9uIHtcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGNvbG9ycyBmb3IgdGV4dHVhbCBlbGVtZW50cyBvZiB0aGUgU2Nob29sb2d5IGludGVyZmFjZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcmltYXJ5IE1haW4gdGV4dCBjb2xvciwgc2hvdWxkIGNvbnRyYXN0IHdpdGggYGludGVyZmFjZS5wcmltYXJ5YFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtdXRlZCBNdXRlZCB0ZXh0IGNvbG9yLCBzaG91bGQgc3RhbmQgb3V0IGxlc3MgdGhhbiBwcmltYXJ5XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyYXN0IENvbnRyYXN0IHRleHQgY29sb3IsIHNob3VsZCBhbHdheXMgYmUgbGlnaHQgb3Igd2hpdGVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihwcmltYXJ5LCBtdXRlZCwgY29udHJhc3QpIHtcbiAgICAgICAgdGhpcy5wcmltYXJ5ID0gcHJpbWFyeTtcbiAgICAgICAgdGhpcy5tdXRlZCA9IG11dGVkO1xuICAgICAgICB0aGlzLmNvbnRyYXN0ID0gY29udHJhc3Q7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBgTW9kZXJuVGV4dENvbG9yRGVmaW5pdGlvbmAgZ2l2ZW4gYSB2YWxpZCBKU09OIG9iamVjdFxuICAgICAqIEBwYXJhbSB7Kn0gbyBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgYE1vZGVyblRleHRDb2xvckRlZmluaXRpb25gXG4gICAgICogQHJldHVybnMge01vZGVyblRleHRDb2xvckRlZmluaXRpb259XG4gICAgICovXG4gICAgc3RhdGljIGxvYWRGcm9tT2JqZWN0KG8pIHtcbiAgICAgICAgcmV0dXJuIG8gPyBuZXcgTW9kZXJuVGV4dENvbG9yRGVmaW5pdGlvbihvLnByaW1hcnksIG8ubXV0ZWQsIG8uY29udHJhc3QpIDogdW5kZWZpbmVkO1xuICAgIH1cbn1cbmV4cG9ydHMuTW9kZXJuVGV4dENvbG9yRGVmaW5pdGlvbiA9IE1vZGVyblRleHRDb2xvckRlZmluaXRpb247XG5jbGFzcyBNb2Rlcm5PcHRpb25zRGVmaW5pdGlvbiB7XG4gICAgLyoqXG4gICAgICogQ29uZmlndXJlcyBzdHlsZSBvcHRpb25zIGZvciB0aGUgbW9kZXJuIHRoZW1lIGVuZ2luZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBib3JkZXJSYWRpdXMgVGhlIHNpemUgb2YgYm9yZGVyIHJhZGl1cyByb3VuZGVkIGNvcm5lcnMgKGluIHBpeGVscylcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYm9yZGVyU2l6ZSBUaGUgd2lkdGggb2YgYm9yZGVycyAoaW4gcGl4ZWxzKVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBwYWRkaW5nIFRoZSBhbW91bnQgb2YgcGFkZGluZyBmb3IgY2VydGFpbiBlbGVtZW50cyAoaW4gcGl4ZWxzKVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGJvcmRlclJhZGl1cywgYm9yZGVyU2l6ZSwgcGFkZGluZykge1xuICAgICAgICB0aGlzLmJvcmRlclJhZGl1cyA9IGJvcmRlclJhZGl1cztcbiAgICAgICAgdGhpcy5ib3JkZXJTaXplID0gYm9yZGVyU2l6ZTtcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gcGFkZGluZztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgcmV0dXJucyBhIGBNb2Rlcm5PcHRpb25zRGVmaW5pdGlvbmAgZ2l2ZW4gYSB2YWxpZCBKU09OIG9iamVjdFxuICAgICAqIEBwYXJhbSB7Kn0gbyBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgYE1vZGVybk9wdGlvbnNEZWZpbml0aW9uYFxuICAgICAqIEByZXR1cm5zIHtNb2Rlcm5PcHRpb25zRGVmaW5pdGlvbn1cbiAgICAgKi9cbiAgICBzdGF0aWMgbG9hZEZyb21PYmplY3Qobykge1xuICAgICAgICByZXR1cm4gbyA/IG5ldyBNb2Rlcm5PcHRpb25zRGVmaW5pdGlvbihvLmJvcmRlclJhZGl1cywgby5ib3JkZXJTaXplLCBvLnBhZGRpbmcpIDogdW5kZWZpbmVkO1xuICAgIH1cbn1cbmV4cG9ydHMuTW9kZXJuT3B0aW9uc0RlZmluaXRpb24gPSBNb2Rlcm5PcHRpb25zRGVmaW5pdGlvbjtcbmNsYXNzIE1vZGVybkNvbG9yRGVmaW5pdGlvbiB7XG4gICAgLyoqXG4gICAgICogVXRpbGl6ZXMgdGhlIG1vZGVybiB0aGVtZSBlbmdpbmUgdG8gY29udHJvbCBzaWduaWZpY2FudGx5IG1vcmUgb2YgdGhlIGludGVyZmFjZSdzIGNvbG9ycy5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRhcmsgV2hldGhlciB0aGUgdGhlbWUgaXMgZGFyayBvciBsaWdodFxuICAgICAqIEBwYXJhbSB7TW9kZXJuSW50ZXJmYWNlQ29sb3JEZWZpbml0aW9ufSBpbnRlcmZhY2VDb2xvcnMgQ29sb3JzIGZvciBtYWluIGludGVyZmFjZSBjb21wb25lbnRzXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXX0gY2FsZW5kYXIgQ29sb3JzIGZvciBTY2hvb2xvZ3kgY2FsZW5kYXIgZXZlbnRzIChzcGVjaWZ5IGV4YWN0bHkgMjApXG4gICAgICogQHBhcmFtIHtNb2Rlcm5UZXh0Q29sb3JEZWZpbml0aW9ufSB0ZXh0IENvbG9ycyBmb3IgdGV4dCBlbGVtZW50c1xuICAgICAqIEBwYXJhbSB7TW9kZXJuT3B0aW9uc0RlZmluaXRpb259IG9wdGlvbnMgU3R5bGUgb3B0aW9ucyBmb3IgdGhlIGludGVyZmFjZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGRhcmssIGludGVyZmFjZUNvbG9ycywgY2FsZW5kYXIsIHRleHQsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5kYXJrID0gZGFyaztcbiAgICAgICAgdGhpcy5pbnRlcmZhY2UgPSBpbnRlcmZhY2VDb2xvcnM7XG4gICAgICAgIHRoaXMuY2FsZW5kYXIgPSBjYWxlbmRhcjtcbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgcmV0dXJucyBhIGBNb2Rlcm5Db2xvckRlZmluaXRpb25gIGdpdmVuIGEgdmFsaWQgSlNPTiBvYmplY3RcbiAgICAgKiBAcGFyYW0geyp9IG8gSlNPTiByZXByZXNlbnRhdGlvbiBvZiBhIGBNb2Rlcm5Db2xvckRlZmluaXRpb25gXG4gICAgICogQHJldHVybnMge01vZGVybkNvbG9yRGVmaW5pdGlvbn1cbiAgICAgKi9cbiAgICBzdGF0aWMgbG9hZEZyb21PYmplY3Qobykge1xuICAgICAgICByZXR1cm4gb1xuICAgICAgICAgICAgPyBuZXcgTW9kZXJuQ29sb3JEZWZpbml0aW9uKG8uZGFyaywgTW9kZXJuSW50ZXJmYWNlQ29sb3JEZWZpbml0aW9uLmxvYWRGcm9tT2JqZWN0KG8uaW50ZXJmYWNlKSwgby5jYWxlbmRhciwgTW9kZXJuVGV4dENvbG9yRGVmaW5pdGlvbi5sb2FkRnJvbU9iamVjdChvLnRleHQpLCBNb2Rlcm5PcHRpb25zRGVmaW5pdGlvbi5sb2FkRnJvbU9iamVjdChvLm9wdGlvbnMpKVxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Nb2Rlcm5Db2xvckRlZmluaXRpb24gPSBNb2Rlcm5Db2xvckRlZmluaXRpb247XG5jbGFzcyBUaGVtZUNvbG9yIHtcbiAgICAvKipcbiAgICAgKiBEZXNjcmliZXMgdGhlIGNvbG9ycyB0byB1c2UgZm9yIHRoZSBTY2hvb2xvZ3kgaW50ZXJmYWNlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGh1ZSBUaGUgdGhlbWUncyBIU0wgY29sb3IgaHVlLCB1c2VkIHRvIGNvbG9yIHRoZSBpbnRlcmZhY2UgYnkgbW9kaWZ5aW5nIHRoZSBzYXR1cmF0aW9uIGFuZCBsaWdodG5lc3MgdmFsdWVzXG4gICAgICogQHBhcmFtIHtDdXN0b21Db2xvckRlZmluaXRpb259IGN1c3RvbSBBbGxvd3MgZmluZSBjb250cm9sIG92ZXIgaW5kaXZpZHVhbCBjb2xvcnMgaW4gdGhlIGludGVyZmFjZVxuICAgICAqIEBwYXJhbSB7UmFpbmJvd0NvbG9yRGVmaW5pdGlvbn0gcmFpbmJvdyBBbGxvd3MgZm9yIGFuaW1hdGlvbnMgb2YgaHVlLCBzYXR1cmF0aW9uLCBhbmQgbGlnaHRuZXNzIG9mIGludGVyZmFjZSBjb2xvcnNcbiAgICAgKiBAcGFyYW0ge01vZGVybkNvbG9yRGVmaW5pdGlvbn0gbW9kZXJuIFV0aWxpemVzIHRoZSBtb2Rlcm4gdGhlbWUgZW5naW5lIHRvIGNvbnRyb2wgc2lnbmlmaWNhbnRseSBtb3JlIG9mIHRoZSBpbnRlcmZhY2UncyBjb2xvcnNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihodWUsIGN1c3RvbSwgcmFpbmJvdywgbW9kZXJuKSB7XG4gICAgICAgIHRoaXMuaHVlID0gaHVlO1xuICAgICAgICB0aGlzLmN1c3RvbSA9IGN1c3RvbTtcbiAgICAgICAgdGhpcy5yYWluYm93ID0gcmFpbmJvdztcbiAgICAgICAgdGhpcy5tb2Rlcm4gPSBtb2Rlcm47XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBgVGhlbWVDb2xvcmAgZ2l2ZW4gYSB2YWxpZCBKU09OIG9iamVjdFxuICAgICAqIEBwYXJhbSB7Kn0gbyBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgYFRoZW1lQ29sb3JgXG4gICAgICogQHJldHVybnMge1RoZW1lQ29sb3J9XG4gICAgICovXG4gICAgc3RhdGljIGxvYWRGcm9tT2JqZWN0KG8pIHtcbiAgICAgICAgcmV0dXJuIG9cbiAgICAgICAgICAgID8gbmV3IFRoZW1lQ29sb3Ioby5odWUsIEN1c3RvbUNvbG9yRGVmaW5pdGlvbi5sb2FkRnJvbU9iamVjdChvLmN1c3RvbSksIFJhaW5ib3dDb2xvckRlZmluaXRpb24ubG9hZEZyb21PYmplY3Qoby5yYWluYm93KSwgTW9kZXJuQ29sb3JEZWZpbml0aW9uLmxvYWRGcm9tT2JqZWN0KG8ubW9kZXJuKSlcbiAgICAgICAgICAgIDogbmV3IFRoZW1lQ29sb3IoMjEwKTtcbiAgICB9XG59XG5leHBvcnRzLlRoZW1lQ29sb3IgPSBUaGVtZUNvbG9yO1xuY2xhc3MgVGhlbWVMb2dvIHtcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGEgbG9nbyBpbWFnZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgTGluayB0byBhbiBpbWFnZVxuICAgICAqIEBwYXJhbSB7XCJzY2hvb2xvZ3lfcGx1c1wifFwic2Nob29sb2d5X2xvZ29cInxcImxhdXNkX2xlZ2FjeVwifFwibGF1c2RfMjAxOVwifFwibGF1c2RfMjAyMlwifFwiZGVmYXVsdFwifSBwcmVzZXQgQnVpbHQtaW4gaW1hZ2VcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHByZXNldCkge1xuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICAgICAgdGhpcy5wcmVzZXQgPSBwcmVzZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBgVGhlbWVMb2dvYCBnaXZlbiBhIHZhbGlkIEpTT04gb2JqZWN0XG4gICAgICogQHBhcmFtIHsqfSBvIEpTT04gcmVwcmVzZW50YXRpb24gb2YgYSBgVGhlbWVMb2dvYFxuICAgICAqIEByZXR1cm5zIHtUaGVtZUxvZ299XG4gICAgICovXG4gICAgc3RhdGljIGxvYWRGcm9tT2JqZWN0KG8pIHtcbiAgICAgICAgcmV0dXJuIG8gPyBuZXcgVGhlbWVMb2dvKG8udXJsLCBvLnByZXNldCkgOiBuZXcgVGhlbWVMb2dvKHVuZGVmaW5lZCwgXCJzY2hvb2xvZ3lfcGx1c1wiKTtcbiAgICB9XG59XG5leHBvcnRzLlRoZW1lTG9nbyA9IFRoZW1lTG9nbztcbmNsYXNzIFRoZW1lQ3Vyc29yIHtcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGEgY3Vyc29yIGltYWdlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHByaW1hcnkgTGluayB0byBhbiBpbWFnZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHByaW1hcnkpIHtcbiAgICAgICAgdGhpcy5wcmltYXJ5ID0gcHJpbWFyeTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgcmV0dXJucyBhIGBUaGVtZUN1cnNvcmAgZ2l2ZW4gYSB2YWxpZCBKU09OIG9iamVjdFxuICAgICAqIEBwYXJhbSB7Kn0gbyBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgYFRoZW1lQ3Vyc29yYFxuICAgICAqIEByZXR1cm5zIHtUaGVtZUN1cnNvcn1cbiAgICAgKi9cbiAgICBzdGF0aWMgbG9hZEZyb21PYmplY3Qobykge1xuICAgICAgICByZXR1cm4gbyA/IG5ldyBUaGVtZUN1cnNvcihvLnByaW1hcnkpIDogdW5kZWZpbmVkO1xuICAgIH1cbn1cbmV4cG9ydHMuVGhlbWVDdXJzb3IgPSBUaGVtZUN1cnNvcjtcbmNsYXNzIFRoZW1lSWNvbiB7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBhIGN1c3RvbSBjb3Vyc2UgaWNvblxuICAgICAqIEBwYXJhbSB7UmVnRXhwfHN0cmluZ30gcmVnZXggUmVndWxhciBleHByZXNzaW9uIHRvIG1hdGNoIGNvdXJzZXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsIExpbmsgdG8gYW4gaW1hZ2VcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZWdleCwgdXJsKSB7XG4gICAgICAgIHRoaXMucmVnZXggPSByZWdleDtcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBgVGhlbWVJY29uW11gIGdpdmVuIGEgdmFsaWQgSlNPTiBhcnJheVxuICAgICAqIEBwYXJhbSB7W119IGFycmF5IEpTT04gcmVwcmVzZW50YXRpb24gb2YgYSBgVGhlbWVJY29uW11gXG4gICAgICogQHJldHVybnMge1RoZW1lSWNvbltdfVxuICAgICAqL1xuICAgIHN0YXRpYyBsb2FkQXJyYXlGcm9tT2JqZWN0KGFycmF5KSB7XG4gICAgICAgIHJldHVybiBhcnJheSA/IGFycmF5Lm1hcCh4ID0+IG5ldyBUaGVtZUljb24oeC5yZWdleCwgeC51cmwpKSA6IHVuZGVmaW5lZDtcbiAgICB9XG59XG5leHBvcnRzLlRoZW1lSWNvbiA9IFRoZW1lSWNvbjtcbmNsYXNzIFNjaG9vbG9neVRoZW1lIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgdGhlbWUgZnJvbSB0aGUgZ2l2ZW4gcGFyYW1ldGVyc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFVzZWQgZm9yIGlkZW50aWZpY2F0aW9uIHB1cnBvc2VzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHZlcnNpb24gVGhlbWUgc3BlY2lmaWNhdGlvbiB2ZXJzaW9uXG4gICAgICogQHBhcmFtIHtUaGVtZUNvbG9yfSBjb2xvciBJbnRlcmZhY2UgY29sb3JzXG4gICAgICogQHBhcmFtIHtUaGVtZUxvZ299IGxvZ28gTG9nbyBpbWFnZVxuICAgICAqIEBwYXJhbSB7VGhlbWVDdXJzb3J9IGN1cnNvciBDdXJzb3IgaW1hZ2VcbiAgICAgKiBAcGFyYW0ge1RoZW1lSWNvbltdfSBpY29ucyBDdXN0b20gY291cnNlIGljb25zXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobmFtZSwgdmVyc2lvbiwgY29sb3IsIGxvZ28sIGN1cnNvciwgaWNvbnMpIHtcbiAgICAgICAgaWYgKCFuYW1lKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGVtZSBtdXN0IGhhdmUgYSBuYW1lXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb24gfHwgU2Nob29sb2d5VGhlbWUuQ1VSUkVOVF9WRVJTSU9OO1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG4gICAgICAgIHRoaXMubG9nbyA9IGxvZ287XG4gICAgICAgIHRoaXMuY3Vyc29yID0gY3Vyc29yO1xuICAgICAgICB0aGlzLmljb25zID0gaWNvbnM7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBgU2Nob29sb2d5VGhlbWVgIGdpdmVuIGEgdmFsaWQgSlNPTiBvYmplY3RcbiAgICAgKiBAcGFyYW0geyp9IG8gSlNPTiByZXByZXNlbnRhdGlvbiBvZiBhIGBTY2hvb2xvZ3lUaGVtZWBcbiAgICAgKiBAcmV0dXJucyB7U2Nob29sb2d5VGhlbWV9XG4gICAgICovXG4gICAgc3RhdGljIGxvYWRGcm9tT2JqZWN0KG8pIHtcbiAgICAgICAgaWYgKG8gJiYgby52ZXJzaW9uID09PSBTY2hvb2xvZ3lUaGVtZS5DVVJSRU5UX1ZFUlNJT04pIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgU2Nob29sb2d5VGhlbWUoby5uYW1lLCBvLnZlcnNpb24sIFRoZW1lQ29sb3IubG9hZEZyb21PYmplY3Qoby5jb2xvciksIFRoZW1lTG9nby5sb2FkRnJvbU9iamVjdChvLmxvZ28pLCBUaGVtZUN1cnNvci5sb2FkRnJvbU9iamVjdChvLmN1cnNvciksIFRoZW1lSWNvbi5sb2FkQXJyYXlGcm9tT2JqZWN0KG8uaWNvbnMpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdGhlbWUgb2JqZWN0IHByb3ZpZGVkLiBNYWtlIHN1cmUgdGhlIHByb3ZpZGVkIEpTT04gaXMgYSB2YWxpZCB2ZXJzaW9uICR7U2Nob29sb2d5VGhlbWUuQ1VSUkVOVF9WRVJTSU9OfSB0aGVtZS5gKTtcbiAgICB9XG59XG5leHBvcnRzLlNjaG9vbG9neVRoZW1lID0gU2Nob29sb2d5VGhlbWU7XG5TY2hvb2xvZ3lUaGVtZS5DVVJSRU5UX1ZFUlNJT04gPSAyO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBNOyIsIm1vZHVsZS5leHBvcnRzID0galF1ZXJ5OyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8vIFRoaXMgZW50cnkgbW9kdWxlIGlzIHJlZmVyZW5jZWQgYnkgb3RoZXIgbW9kdWxlcyBzbyBpdCBjYW4ndCBiZSBpbmxpbmVkXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOTY5MCk7XG4iXSwibmFtZXMiOlsiZmFjdG9yeSIsIiQiLCJ1bmRlZmluZWQiLCJkZWZhdWx0T3B0cyIsImJlZm9yZVNob3ciLCJub29wIiwibW92ZSIsImNoYW5nZSIsInNob3ciLCJoaWRlIiwiY29sb3IiLCJmbGF0Iiwic2hvd0lucHV0IiwiYWxsb3dFbXB0eSIsInNob3dCdXR0b25zIiwiY2xpY2tvdXRGaXJlc0NoYW5nZSIsInNob3dJbml0aWFsIiwic2hvd1BhbGV0dGUiLCJzaG93UGFsZXR0ZU9ubHkiLCJoaWRlQWZ0ZXJQYWxldHRlU2VsZWN0IiwidG9nZ2xlUGFsZXR0ZU9ubHkiLCJzaG93U2VsZWN0aW9uUGFsZXR0ZSIsImxvY2FsU3RvcmFnZUtleSIsImFwcGVuZFRvIiwibWF4U2VsZWN0aW9uU2l6ZSIsImNhbmNlbFRleHQiLCJjaG9vc2VUZXh0IiwidG9nZ2xlUGFsZXR0ZU1vcmVUZXh0IiwidG9nZ2xlUGFsZXR0ZUxlc3NUZXh0IiwiY2xlYXJUZXh0Iiwibm9Db2xvclNlbGVjdGVkVGV4dCIsInByZWZlcnJlZEZvcm1hdCIsImNsYXNzTmFtZSIsImNvbnRhaW5lckNsYXNzTmFtZSIsInJlcGxhY2VyQ2xhc3NOYW1lIiwic2hvd0FscGhhIiwidGhlbWUiLCJwYWxldHRlIiwic2VsZWN0aW9uUGFsZXR0ZSIsImRpc2FibGVkIiwib2Zmc2V0Iiwic3BlY3RydW1zIiwiSUUiLCJleGVjIiwid2luZG93IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwicmdiYVN1cHBvcnQiLCJjb250YWlucyIsInN0ciIsInN1YnN0ciIsImluZGV4T2YiLCJzdHlsZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNzc1RleHQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJyZXBsYWNlSW5wdXQiLCJqb2luIiwibWFya3VwIiwiZ3JhZGllbnRGaXgiLCJpIiwicGFsZXR0ZVRlbXBsYXRlIiwicCIsIm9wdHMiLCJodG1sIiwibGVuZ3RoIiwiY3VycmVudCIsInRpbnkiLCJ0aW55Y29sb3IiLCJjIiwidG9Ic2wiLCJsIiwiZXF1YWxzIiwiZm9ybWF0dGVkU3RyaW5nIiwidG9TdHJpbmciLCJzd2F0Y2hTdHlsZSIsInRvUmdiU3RyaW5nIiwidG9GaWx0ZXIiLCJwdXNoIiwiYXBwZW5kIiwiYXR0ciIsInNwZWN0cnVtIiwiZWxlbWVudCIsIm8iLCJmdW5jIiwid2FpdCIsImRlYm91bmNlIiwidGltZW91dCIsImNhbGxiYWNrQ29udGV4dCIsImV4dGVuZCIsImNhbGxiYWNrcyIsImJpbmQiLCJpbnN0YW5jZU9wdGlvbnMiLCJyZXNpemUiLCJyZWZsb3ciLCJjb250ZXh0IiwidGhpcyIsImFyZ3MiLCJhcmd1bWVudHMiLCJ0aHJvdHRsZXIiLCJhcHBseSIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJ2aXNpYmxlIiwiaXNEcmFnZ2luZyIsImRyYWdXaWR0aCIsImRyYWdIZWlnaHQiLCJkcmFnSGVscGVySGVpZ2h0Iiwic2xpZGVIZWlnaHQiLCJhbHBoYVdpZHRoIiwiYWxwaGFTbGlkZUhlbHBlcldpZHRoIiwic2xpZGVIZWxwZXJIZWlnaHQiLCJjdXJyZW50SHVlIiwiY3VycmVudFNhdHVyYXRpb24iLCJjdXJyZW50VmFsdWUiLCJjdXJyZW50QWxwaGEiLCJwYWxldHRlQXJyYXkiLCJwYWxldHRlTG9va3VwIiwic2xpY2UiLCJkcmFnZ2luZ0NsYXNzIiwic2hpZnRNb3ZlbWVudERpcmVjdGlvbiIsImRvYyIsIm93bmVyRG9jdW1lbnQiLCJib3VuZEVsZW1lbnQiLCJib2R5IiwiY29udGFpbmVyIiwiYWRkQ2xhc3MiLCJwaWNrZXJDb250YWluZXIiLCJmaW5kIiwiZHJhZ2dlciIsImRyYWdIZWxwZXIiLCJzbGlkZXIiLCJzbGlkZUhlbHBlciIsImFscGhhU2xpZGVySW5uZXIiLCJhbHBoYVNsaWRlciIsImFscGhhU2xpZGVIZWxwZXIiLCJ0ZXh0SW5wdXQiLCJwYWxldHRlQ29udGFpbmVyIiwiaW5pdGlhbENvbG9yQ29udGFpbmVyIiwiY2FuY2VsQnV0dG9uIiwiY2xlYXJCdXR0b24iLCJjaG9vc2VCdXR0b24iLCJ0b2dnbGVCdXR0b24iLCJpc0lucHV0IiwiaXMiLCJpc0lucHV0VHlwZUNvbG9yIiwiaW5wdXRUeXBlQ29sb3JTdXBwb3J0Iiwic2hvdWxkUmVwbGFjZSIsInJlcGxhY2VyIiwib2Zmc2V0RWxlbWVudCIsInByZXZpZXdFbGVtZW50IiwiaW5pdGlhbENvbG9yIiwidmFsIiwiY29sb3JPblNob3ciLCJjdXJyZW50UHJlZmVycmVkRm9ybWF0IiwiaXNFbXB0eSIsImFwcGx5T3B0aW9ucyIsInRleHQiLCJpc0FycmF5IiwiaiIsInJnYiIsInRvZ2dsZUNsYXNzIiwidXBkYXRlU2VsZWN0aW9uUGFsZXR0ZUZyb21TdG9yYWdlIiwibG9jYWxTdG9yYWdlIiwib2xkUGFsZXR0ZSIsInNwbGl0IiwiZWFjaCIsImFkZENvbG9yVG9TZWxlY3Rpb25QYWxldHRlIiwiZSIsImluQXJyYXkiLCJzaGlmdCIsImRyYXdQYWxldHRlIiwiY3VycmVudENvbG9yIiwiZ2V0IiwibWFwIiwidW5pcXVlIiwicmV2ZXJzZSIsImdldFVuaXF1ZVNlbGVjdGlvblBhbGV0dGUiLCJkcmF3SW5pdGlhbCIsImluaXRpYWwiLCJkcmFnU3RhcnQiLCJ0cmlnZ2VyIiwiZHJhZ1N0b3AiLCJyZW1vdmVDbGFzcyIsInNldEZyb21UZXh0SW5wdXQiLCJ2YWx1ZSIsImlzVmFsaWQiLCJzZXQiLCJ1cGRhdGVPcmlnaW5hbElucHV0IiwidG9nZ2xlIiwiZXZlbnQiLCJFdmVudCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImhpZGVBbGwiLCJvbiIsIm9ua2V5ZG93biIsImNsaWNrb3V0IiwidXBkYXRlVUkiLCJrZXlDb2RlIiwiYnV0dG9uIiwicmV2ZXJ0Iiwib2ZmIiwiaWdub3JlRm9ybWF0Q2hhbmdlIiwibmV3Q29sb3IiLCJuZXdIc3YiLCJ0b0hzdiIsImgiLCJzIiwidiIsImEiLCJnZXRGb3JtYXQiLCJmcm9tUmF0aW8iLCJNYXRoIiwicm91bmQiLCJmb3JtYXQiLCJ1cGRhdGVIZWxwZXJMb2NhdGlvbnMiLCJmbGF0Q29sb3IiLCJjc3MiLCJ0b0hleFN0cmluZyIsInJlYWxDb2xvciIsImRpc3BsYXlDb2xvciIsInJlYWxIZXgiLCJyZWFsUmdiIiwiYWxwaGEiLCJ0b1JnYiIsInJlYWxBbHBoYSIsImdyYWRpZW50IiwiZ3JhZGllbnRUeXBlIiwiZHJhZ1giLCJkcmFnWSIsIm1heCIsIm1pbiIsImFscGhhWCIsInNsaWRlWSIsImZpcmVDYWxsYmFjayIsImhhc0NoYW5nZWQiLCJ3aWR0aCIsImhlaWdodCIsInBpY2tlciIsImlucHV0IiwiZXh0cmFZIiwiZHBXaWR0aCIsIm91dGVyV2lkdGgiLCJkcEhlaWdodCIsIm91dGVySGVpZ2h0IiwiaW5wdXRIZWlnaHQiLCJkb2NFbGVtIiwiZG9jdW1lbnRFbGVtZW50Iiwidmlld1dpZHRoIiwiY2xpZW50V2lkdGgiLCJzY3JvbGxMZWZ0Iiwidmlld0hlaWdodCIsImNsaWVudEhlaWdodCIsInNjcm9sbFRvcCIsIm9mZnNldExlZnQiLCJsZWZ0Iiwib2Zmc2V0VG9wIiwidG9wIiwiYWJzIiwiYm90dG9tIiwicmlnaHQiLCJnZXRPZmZzZXQiLCJkaXNhYmxlIiwiYWZ0ZXIiLCJwYXJlbnQiLCJwYWxldHRlRWxlbWVudENsaWNrIiwiZGF0YSIsImlnbm9yZSIsInRhcmdldCIsImNsb3Nlc3QiLCJzdG9wUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsImNsaWNrIiwia2V5ZG93biIsImhhc0NsYXNzIiwiZHJhZ2dhYmxlIiwic2hpZnRLZXkiLCJwYXJzZUZsb2F0Iiwib2xkRHJhZ1giLCJvbGREcmFnWSIsImZ1cnRoZXJGcm9tWCIsInNldFZhbHVlIiwicGFsZXR0ZUV2ZW50IiwiaW5pdGlhbGl6ZSIsInNwZWN0Iiwib3B0aW9uIiwib3B0aW9uTmFtZSIsIm9wdGlvblZhbHVlIiwiZW5hYmxlIiwiY29vcmQiLCJkZXN0cm95IiwicmVtb3ZlIiwiaWQiLCJvYmoiLCJBcnJheSIsInByb3RvdHlwZSIsImNhbGwiLCJjb25jYXQiLCJvbm1vdmUiLCJvbnN0YXJ0Iiwib25zdG9wIiwiZHJhZ2dpbmciLCJtYXhIZWlnaHQiLCJtYXhXaWR0aCIsImhhc1RvdWNoIiwiZHVyaW5nRHJhZ0V2ZW50cyIsInByZXZlbnQiLCJyZXR1cm5WYWx1ZSIsImRvY3VtZW50TW9kZSIsInN0b3AiLCJ0MCIsIm9yaWdpbmFsRXZlbnQiLCJ0b3VjaGVzIiwicGFnZVgiLCJwYWdlWSIsIndoaWNoIiwiZm4iLCJkYXRhSUQiLCJleHRyYSIsIm1ldGhvZCIsIkVycm9yIiwicmVtb3ZlRGF0YSIsImxvYWQiLCJsb2FkT3B0cyIsImRlZmF1bHRzIiwiX2NhY2hlZFJlc3VsdCIsImNvbG9ySW5wdXQiLCJ0eXBlIiwibG9jYWxpemF0aW9uIiwicGFsZXR0ZXMiLCJwcm9jZXNzTmF0aXZlQ29sb3JJbnB1dHMiLCJjb2xvcklucHV0cyIsInRyaW1MZWZ0IiwidHJpbVJpZ2h0IiwidGlueUNvdW50ZXIiLCJtYXRoIiwibWF0aFJvdW5kIiwibWF0aE1pbiIsIm1hdGhNYXgiLCJtYXRoUmFuZG9tIiwicmFuZG9tIiwiciIsImciLCJiIiwib2siLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJtYXRjaCIsIm5hbWVkIiwibmFtZXMiLCJtYXRjaGVycyIsInJnYmEiLCJoc2wiLCJoc2xhIiwiaHN2IiwiaHN2YSIsImhleDgiLCJjb252ZXJ0SGV4VG9EZWNpbWFsIiwicGFyc2VJbnRGcm9tSGV4IiwiaGV4NiIsImhleDMiLCJzdHJpbmdJbnB1dFRvT2JqZWN0IiwiaGFzT3duUHJvcGVydHkiLCJib3VuZDAxIiwiU3RyaW5nIiwiY29udmVydFRvUGVyY2VudGFnZSIsImZsb29yIiwiZiIsInEiLCJ0IiwibW9kIiwiaHN2VG9SZ2IiLCJodWUycmdiIiwiaHNsVG9SZ2IiLCJib3VuZEFscGhhIiwiaW5wdXRUb1JHQiIsIl9vcmlnaW5hbElucHV0IiwiX3IiLCJfZyIsIl9iIiwiX2EiLCJfcm91bmRBIiwiX2Zvcm1hdCIsIl9ncmFkaWVudFR5cGUiLCJfb2siLCJfdGNfaWQiLCJyZ2JUb0hzbCIsImQiLCJyZ2JUb0hzdiIsInJnYlRvSGV4IiwiYWxsb3czQ2hhciIsImhleCIsInBhZDIiLCJjaGFyQXQiLCJyZ2JhVG9IZXgiLCJkZXNhdHVyYXRlIiwiYW1vdW50IiwiY2xhbXAwMSIsInNhdHVyYXRlIiwiZ3JleXNjYWxlIiwibGlnaHRlbiIsImJyaWdodGVuIiwiZGFya2VuIiwic3BpbiIsImh1ZSIsImNvbXBsZW1lbnQiLCJ0cmlhZCIsInRldHJhZCIsInNwbGl0Y29tcGxlbWVudCIsImFuYWxvZ291cyIsInJlc3VsdHMiLCJzbGljZXMiLCJwYXJ0IiwicmV0IiwibW9ub2Nocm9tYXRpYyIsIm1vZGlmaWNhdGlvbiIsImlzRGFyayIsImdldEJyaWdodG5lc3MiLCJpc0xpZ2h0IiwiZ2V0T3JpZ2luYWxJbnB1dCIsImdldEFscGhhIiwic2V0QWxwaGEiLCJ0b0hzdlN0cmluZyIsInRvSHNsU3RyaW5nIiwidG9IZXgiLCJ0b0hleDgiLCJ0b0hleDhTdHJpbmciLCJ0b1BlcmNlbnRhZ2VSZ2IiLCJ0b1BlcmNlbnRhZ2VSZ2JTdHJpbmciLCJ0b05hbWUiLCJoZXhOYW1lcyIsInNlY29uZENvbG9yIiwiaGV4OFN0cmluZyIsInNlY29uZEhleDhTdHJpbmciLCJmb3JtYXRTZXQiLCJoYXNBbHBoYSIsIl9hcHBseU1vZGlmaWNhdGlvbiIsIl9hcHBseUNvbWJpbmF0aW9uIiwiY29sb3IxIiwiY29sb3IyIiwibWl4IiwidzEiLCJyZ2IxIiwicmdiMiIsInciLCJ3MiIsInJlYWRhYmlsaXR5IiwiYzEiLCJjMiIsImJyaWdodG5lc3NBIiwiYnJpZ2h0bmVzc0IiLCJjb2xvckRpZmYiLCJicmlnaHRuZXNzIiwiaXNSZWFkYWJsZSIsIm1vc3RSZWFkYWJsZSIsImJhc2VDb2xvciIsImNvbG9yTGlzdCIsImJlc3RDb2xvciIsImJlc3RTY29yZSIsImJlc3RJc1JlYWRhYmxlIiwicmVhZGFibGUiLCJzY29yZSIsImFsaWNlYmx1ZSIsImFudGlxdWV3aGl0ZSIsImFxdWEiLCJhcXVhbWFyaW5lIiwiYXp1cmUiLCJiZWlnZSIsImJpc3F1ZSIsImJsYWNrIiwiYmxhbmNoZWRhbG1vbmQiLCJibHVlIiwiYmx1ZXZpb2xldCIsImJyb3duIiwiYnVybHl3b29kIiwiYnVybnRzaWVubmEiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicmVkIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0YW4iLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGUiLCJ3aGl0ZXNtb2tlIiwieWVsbG93IiwieWVsbG93Z3JlZW4iLCJmbGlwcGVkIiwiZmxpcCIsImlzTmFOIiwibiIsImlzT25lUG9pbnRaZXJvIiwicHJvY2Vzc1BlcmNlbnQiLCJpc1BlcmNlbnRhZ2UiLCJwYXJzZUludCIsIkNTU19VTklUIiwiUEVSTUlTU0lWRV9NQVRDSDMiLCJQRVJNSVNTSVZFX01BVENINCIsIlJlZ0V4cCIsIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwic3RlcCIsIm5leHQiLCJyZWplY3RlZCIsInJlc3VsdCIsImRvbmUiLCJ0aGVuIiwiX19pbXBvcnREZWZhdWx0IiwiX19lc01vZHVsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsImpxdWVyeV8xIiwibWF0ZXJpYWxpemVfY3NzXzEiLCJhbmFseXRpY3NfMSIsImNvbnN0YW50c18xIiwiZGVmYXVsdF9pY29uc18xIiwiZGVmYXVsdF90aGVtZXNfMSIsImRvbV8xIiwibG9nZ2VyXzEiLCJ0aGVtZV9tb2RlbF8xIiwic2Nob29sb2d5UGx1c0xvZ29JbWFnZVVybCIsImNocm9tZSIsInJ1bnRpbWUiLCJnZXRVUkwiLCJzY2hvb2xvZ3lMb2dvSW1hZ2VVcmwiLCJsYXVzZExlZ2FjeUltYWdlVXJsIiwibGF1c2QyMDE5SW1hZ2VVcmwiLCJsYXVzZDIwMjJJbWFnZVVybCIsIkNVUlJFTlRfVkVSU0lPTiIsIlNjaG9vbG9neVRoZW1lIiwicGxhY2Vob2xkZXJVcmwiLCJkZWZhdWx0RG9tYWluIiwiX19zdG9yYWdlIiwiaXNMQVVTRCIsIl9jIiwiX2QiLCJzdG9yYWdlIiwic3luYyIsImluaXRpYWxpemVBbmFseXRpY3MiLCJkb2N1bWVudENvbnRleHQiLCJpc0FuYWx5dGljc0VuYWJsZWQiLCJnZXRCcm93c2VyIiwiYW5hbHl0aWNzIiwic2VsZWN0ZWRUaGVtZSIsInNlbGVjdGVkQmV0YSIsImJldGEiLCJjdXJyZW50VmVyc2lvbiIsImdldE1hbmlmZXN0IiwidmVyc2lvbiIsIm5ld1ZlcnNpb24iLCJyYW5kb21Vc2VySWQiLCJnZXRBbmFseXRpY3NVc2VySWQiLCJ0aGVtZUlzTW9kZXJuIiwiZ2V0QXR0cmlidXRlIiwic2V0Q1NTVmFyaWFibGUiLCJkZWZhdWx0Iiwicm91bmRTbGlkZXIiLCJfaW52ZXJ0UmFuZ2UiLCJzbGlkZSIsImh1ZVNsaWRlckV2ZW50IiwiY29sb3JSYWluYm93SHVlVmFsdWUiLCJzbGlkZXJUeXBlIiwiaGFuZGxlU2hhcGUiLCJyYWRpdXMiLCJzdGFydEFuZ2xlIiwiZHJhZyIsImNpcmNsZVJhbmdlU2xpZGVyRXZlbnQiLCJxdWVyeVNlbGVjdG9yIiwibWFyZ2luIiwicmFuZ2UiLCJyYW5nZVNsaWRlckV2ZW50IiwidmFsdWVzIiwiaW5pdGlhbGl6ZURyYWdBbmREcm9wIiwidGhlbWVDdXJzb3IiLCJ0aGVtZUxvZ28iLCJhZGRFdmVudExpc3RlbmVyIiwidXBsb2FkQW5kUGFzdGUiLCJvbmlucHV0IiwiZ2V0RWxlbWVudEJ5SWQiLCJkYXRhc2V0IiwibGFiZWwiLCJ0ZXh0Q29udGVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJERUZBVUxUX1RIRU1FUyIsImRlZmF1bHRUaGVtZXMiLCJuYW1lIiwiTEFVU0RfVEhFTUVTIiwiaW5jbHVkZXMiLCJhbGxUaGVtZXMiLCJERUZBVUxUX1RIRU1FX05BTUUiLCJ0aGVtZXMiLCJ0aGVtZUl0ZW0iLCJvbmNsaWNrIiwiYXBwbHlUaGVtZSIsImVsZW0iLCJwYXJlbnRFbGVtZW50IiwiY2hpbGRyZW4iLCJjbGFzc0xpc3QiLCJhZGQiLCJDTEFTU0lDX1RIRU1FUyIsInRvb2x0aXAiLCJwcm9wcyIsIkNvbmZpcm1Nb2RhbCIsIm9wZW4iLCJ0cmFja0V2ZW50IiwibGVnYWN5VGFyZ2V0IiwibGVnYWN5QWN0aW9uIiwibGVnYWN5TGFiZWwiLCJsb2NhdGlvbiIsImhyZWYiLCJhcHBsaWVkUHJvcHMiLCJjcmVhdGVBY3Rpb25CdXR0b24iLCJwcm9wZXJ0aWVzIiwiYnV0dG9uc0RpdiIsImFwcGVuZENoaWxkIiwic2hhcmVCdXR0b24iLCJjb3B5VGhlbWVUb0NsaXBib2FyZCIsImRlbGV0ZVRoZW1lIiwiZWRpdFRoZW1lIiwidGhlbWVzTGlzdCIsImZyb20iLCJ4IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJUb29sdGlwIiwiaW5pdCIsIm91dER1cmF0aW9uIiwiaW5EdXJhdGlvbiIsImVudGVyRGVsYXkiLCJleGl0RGVsYXkiLCJlbGVtcyIsIkZsb2F0aW5nQWN0aW9uQnV0dG9uIiwiZGlyZWN0aW9uIiwiaG92ZXJFbmFibGVkIiwicmFpbmJvd0ludGVydmFsIiwidGhlbWVOYW1lIiwidGhlbWVIdWUiLCJ0aGVtZVNjaG9vbG9neVBsdXNMb2dvIiwidGhlbWVTY2hvb2xvZ3lMb2dvIiwidGhlbWVMQVVTRExvZ28yMDIyIiwidGhlbWVOZXdMQVVTRExvZ28iLCJ0aGVtZUxBVVNETG9nbyIsInRoZW1lRGVmYXVsdExvZ28iLCJ0aGVtZUN1c3RvbUxvZ28iLCJ0aGVtZUNvbG9ySHVlIiwidGhlbWVDb2xvckN1c3RvbSIsInRoZW1lQ29sb3JSYWluYm93IiwidGhlbWVDb2xvckN1c3RvbVdyYXBwZXIiLCJ0aGVtZUNvbG9yUmFpbmJvd1dyYXBwZXIiLCJjb2xvclJhaW5ib3dIdWVBbmltYXRlIiwiY29sb3JSYWluYm93U2F0dXJhdGlvbkFuaW1hdGUiLCJjb2xvclJhaW5ib3dMaWdodG5lc3NBbmltYXRlIiwiY29sb3JSYWluYm93SHVlQW5pbWF0ZVdyYXBwZXIiLCJjb2xvclJhaW5ib3dTYXR1cmF0aW9uQW5pbWF0ZVdyYXBwZXIiLCJjb2xvclJhaW5ib3dMaWdodG5lc3NBbmltYXRlV3JhcHBlciIsImNvbG9yUmFpbmJvd0h1ZVNwZWVkIiwiY29sb3JSYWluYm93SHVlUHJldmlldyIsImNvbG9yUmFpbmJvd1NhdHVyYXRpb25TcGVlZCIsImNvbG9yUmFpbmJvd1NhdHVyYXRpb25WYWx1ZSIsImNvbG9yUmFpbmJvd0xpZ2h0bmVzc1NwZWVkIiwiY29sb3JSYWluYm93TGlnaHRuZXNzVmFsdWUiLCJjb2xvclJhaW5ib3dIdWVBbHRlcm5hdGUiLCJjb2xvclJhaW5ib3dTYXR1cmF0aW9uQWx0ZXJuYXRlIiwiY29sb3JSYWluYm93TGlnaHRuZXNzQWx0ZXJuYXRlIiwiY29sb3JSYWluYm93SHVlUmFuZ2UiLCJjb2xvclJhaW5ib3dTYXR1cmF0aW9uUmFuZ2UiLCJjb2xvclJhaW5ib3dMaWdodG5lc3NSYW5nZSIsInRoZW1lSHVlV3JhcHBlciIsInRoZW1lTG9nb1dyYXBwZXIiLCJwcmV2aWV3U2VjdGlvbiIsInRoZW1lc0xpc3RTZWN0aW9uIiwidGhlbWVFZGl0b3JTZWN0aW9uIiwidGVzdEljb24iLCJpY29uTGlzdCIsImljb25MaXN0VGFibGUiLCJhZGRJY29uIiwiaWNvblRlc3RUZXh0IiwiaWNvblByZXZpZXciLCJ0cnlTYXZlVGhlbWUiLCJyZWxvYWQiLCJpbkVkaXRNb2RlIiwiU2V0dGluZ3NNb2RhbCIsIlByb21wdE1vZGFsIiwiaW1wb3J0QW5kUmVuZGVyIiwiSlNPTiIsInBhcnNlIiwic2F2ZVRoZW1lIiwiZXJyb3JzIiwiY3JlYXRlUHJlc2V0RGFya1RoZW1lIiwiY3JlYXRlUHJlc2V0TGlnaHRUaGVtZSIsImNyZWF0ZVByZXNldFJhaW5ib3dUaGVtZSIsInByZXZpZXdQYWdlIiwibGFzdFNlbGVjdGVkVGVtcGxhdGUiLCJtb2Rlcm5FbmFibGUiLCJjaGVja2VkIiwibW9kZXJuV3JhcHBlciIsIm1vZGVybkJvcmRlclJhZGl1c1ZhbHVlIiwibW9kZXJuQm9yZGVyU2l6ZVZhbHVlIiwibW9kZXJuUGFkZGluZ1ZhbHVlIiwicHJldmlld01vZGFsIiwiVGhlbWVFZGl0b3JNb2RhbCIsIkVMRU1FTlQiLCJDT05URU5UX0NPTlRBSU5FUiIsIkJVVFRPTlNfQ09OVEFJTkVSIiwiY29udGVudCIsImJ1dHRvbnMiLCJjYWxsYmFjayIsImlubmVySFRNTCIsInNlbGVjdGVkIiwiTW9kYWwiLCJvbkNsb3NlRW5kIiwidGl0bGUiLCJwbGFjZWhvbGRlciIsImh0bWxUb0VsZW1lbnQiLCJvcmlnVGhlbWVOYW1lIiwid2FybmluZ3MiLCJvdXRwdXQiLCJpbXBvcnRUaGVtZUZyb21PdXRwdXQiLCJjbGlwYm9hcmREYXRhIiwiZ2V0RGF0YSIsInVwZGF0ZU91dHB1dCIsIlRhYnMiLCJvblNob3ciLCJuZXd0YWIiLCJwYXJzZUpTT05PYmplY3QiLCJvYmplY3QiLCJfZSIsIl9mIiwiX2giLCJfaiIsIl9rIiwiX2wiLCJfbSIsIl9vIiwiX3AiLCJfcSIsIl9zIiwiX3QiLCJfdSIsIl92IiwiX3ciLCJfeCIsIl95IiwiX3oiLCJfMCIsIl8xIiwibG9nbyIsInByZXNldCIsInVybCIsImN1c3RvbSIsImtleXMiLCJyYWluYm93IiwiYW5pbWF0ZSIsInNwZWVkIiwiYWx0ZXJuYXRlIiwidSIsInNhdHVyYXRpb24iLCJsaWdodG5lc3MiLCJtb2Rlcm4iLCJtb2Rlcm5Db2xvck1hcCIsIm1vZGVybk9wdGlvbiIsIm9wdGlvbnMiLCJib3JkZXJSYWRpdXMiLCJib3JkZXJTaXplIiwicGFkZGluZyIsImVsIiwiaWNvbnMiLCJyb3ciLCJyZWdleCIsInNyYyIsImN1cnNvciIsInByaW1hcnkiLCJ1cGRhdGVUZXh0RmllbGRzIiwicmVuZGVyVGhlbWUiLCJ1cGRhdGVQcmV2aWV3IiwiZ2VuZXJhdGVFcnJvcnMiLCJtaWdyYXRlZFRoZW1lIiwibWlncmF0ZVRoZW1lIiwibG9hZEZyb21PYmplY3QiLCJpbXBvcnRUaGVtZUZyb21PYmplY3QiLCJEcm9wZG93biIsImNvbnN0cmFpbldpZHRoIiwiaW5pdFBpY2tlciIsIm9udXBkYXRlIiwibWF4UGFsZXR0ZVNpemUiLCJjbGVhckludGVydmFsIiwiVGhlbWVDb2xvciIsIkN1c3RvbUNvbG9yRGVmaW5pdGlvbiIsImJhY2tncm91bmQiLCJob3ZlciIsImJvcmRlciIsImxpbmsiLCJSYWluYm93Q29sb3JEZWZpbml0aW9uIiwiUmFpbmJvd0NvbG9yQ29tcG9uZW50RGVmaW5pdGlvbiIsIlJhaW5ib3dDb2xvckNvbXBvbmVudEFuaW1hdGlvbiIsInN0ZXBzIiwiTnVtYmVyIiwidGltZSIsIkRhdGUiLCJ2YWx1ZU9mIiwiZ2V0Q29tcG9uZW50VmFsdWUiLCJzZXRQcm9wZXJ0eSIsImFuaW1hdGVPYmplY3QiLCJnZW5lcmF0ZVJhaW5ib3dGdW5jdGlvbiIsInNldEludGVydmFsIiwic2V0QXR0cmlidXRlIiwiTW9kZXJuQ29sb3JEZWZpbml0aW9uIiwiY2FsZW5kYXIiLCJpbnRlcmZhY2UiLCJNb2Rlcm5JbnRlcmZhY2VDb2xvckRlZmluaXRpb24iLCJNb2Rlcm5UZXh0Q29sb3JEZWZpbml0aW9uIiwiTW9kZXJuT3B0aW9uc0RlZmluaXRpb24iLCJkYXJrIiwia2V5IiwiVGhlbWVMb2dvIiwiY2hlY2tJbWFnZSIsImltZyIsIlRoZW1lQ3Vyc29yIiwicm93cyIsImN1c3RvbUljb25zIiwiZmlyc3QiLCJjZWxscyIsInBhdHRlcm4iLCJUaGVtZUljb24iLCJ1cGRhdGVKU09OIiwic3RyaW5naWZ5Iiwid2FybmluZ0NhcmQiLCJkaXNwbGF5IiwiZXJyb3JDYXJkIiwidGV4dGFyZWFBdXRvUmVzaXplIiwiZXJyIiwiYWxlcnQiLCJpbXBvcnRlZCIsInJhd1RoZW1lIiwiZG9TYXZlIiwiZmlsdGVyIiwiaGFuZGxlRXJyb3IiLCJsYXN0RXJyb3IiLCJtZXNzYWdlIiwiayIsImltYWdlU3JjIiwidmFsaWRDYWxsYmFjayIsImludmFsaWRDYWxsYmFjayIsIkltYWdlIiwib25sb2FkIiwib25lcnJvciIsInJlcGxhY2VOYW1lIiwidGhlbWVUb0xvYWQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJ0ciIsInByZXZpZXciLCJtb3ZlRG93biIsIm1vdmVVcCIsImRlbGV0ZUljb24iLCJwbGFpblRleHRQYXN0ZSIsImFyciIsInBhc3RlRXZlbnQiLCJpdGVtcyIsImJsb2IiLCJnZXRBc0ZpbGUiLCJwYXN0ZUVsZW1lbnQiLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwib3JpZ2luYWxUZXh0IiwidG9hc3QiLCJkaXNwbGF5TGVuZ3RoIiwiTUFYX1NBRkVfSU5URUdFUiIsImltZ3VyVXBsb2FkIiwiZGlzbWlzcyIsInF1ZXJ5Q29tbWFuZFN1cHBvcnRlZCIsImV4ZWNDb21tYW5kIiwiZXJyb3IiLCJyZWFkQXNEYXRhVVJMIiwidGFnTmFtZSIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwiZ2V0SW5zdGFuY2UiLCJvdXRlckhUTUwiLCJpY29uUGF0dGVybiIsInVzZURlZmF1bHRJY29uU2V0IiwiREVGQVVMVF9JQ09OUyIsImNvcHlGcm9tIiwic2VsZWN0IiwicHJldmVudERlZmF1bHRzIiwidW5oaWdobGlnaHQiLCJyZWdpb24iLCJ0ZW1wbGF0ZSIsInRyaW0iLCJmaXJzdENoaWxkIiwiYmFzZTY0IiwiZXJyb3JDYWxsYmFjayIsImRvVXBsb2FkIiwiZmV0Y2giLCJtb2RlIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJpbWFnZSIsInJlc3BvbnNlIiwic3RhdHVzVGV4dCIsImpzb24iLCJjYXRjaCIsIkxvZ2dlciIsImxvZyIsImdldEl0ZW0iLCJzZXRJdGVtIiwicHJvcGVydHkiLCJmb3JFYWNoIiwiZXZlbnROYW1lIiwiaGlnaGxpZ2h0IiwiZGF0YVRyYW5zZmVyIiwiZmlsZXMiLCJmaWxlIiwib25sb2FkZW5kIiwic3VjY2VzcyIsImdldEFzU3RyaW5nIiwiaGFuZGxlRHJvcCIsInVpIiwiX19yZXN0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJsZWdhY3lWYWx1ZSIsImNvbnNvbGUiLCJkZWJ1ZyIsImxvY2FsIiwicmFuZG9tUG9vbCIsIlVpbnQ4QXJyYXkiLCJjcnlwdG8iLCJnZXRSYW5kb21WYWx1ZXMiLCJnZXRSYW5kb21Ub2tlbiIsImd0YWciLCJnbG9iYWxUaGlzIiwiZGF0YUxheWVyIiwidHJhY2tDbGljayIsImlzVHJ1c3RlZCIsImN1cnJlbnRUYXJnZXQiLCJzcGx1c1RyYWNraW5nSWQiLCJzcGx1c1RyYWNraW5nQ29udGV4dCIsInNwbHVzVHJhY2tpbmdWYWx1ZSIsInBhZ2VfbG9jYXRpb24iLCJwYWdlX3BhdGgiLCJwYXRobmFtZSIsInBhZ2VfdGl0bGUiLCJ1c2VyX2lkIiwidXNlcl9wcm9wZXJ0aWVzIiwiYWN0aXZlQmV0YSIsImxhc3RFbmFibGVkVmVyc2lvbiIsImV4dGVuc2lvblZlcnNpb24iLCJkb21haW4iLCJob3N0IiwibW9kZXJuVGhlbWUiLCJleHRyYVByb3BzIiwiZXZlbnREYXRhIiwiYXNzaWduIiwidHJhY2tlZEVsZW1lbnRzIiwiU2V0Iiwib2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwibXV0YXRpb25zIiwibXV0YXRpb25PYnNlcnZlciIsImhhcyIsInJlYWR5U3RhdGVDaGVja0ludGVydmFsIiwicmVhZHlTdGF0ZSIsIm9ic2VydmUiLCJjaGlsZExpc3QiLCJzdWJ0cmVlIiwiZW5hYmxlQW5hbHl0aWNzIiwiRElTQ09SRF9VUkwiLCJFWFRFTlNJT05fV0VCU0lURSIsIkVYVEVOU0lPTl9OQU1FIiwic291cmNlIiwiYWNjZW50Iiwic2Vjb25kYXJ5IiwiYWN0aXZlIiwiZ3JhZGVzIiwibXV0ZWQiLCJjb250cmFzdCIsInRhZyIsIkZ1bmN0aW9uIiwic3VicHJvcGVydHkiLCJjaGlsZCIsImNyZWF0ZUJ1dHRvbiIsImNyZWF0ZVN2Z0xvZ28iLCJjbGFzc2VzIiwiY2lyY2xlIiwiY3JlYXRlRWxlbWVudE5TIiwibGluZTEiLCJsaW5lMiIsInN2ZyIsIndhaXRGb3JFbGVtZW50IiwiZ2V0UGFyZW50cyIsImlzVmlzaWJsZSIsImNyZWF0ZUJ1dHRvbldpdGhMb2dvIiwidmVydGljYWxBbGlnbiIsInBhZGRpbmdMZWZ0IiwicHJlcGVuZCIsImJ1dHRvbklucHV0IiwiYnJvd3NlciIsIm9mZnNldFdpZHRoIiwib2Zmc2V0SGVpZ2h0IiwiZ2V0Q2xpZW50UmVjdHMiLCJzZWxlY3RvciIsImZpcnN0Q2hhciIsInBhcmVudHMiLCJoYXNBdHRyaWJ1dGUiLCJjaGVja19pbnRlcnZhbCIsImludGVydmFsIiwiY3JlYXRlTG9nUHJlZml4IiwiaW5mbyIsIndhcm4iLCJ0cmFjZSIsImNvbnN0cnVjdG9yIiwiaW50ZXJmYWNlQ29sb3JzIiwibG9hZEFycmF5RnJvbU9iamVjdCIsImFycmF5IiwibW9kdWxlIiwiTSIsImpRdWVyeSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iXSwic291cmNlUm9vdCI6IiJ9